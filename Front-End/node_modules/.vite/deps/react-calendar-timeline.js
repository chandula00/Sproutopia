import {
  require_react
} from "./chunk-6CE3F7YD.js";
import {
  __commonJS,
  __esm,
  __export,
  __require,
  __toCommonJS
} from "./chunk-TFWDKVI3.js";

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module2) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject2(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from2;
      var to2 = toObject2(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from2 = Object(arguments[s]);
        for (var key in from2) {
          if (hasOwnProperty.call(from2, key)) {
            to2[key] = from2[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from2);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from2, symbols[i])) {
              to2[symbols[i]] = from2[symbols[i]];
            }
          }
        }
      }
      return to2;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module2) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module2.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module2) {
    module2.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module2) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module2.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module2) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module2.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module2) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module2.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module2.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/interactjs/dist/interact.min.js
var require_interact_min = __commonJS({
  "node_modules/interactjs/dist/interact.min.js"(exports, module2) {
    !function(t) {
      "object" == typeof exports && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define([], t) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).interact = t();
    }(function() {
      var t = {};
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0, t.default = function(t2) {
        return !(!t2 || !t2.Window) && t2 instanceof t2.Window;
      };
      var e = {};
      Object.defineProperty(e, "__esModule", { value: true }), e.getWindow = function(e2) {
        return (0, t.default)(e2) ? e2 : (e2.ownerDocument || e2).defaultView || r.window;
      }, e.init = o, e.window = e.realWindow = void 0;
      var n = void 0;
      e.realWindow = n;
      var r = void 0;
      function o(t2) {
        e.realWindow = n = t2;
        var o2 = t2.document.createTextNode("");
        o2.ownerDocument !== t2.document && "function" == typeof t2.wrap && t2.wrap(o2) === o2 && (t2 = t2.wrap(t2)), e.window = r = t2;
      }
      e.window = r, "undefined" != typeof window && window && o(window);
      var i = {};
      function a(t2) {
        return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, a(t2);
      }
      Object.defineProperty(i, "__esModule", { value: true }), i.default = void 0;
      var s = function(t2) {
        return !!t2 && "object" === a(t2);
      }, l = function(t2) {
        return "function" == typeof t2;
      }, u = { window: function(n2) {
        return n2 === e.window || (0, t.default)(n2);
      }, docFrag: function(t2) {
        return s(t2) && 11 === t2.nodeType;
      }, object: s, func: l, number: function(t2) {
        return "number" == typeof t2;
      }, bool: function(t2) {
        return "boolean" == typeof t2;
      }, string: function(t2) {
        return "string" == typeof t2;
      }, element: function(t2) {
        if (!t2 || "object" !== a(t2))
          return false;
        var n2 = e.getWindow(t2) || e.window;
        return /object|function/.test("undefined" == typeof Element ? "undefined" : a(Element)) ? t2 instanceof Element || t2 instanceof n2.Element : 1 === t2.nodeType && "string" == typeof t2.nodeName;
      }, plainObject: function(t2) {
        return s(t2) && !!t2.constructor && /function Object\b/.test(t2.constructor.toString());
      }, array: function(t2) {
        return s(t2) && void 0 !== t2.length && l(t2.splice);
      } };
      i.default = u;
      var c = {};
      function f(t2) {
        var e2 = t2.interaction;
        if ("drag" === e2.prepared.name) {
          var n2 = e2.prepared.axis;
          "x" === n2 ? (e2.coords.cur.page.y = e2.coords.start.page.y, e2.coords.cur.client.y = e2.coords.start.client.y, e2.coords.velocity.client.y = 0, e2.coords.velocity.page.y = 0) : "y" === n2 && (e2.coords.cur.page.x = e2.coords.start.page.x, e2.coords.cur.client.x = e2.coords.start.client.x, e2.coords.velocity.client.x = 0, e2.coords.velocity.page.x = 0);
        }
      }
      function d(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction;
        if ("drag" === n2.prepared.name) {
          var r2 = n2.prepared.axis;
          if ("x" === r2 || "y" === r2) {
            var o2 = "x" === r2 ? "y" : "x";
            e2.page[o2] = n2.coords.start.page[o2], e2.client[o2] = n2.coords.start.client[o2], e2.delta[o2] = 0;
          }
        }
      }
      Object.defineProperty(c, "__esModule", { value: true }), c.default = void 0;
      var p = { id: "actions/drag", install: function(t2) {
        var e2 = t2.actions, n2 = t2.Interactable, r2 = t2.defaults;
        n2.prototype.draggable = p.draggable, e2.map.drag = p, e2.methodDict.drag = "draggable", r2.actions.drag = p.defaults;
      }, listeners: { "interactions:before-action-move": f, "interactions:action-resume": f, "interactions:action-move": d, "auto-start:check": function(t2) {
        var e2 = t2.interaction, n2 = t2.interactable, r2 = t2.buttons, o2 = n2.options.drag;
        if (o2 && o2.enabled && (!e2.pointerIsDown || !/mouse|pointer/.test(e2.pointerType) || 0 != (r2 & n2.options.drag.mouseButtons)))
          return t2.action = { name: "drag", axis: "start" === o2.lockAxis ? o2.startAxis : o2.lockAxis }, false;
      } }, draggable: function(t2) {
        return i.default.object(t2) ? (this.options.drag.enabled = false !== t2.enabled, this.setPerAction("drag", t2), this.setOnEvents("drag", t2), /^(xy|x|y|start)$/.test(t2.lockAxis) && (this.options.drag.lockAxis = t2.lockAxis), /^(xy|x|y)$/.test(t2.startAxis) && (this.options.drag.startAxis = t2.startAxis), this) : i.default.bool(t2) ? (this.options.drag.enabled = t2, this) : this.options.drag;
      }, beforeMove: f, move: d, defaults: { startAxis: "xy", lockAxis: "xy" }, getCursor: function() {
        return "move";
      } }, v = p;
      c.default = v;
      var h = {};
      Object.defineProperty(h, "__esModule", { value: true }), h.default = void 0;
      var g = { init: function(t2) {
        var e2 = t2;
        g.document = e2.document, g.DocumentFragment = e2.DocumentFragment || y, g.SVGElement = e2.SVGElement || y, g.SVGSVGElement = e2.SVGSVGElement || y, g.SVGElementInstance = e2.SVGElementInstance || y, g.Element = e2.Element || y, g.HTMLElement = e2.HTMLElement || g.Element, g.Event = e2.Event, g.Touch = e2.Touch || y, g.PointerEvent = e2.PointerEvent || e2.MSPointerEvent;
      }, document: null, DocumentFragment: null, SVGElement: null, SVGSVGElement: null, SVGElementInstance: null, Element: null, HTMLElement: null, Event: null, Touch: null, PointerEvent: null };
      function y() {
      }
      var m = g;
      h.default = m;
      var b = {};
      Object.defineProperty(b, "__esModule", { value: true }), b.default = void 0;
      var x = { init: function(t2) {
        var e2 = h.default.Element, n2 = t2.navigator || {};
        x.supportsTouch = "ontouchstart" in t2 || i.default.func(t2.DocumentTouch) && h.default.document instanceof t2.DocumentTouch, x.supportsPointerEvent = false !== n2.pointerEnabled && !!h.default.PointerEvent, x.isIOS = /iP(hone|od|ad)/.test(n2.platform), x.isIOS7 = /iP(hone|od|ad)/.test(n2.platform) && /OS 7[^\d]/.test(n2.appVersion), x.isIe9 = /MSIE 9/.test(n2.userAgent), x.isOperaMobile = "Opera" === n2.appName && x.supportsTouch && /Presto/.test(n2.userAgent), x.prefixedMatchesSelector = "matches" in e2.prototype ? "matches" : "webkitMatchesSelector" in e2.prototype ? "webkitMatchesSelector" : "mozMatchesSelector" in e2.prototype ? "mozMatchesSelector" : "oMatchesSelector" in e2.prototype ? "oMatchesSelector" : "msMatchesSelector", x.pEventTypes = x.supportsPointerEvent ? h.default.PointerEvent === t2.MSPointerEvent ? { up: "MSPointerUp", down: "MSPointerDown", over: "mouseover", out: "mouseout", move: "MSPointerMove", cancel: "MSPointerCancel" } : { up: "pointerup", down: "pointerdown", over: "pointerover", out: "pointerout", move: "pointermove", cancel: "pointercancel" } : null, x.wheelEvent = h.default.document && "onmousewheel" in h.default.document ? "mousewheel" : "wheel";
      }, supportsTouch: null, supportsPointerEvent: null, isIOS7: null, isIOS: null, isIe9: null, isOperaMobile: null, prefixedMatchesSelector: null, pEventTypes: null, wheelEvent: null }, w = x;
      b.default = w;
      var _ = {};
      function P(t2) {
        var e2 = t2.parentNode;
        if (i.default.docFrag(e2)) {
          for (; (e2 = e2.host) && i.default.docFrag(e2); )
            ;
          return e2;
        }
        return e2;
      }
      function O(t2, n2) {
        return e.window !== e.realWindow && (n2 = n2.replace(/\/deep\//g, " ")), t2[b.default.prefixedMatchesSelector](n2);
      }
      Object.defineProperty(_, "__esModule", { value: true }), _.closest = function(t2, e2) {
        for (; i.default.element(t2); ) {
          if (O(t2, e2))
            return t2;
          t2 = P(t2);
        }
        return null;
      }, _.getActualElement = function(t2) {
        return t2.correspondingUseElement || t2;
      }, _.getElementClientRect = j, _.getElementRect = function(t2) {
        var n2 = j(t2);
        if (!b.default.isIOS7 && n2) {
          var r2 = T(e.getWindow(t2));
          n2.left += r2.x, n2.right += r2.x, n2.top += r2.y, n2.bottom += r2.y;
        }
        return n2;
      }, _.getPath = function(t2) {
        for (var e2 = []; t2; )
          e2.push(t2), t2 = P(t2);
        return e2;
      }, _.getScrollXY = T, _.indexOfDeepestElement = function(t2) {
        for (var n2, r2 = [], o2 = 0; o2 < t2.length; o2++) {
          var i2 = t2[o2], a2 = t2[n2];
          if (i2 && o2 !== n2)
            if (a2) {
              var s2 = E(i2), l2 = E(a2);
              if (s2 !== i2.ownerDocument)
                if (l2 !== i2.ownerDocument)
                  if (s2 !== l2) {
                    r2 = r2.length ? r2 : S(a2);
                    var u2 = void 0;
                    if (a2 instanceof h.default.HTMLElement && i2 instanceof h.default.SVGElement && !(i2 instanceof h.default.SVGSVGElement)) {
                      if (i2 === l2)
                        continue;
                      u2 = i2.ownerSVGElement;
                    } else
                      u2 = i2;
                    for (var c2 = S(u2, a2.ownerDocument), f2 = 0; c2[f2] && c2[f2] === r2[f2]; )
                      f2++;
                    var d2 = [c2[f2 - 1], c2[f2], r2[f2]];
                    if (d2[0])
                      for (var p2 = d2[0].lastChild; p2; ) {
                        if (p2 === d2[1]) {
                          n2 = o2, r2 = c2;
                          break;
                        }
                        if (p2 === d2[2])
                          break;
                        p2 = p2.previousSibling;
                      }
                  } else
                    v2 = i2, g2 = a2, void 0, void 0, (parseInt(e.getWindow(v2).getComputedStyle(v2).zIndex, 10) || 0) >= (parseInt(e.getWindow(g2).getComputedStyle(g2).zIndex, 10) || 0) && (n2 = o2);
                else
                  n2 = o2;
            } else
              n2 = o2;
        }
        var v2, g2;
        return n2;
      }, _.matchesSelector = O, _.matchesUpTo = function(t2, e2, n2) {
        for (; i.default.element(t2); ) {
          if (O(t2, e2))
            return true;
          if ((t2 = P(t2)) === n2)
            return O(t2, e2);
        }
        return false;
      }, _.nodeContains = function(t2, e2) {
        if (t2.contains)
          return t2.contains(e2);
        for (; e2; ) {
          if (e2 === t2)
            return true;
          e2 = e2.parentNode;
        }
        return false;
      }, _.parentNode = P, _.trySelector = function(t2) {
        return !!i.default.string(t2) && (h.default.document.querySelector(t2), true);
      };
      var E = function(t2) {
        return t2.parentNode || t2.host;
      };
      function S(t2, e2) {
        for (var n2, r2 = [], o2 = t2; (n2 = E(o2)) && o2 !== e2 && n2 !== o2.ownerDocument; )
          r2.unshift(o2), o2 = n2;
        return r2;
      }
      function T(t2) {
        return { x: (t2 = t2 || e.window).scrollX || t2.document.documentElement.scrollLeft, y: t2.scrollY || t2.document.documentElement.scrollTop };
      }
      function j(t2) {
        var e2 = t2 instanceof h.default.SVGElement ? t2.getBoundingClientRect() : t2.getClientRects()[0];
        return e2 && { left: e2.left, right: e2.right, top: e2.top, bottom: e2.bottom, width: e2.width || e2.right - e2.left, height: e2.height || e2.bottom - e2.top };
      }
      var M = {};
      Object.defineProperty(M, "__esModule", { value: true }), M.default = function(t2, e2) {
        for (var n2 in e2)
          t2[n2] = e2[n2];
        return t2;
      };
      var k = {};
      function I(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var n2 = 0, r2 = Array(e2); n2 < e2; n2++)
          r2[n2] = t2[n2];
        return r2;
      }
      function D(t2, e2, n2) {
        return "parent" === t2 ? (0, _.parentNode)(n2) : "self" === t2 ? e2.getRect(n2) : (0, _.closest)(n2, t2);
      }
      Object.defineProperty(k, "__esModule", { value: true }), k.addEdges = function(t2, e2, n2) {
        t2.left && (e2.left += n2.x), t2.right && (e2.right += n2.x), t2.top && (e2.top += n2.y), t2.bottom && (e2.bottom += n2.y), e2.width = e2.right - e2.left, e2.height = e2.bottom - e2.top;
      }, k.getStringOptionResult = D, k.rectToXY = function(t2) {
        return t2 && { x: "x" in t2 ? t2.x : t2.left, y: "y" in t2 ? t2.y : t2.top };
      }, k.resolveRectLike = function(t2, e2, n2, r2) {
        var o2, a2 = t2;
        return i.default.string(a2) ? a2 = D(a2, e2, n2) : i.default.func(a2) && (a2 = a2.apply(void 0, function(t3) {
          if (Array.isArray(t3))
            return I(t3);
        }(o2 = r2) || function(t3) {
          if ("undefined" != typeof Symbol && null != t3[Symbol.iterator] || null != t3["@@iterator"])
            return Array.from(t3);
        }(o2) || function(t3, e3) {
          if (t3) {
            if ("string" == typeof t3)
              return I(t3, e3);
            var n3 = Object.prototype.toString.call(t3).slice(8, -1);
            return "Object" === n3 && t3.constructor && (n3 = t3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(t3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? I(t3, e3) : void 0;
          }
        }(o2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }())), i.default.element(a2) && (a2 = (0, _.getElementRect)(a2)), a2;
      }, k.tlbrToXywh = function(t2) {
        return !t2 || "x" in t2 && "y" in t2 || ((t2 = (0, M.default)({}, t2)).x = t2.left || 0, t2.y = t2.top || 0, t2.width = t2.width || (t2.right || 0) - t2.x, t2.height = t2.height || (t2.bottom || 0) - t2.y), t2;
      }, k.xywhToTlbr = function(t2) {
        return !t2 || "left" in t2 && "top" in t2 || ((t2 = (0, M.default)({}, t2)).left = t2.x || 0, t2.top = t2.y || 0, t2.right = t2.right || t2.left + t2.width, t2.bottom = t2.bottom || t2.top + t2.height), t2;
      };
      var A = {};
      Object.defineProperty(A, "__esModule", { value: true }), A.default = function(t2, e2, n2) {
        var r2 = t2.options[n2], o2 = r2 && r2.origin || t2.options.origin, i2 = (0, k.resolveRectLike)(o2, t2, e2, [t2 && e2]);
        return (0, k.rectToXY)(i2) || { x: 0, y: 0 };
      };
      var z = {};
      function C(t2) {
        return t2.trim().split(/ +/);
      }
      Object.defineProperty(z, "__esModule", { value: true }), z.default = function t2(e2, n2, r2) {
        if (r2 = r2 || {}, i.default.string(e2) && -1 !== e2.search(" ") && (e2 = C(e2)), i.default.array(e2))
          return e2.reduce(function(e3, o3) {
            return (0, M.default)(e3, t2(o3, n2, r2));
          }, r2);
        if (i.default.object(e2) && (n2 = e2, e2 = ""), i.default.func(n2))
          r2[e2] = r2[e2] || [], r2[e2].push(n2);
        else if (i.default.array(n2))
          for (var o2 = 0; o2 < n2.length; o2++) {
            var a2;
            a2 = n2[o2], t2(e2, a2, r2);
          }
        else if (i.default.object(n2))
          for (var s2 in n2) {
            var l2 = C(s2).map(function(t3) {
              return "".concat(e2).concat(t3);
            });
            t2(l2, n2[s2], r2);
          }
        return r2;
      };
      var R = {};
      Object.defineProperty(R, "__esModule", { value: true }), R.default = void 0, R.default = function(t2, e2) {
        return Math.sqrt(t2 * t2 + e2 * e2);
      };
      var F = {};
      Object.defineProperty(F, "__esModule", { value: true }), F.default = function(t2, e2) {
        t2.__set || (t2.__set = {});
        var n2 = function(n3) {
          "function" != typeof t2[n3] && "__set" !== n3 && Object.defineProperty(t2, n3, { get: function() {
            return n3 in t2.__set ? t2.__set[n3] : t2.__set[n3] = e2[n3];
          }, set: function(e3) {
            t2.__set[n3] = e3;
          }, configurable: true });
        };
        for (var r2 in e2)
          n2(r2);
        return t2;
      };
      var X = {};
      function B(t2) {
        return t2 instanceof h.default.Event || t2 instanceof h.default.Touch;
      }
      function Y(t2, e2, n2) {
        return t2 = t2 || "page", (n2 = n2 || {}).x = e2[t2 + "X"], n2.y = e2[t2 + "Y"], n2;
      }
      function W(t2, e2) {
        return e2 = e2 || { x: 0, y: 0 }, b.default.isOperaMobile && B(t2) ? (Y("screen", t2, e2), e2.x += window.scrollX, e2.y += window.scrollY) : Y("page", t2, e2), e2;
      }
      function L(t2, e2) {
        return e2 = e2 || {}, b.default.isOperaMobile && B(t2) ? Y("screen", t2, e2) : Y("client", t2, e2), e2;
      }
      function U(t2) {
        var e2 = [];
        return i.default.array(t2) ? (e2[0] = t2[0], e2[1] = t2[1]) : "touchend" === t2.type ? 1 === t2.touches.length ? (e2[0] = t2.touches[0], e2[1] = t2.changedTouches[0]) : 0 === t2.touches.length && (e2[0] = t2.changedTouches[0], e2[1] = t2.changedTouches[1]) : (e2[0] = t2.touches[0], e2[1] = t2.touches[1]), e2;
      }
      function V(t2) {
        for (var e2 = { pageX: 0, pageY: 0, clientX: 0, clientY: 0, screenX: 0, screenY: 0 }, n2 = 0; n2 < t2.length; n2++) {
          var r2 = t2[n2];
          for (var o2 in e2)
            e2[o2] += r2[o2];
        }
        for (var i2 in e2)
          e2[i2] /= t2.length;
        return e2;
      }
      Object.defineProperty(X, "__esModule", { value: true }), X.coordsToEvent = function(t2) {
        return { coords: t2, get page() {
          return this.coords.page;
        }, get client() {
          return this.coords.client;
        }, get timeStamp() {
          return this.coords.timeStamp;
        }, get pageX() {
          return this.coords.page.x;
        }, get pageY() {
          return this.coords.page.y;
        }, get clientX() {
          return this.coords.client.x;
        }, get clientY() {
          return this.coords.client.y;
        }, get pointerId() {
          return this.coords.pointerId;
        }, get target() {
          return this.coords.target;
        }, get type() {
          return this.coords.type;
        }, get pointerType() {
          return this.coords.pointerType;
        }, get buttons() {
          return this.coords.buttons;
        }, preventDefault: function() {
        } };
      }, X.copyCoords = function(t2, e2) {
        t2.page = t2.page || {}, t2.page.x = e2.page.x, t2.page.y = e2.page.y, t2.client = t2.client || {}, t2.client.x = e2.client.x, t2.client.y = e2.client.y, t2.timeStamp = e2.timeStamp;
      }, X.getClientXY = L, X.getEventTargets = function(t2) {
        var e2 = i.default.func(t2.composedPath) ? t2.composedPath() : t2.path;
        return [_.getActualElement(e2 ? e2[0] : t2.target), _.getActualElement(t2.currentTarget)];
      }, X.getPageXY = W, X.getPointerId = function(t2) {
        return i.default.number(t2.pointerId) ? t2.pointerId : t2.identifier;
      }, X.getPointerType = function(t2) {
        return i.default.string(t2.pointerType) ? t2.pointerType : i.default.number(t2.pointerType) ? [void 0, void 0, "touch", "pen", "mouse"][t2.pointerType] : /touch/.test(t2.type || "") || t2 instanceof h.default.Touch ? "touch" : "mouse";
      }, X.getTouchPair = U, X.getXY = Y, X.isNativePointer = B, X.newCoords = function() {
        return { page: { x: 0, y: 0 }, client: { x: 0, y: 0 }, timeStamp: 0 };
      }, X.pointerAverage = V, Object.defineProperty(X, "pointerExtend", { enumerable: true, get: function() {
        return F.default;
      } }), X.setCoordDeltas = function(t2, e2, n2) {
        t2.page.x = n2.page.x - e2.page.x, t2.page.y = n2.page.y - e2.page.y, t2.client.x = n2.client.x - e2.client.x, t2.client.y = n2.client.y - e2.client.y, t2.timeStamp = n2.timeStamp - e2.timeStamp;
      }, X.setCoordVelocity = function(t2, e2) {
        var n2 = Math.max(e2.timeStamp / 1e3, 1e-3);
        t2.page.x = e2.page.x / n2, t2.page.y = e2.page.y / n2, t2.client.x = e2.client.x / n2, t2.client.y = e2.client.y / n2, t2.timeStamp = n2;
      }, X.setCoords = function(t2, e2, n2) {
        var r2 = e2.length > 1 ? V(e2) : e2[0];
        W(r2, t2.page), L(r2, t2.client), t2.timeStamp = n2;
      }, X.setZeroCoords = function(t2) {
        t2.page.x = 0, t2.page.y = 0, t2.client.x = 0, t2.client.y = 0;
      }, X.touchAngle = function(t2, e2) {
        var n2 = e2 + "X", r2 = e2 + "Y", o2 = U(t2), i2 = o2[1][n2] - o2[0][n2], a2 = o2[1][r2] - o2[0][r2];
        return 180 * Math.atan2(a2, i2) / Math.PI;
      }, X.touchBBox = function(t2) {
        if (!t2.length)
          return null;
        var e2 = U(t2), n2 = Math.min(e2[0].pageX, e2[1].pageX), r2 = Math.min(e2[0].pageY, e2[1].pageY), o2 = Math.max(e2[0].pageX, e2[1].pageX), i2 = Math.max(e2[0].pageY, e2[1].pageY);
        return { x: n2, y: r2, left: n2, top: r2, right: o2, bottom: i2, width: o2 - n2, height: i2 - r2 };
      }, X.touchDistance = function(t2, e2) {
        var n2 = e2 + "X", r2 = e2 + "Y", o2 = U(t2), i2 = o2[0][n2] - o2[1][n2], a2 = o2[0][r2] - o2[1][r2];
        return (0, R.default)(i2, a2);
      };
      var N = {};
      function q(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function G(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(N, "__esModule", { value: true }), N.BaseEvent = void 0;
      var $ = function() {
        function t2(e3) {
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), G(this, "immediatePropagationStopped", false), G(this, "propagationStopped", false), this._interaction = e3;
        }
        var e2, n2;
        return e2 = t2, (n2 = [{ key: "preventDefault", value: function() {
        } }, { key: "stopPropagation", value: function() {
          this.propagationStopped = true;
        } }, { key: "stopImmediatePropagation", value: function() {
          this.immediatePropagationStopped = this.propagationStopped = true;
        } }]) && q(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      N.BaseEvent = $, Object.defineProperty($.prototype, "interaction", { get: function() {
        return this._interaction._proxy;
      }, set: function() {
      } });
      var H = {};
      Object.defineProperty(H, "__esModule", { value: true }), H.remove = H.merge = H.from = H.findIndex = H.find = H.contains = void 0, H.contains = function(t2, e2) {
        return -1 !== t2.indexOf(e2);
      }, H.remove = function(t2, e2) {
        return t2.splice(t2.indexOf(e2), 1);
      };
      var K = function(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          t2.push(r2);
        }
        return t2;
      };
      H.merge = K, H.from = function(t2) {
        return K([], t2);
      };
      var Z = function(t2, e2) {
        for (var n2 = 0; n2 < t2.length; n2++)
          if (e2(t2[n2], n2, t2))
            return n2;
        return -1;
      };
      H.findIndex = Z, H.find = function(t2, e2) {
        return t2[Z(t2, e2)];
      };
      var J = {};
      function Q(t2) {
        return Q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, Q(t2);
      }
      function tt(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function et(t2, e2) {
        return et = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, et(t2, e2);
      }
      function nt(t2, e2) {
        if (e2 && ("object" === Q(e2) || "function" == typeof e2))
          return e2;
        if (void 0 !== e2)
          throw new TypeError("Derived constructors may only return object or undefined");
        return rt(t2);
      }
      function rt(t2) {
        if (void 0 === t2)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      function ot(t2) {
        return ot = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, ot(t2);
      }
      function it(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(J, "__esModule", { value: true }), J.DropEvent = void 0;
      var at = function(t2) {
        !function(t3, e3) {
          if ("function" != typeof e3 && null !== e3)
            throw new TypeError("Super expression must either be null or a function");
          t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), Object.defineProperty(t3, "prototype", { writable: false }), e3 && et(t3, e3);
        }(a2, t2);
        var e2, n2, r2, o2, i2 = (r2 = a2, o2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }(), function() {
          var t3, e3 = ot(r2);
          if (o2) {
            var n3 = ot(this).constructor;
            t3 = Reflect.construct(e3, arguments, n3);
          } else
            t3 = e3.apply(this, arguments);
          return nt(this, t3);
        });
        function a2(t3, e3, n3) {
          var r3;
          !function(t4, e4) {
            if (!(t4 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, a2), it(rt(r3 = i2.call(this, e3._interaction)), "dropzone", void 0), it(rt(r3), "dragEvent", void 0), it(rt(r3), "relatedTarget", void 0), it(rt(r3), "draggable", void 0), it(rt(r3), "propagationStopped", false), it(rt(r3), "immediatePropagationStopped", false);
          var o3 = "dragleave" === n3 ? t3.prev : t3.cur, s2 = o3.element, l2 = o3.dropzone;
          return r3.type = n3, r3.target = s2, r3.currentTarget = s2, r3.dropzone = l2, r3.dragEvent = e3, r3.relatedTarget = e3.target, r3.draggable = e3.interactable, r3.timeStamp = e3.timeStamp, r3;
        }
        return e2 = a2, (n2 = [{ key: "reject", value: function() {
          var t3 = this, e3 = this._interaction.dropState;
          if ("dropactivate" === this.type || this.dropzone && e3.cur.dropzone === this.dropzone && e3.cur.element === this.target)
            if (e3.prev.dropzone = this.dropzone, e3.prev.element = this.target, e3.rejected = true, e3.events.enter = null, this.stopImmediatePropagation(), "dropactivate" === this.type) {
              var n3 = e3.activeDrops, r3 = H.findIndex(n3, function(e4) {
                var n4 = e4.dropzone, r4 = e4.element;
                return n4 === t3.dropzone && r4 === t3.target;
              });
              e3.activeDrops.splice(r3, 1);
              var o3 = new a2(e3, this.dragEvent, "dropdeactivate");
              o3.dropzone = this.dropzone, o3.target = this.target, this.dropzone.fire(o3);
            } else
              this.dropzone.fire(new a2(e3, this.dragEvent, "dragleave"));
        } }, { key: "preventDefault", value: function() {
        } }, { key: "stopPropagation", value: function() {
          this.propagationStopped = true;
        } }, { key: "stopImmediatePropagation", value: function() {
          this.immediatePropagationStopped = this.propagationStopped = true;
        } }]) && tt(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), a2;
      }(N.BaseEvent);
      J.DropEvent = at;
      var st = {};
      function lt(t2, e2) {
        for (var n2 = 0; n2 < t2.slice().length; n2++) {
          var r2 = t2.slice()[n2], o2 = r2.dropzone, i2 = r2.element;
          e2.dropzone = o2, e2.target = i2, o2.fire(e2), e2.propagationStopped = e2.immediatePropagationStopped = false;
        }
      }
      function ut(t2, e2) {
        for (var n2 = function(t3, e3) {
          for (var n3 = t3.interactables, r3 = [], o3 = 0; o3 < n3.list.length; o3++) {
            var a2 = n3.list[o3];
            if (a2.options.drop.enabled) {
              var s2 = a2.options.drop.accept;
              if (!(i.default.element(s2) && s2 !== e3 || i.default.string(s2) && !_.matchesSelector(e3, s2) || i.default.func(s2) && !s2({ dropzone: a2, draggableElement: e3 })))
                for (var l2 = i.default.string(a2.target) ? a2._context.querySelectorAll(a2.target) : i.default.array(a2.target) ? a2.target : [a2.target], u2 = 0; u2 < l2.length; u2++) {
                  var c2 = l2[u2];
                  c2 !== e3 && r3.push({ dropzone: a2, element: c2, rect: a2.getRect(c2) });
                }
            }
          }
          return r3;
        }(t2, e2), r2 = 0; r2 < n2.length; r2++) {
          var o2 = n2[r2];
          o2.rect = o2.dropzone.getRect(o2.element);
        }
        return n2;
      }
      function ct(t2, e2, n2) {
        for (var r2 = t2.dropState, o2 = t2.interactable, i2 = t2.element, a2 = [], s2 = 0; s2 < r2.activeDrops.length; s2++) {
          var l2 = r2.activeDrops[s2], u2 = l2.dropzone, c2 = l2.element, f2 = l2.rect;
          a2.push(u2.dropCheck(e2, n2, o2, i2, c2, f2) ? c2 : null);
        }
        var d2 = _.indexOfDeepestElement(a2);
        return r2.activeDrops[d2] || null;
      }
      function ft(t2, e2, n2) {
        var r2 = t2.dropState, o2 = { enter: null, leave: null, activate: null, deactivate: null, move: null, drop: null };
        return "dragstart" === n2.type && (o2.activate = new J.DropEvent(r2, n2, "dropactivate"), o2.activate.target = null, o2.activate.dropzone = null), "dragend" === n2.type && (o2.deactivate = new J.DropEvent(r2, n2, "dropdeactivate"), o2.deactivate.target = null, o2.deactivate.dropzone = null), r2.rejected || (r2.cur.element !== r2.prev.element && (r2.prev.dropzone && (o2.leave = new J.DropEvent(r2, n2, "dragleave"), n2.dragLeave = o2.leave.target = r2.prev.element, n2.prevDropzone = o2.leave.dropzone = r2.prev.dropzone), r2.cur.dropzone && (o2.enter = new J.DropEvent(r2, n2, "dragenter"), n2.dragEnter = r2.cur.element, n2.dropzone = r2.cur.dropzone)), "dragend" === n2.type && r2.cur.dropzone && (o2.drop = new J.DropEvent(r2, n2, "drop"), n2.dropzone = r2.cur.dropzone, n2.relatedTarget = r2.cur.element), "dragmove" === n2.type && r2.cur.dropzone && (o2.move = new J.DropEvent(r2, n2, "dropmove"), o2.move.dragmove = n2, n2.dropzone = r2.cur.dropzone)), o2;
      }
      function dt(t2, e2) {
        var n2 = t2.dropState, r2 = n2.activeDrops, o2 = n2.cur, i2 = n2.prev;
        e2.leave && i2.dropzone.fire(e2.leave), e2.enter && o2.dropzone.fire(e2.enter), e2.move && o2.dropzone.fire(e2.move), e2.drop && o2.dropzone.fire(e2.drop), e2.deactivate && lt(r2, e2.deactivate), n2.prev.dropzone = o2.dropzone, n2.prev.element = o2.element;
      }
      function pt(t2, e2) {
        var n2 = t2.interaction, r2 = t2.iEvent, o2 = t2.event;
        if ("dragmove" === r2.type || "dragend" === r2.type) {
          var i2 = n2.dropState;
          e2.dynamicDrop && (i2.activeDrops = ut(e2, n2.element));
          var a2 = r2, s2 = ct(n2, a2, o2);
          i2.rejected = i2.rejected && !!s2 && s2.dropzone === i2.cur.dropzone && s2.element === i2.cur.element, i2.cur.dropzone = s2 && s2.dropzone, i2.cur.element = s2 && s2.element, i2.events = ft(n2, 0, a2);
        }
      }
      Object.defineProperty(st, "__esModule", { value: true }), st.default = void 0;
      var vt = { id: "actions/drop", install: function(t2) {
        var e2 = t2.actions, n2 = t2.interactStatic, r2 = t2.Interactable, o2 = t2.defaults;
        t2.usePlugin(c.default), r2.prototype.dropzone = function(t3) {
          return function(t4, e3) {
            if (i.default.object(e3)) {
              if (t4.options.drop.enabled = false !== e3.enabled, e3.listeners) {
                var n3 = (0, z.default)(e3.listeners), r3 = Object.keys(n3).reduce(function(t5, e4) {
                  return t5[/^(enter|leave)/.test(e4) ? "drag".concat(e4) : /^(activate|deactivate|move)/.test(e4) ? "drop".concat(e4) : e4] = n3[e4], t5;
                }, {});
                t4.off(t4.options.drop.listeners), t4.on(r3), t4.options.drop.listeners = r3;
              }
              return i.default.func(e3.ondrop) && t4.on("drop", e3.ondrop), i.default.func(e3.ondropactivate) && t4.on("dropactivate", e3.ondropactivate), i.default.func(e3.ondropdeactivate) && t4.on("dropdeactivate", e3.ondropdeactivate), i.default.func(e3.ondragenter) && t4.on("dragenter", e3.ondragenter), i.default.func(e3.ondragleave) && t4.on("dragleave", e3.ondragleave), i.default.func(e3.ondropmove) && t4.on("dropmove", e3.ondropmove), /^(pointer|center)$/.test(e3.overlap) ? t4.options.drop.overlap = e3.overlap : i.default.number(e3.overlap) && (t4.options.drop.overlap = Math.max(Math.min(1, e3.overlap), 0)), "accept" in e3 && (t4.options.drop.accept = e3.accept), "checker" in e3 && (t4.options.drop.checker = e3.checker), t4;
            }
            return i.default.bool(e3) ? (t4.options.drop.enabled = e3, t4) : t4.options.drop;
          }(this, t3);
        }, r2.prototype.dropCheck = function(t3, e3, n3, r3, o3, a2) {
          return function(t4, e4, n4, r4, o4, a3, s2) {
            var l2 = false;
            if (!(s2 = s2 || t4.getRect(a3)))
              return !!t4.options.drop.checker && t4.options.drop.checker(e4, n4, l2, t4, a3, r4, o4);
            var u2 = t4.options.drop.overlap;
            if ("pointer" === u2) {
              var c2 = (0, A.default)(r4, o4, "drag"), f2 = X.getPageXY(e4);
              f2.x += c2.x, f2.y += c2.y;
              var d2 = f2.x > s2.left && f2.x < s2.right, p2 = f2.y > s2.top && f2.y < s2.bottom;
              l2 = d2 && p2;
            }
            var v2 = r4.getRect(o4);
            if (v2 && "center" === u2) {
              var h2 = v2.left + v2.width / 2, g2 = v2.top + v2.height / 2;
              l2 = h2 >= s2.left && h2 <= s2.right && g2 >= s2.top && g2 <= s2.bottom;
            }
            return v2 && i.default.number(u2) && (l2 = Math.max(0, Math.min(s2.right, v2.right) - Math.max(s2.left, v2.left)) * Math.max(0, Math.min(s2.bottom, v2.bottom) - Math.max(s2.top, v2.top)) / (v2.width * v2.height) >= u2), t4.options.drop.checker && (l2 = t4.options.drop.checker(e4, n4, l2, t4, a3, r4, o4)), l2;
          }(this, t3, e3, n3, r3, o3, a2);
        }, n2.dynamicDrop = function(e3) {
          return i.default.bool(e3) ? (t2.dynamicDrop = e3, n2) : t2.dynamicDrop;
        }, (0, M.default)(e2.phaselessTypes, { dragenter: true, dragleave: true, dropactivate: true, dropdeactivate: true, dropmove: true, drop: true }), e2.methodDict.drop = "dropzone", t2.dynamicDrop = false, o2.actions.drop = vt.defaults;
      }, listeners: { "interactions:before-action-start": function(t2) {
        var e2 = t2.interaction;
        "drag" === e2.prepared.name && (e2.dropState = { cur: { dropzone: null, element: null }, prev: { dropzone: null, element: null }, rejected: null, events: null, activeDrops: [] });
      }, "interactions:after-action-start": function(t2, e2) {
        var n2 = t2.interaction, r2 = (t2.event, t2.iEvent);
        if ("drag" === n2.prepared.name) {
          var o2 = n2.dropState;
          o2.activeDrops = null, o2.events = null, o2.activeDrops = ut(e2, n2.element), o2.events = ft(n2, 0, r2), o2.events.activate && (lt(o2.activeDrops, o2.events.activate), e2.fire("actions/drop:start", { interaction: n2, dragEvent: r2 }));
        }
      }, "interactions:action-move": pt, "interactions:after-action-move": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.iEvent;
        "drag" === n2.prepared.name && (dt(n2, n2.dropState.events), e2.fire("actions/drop:move", { interaction: n2, dragEvent: r2 }), n2.dropState.events = {});
      }, "interactions:action-end": function(t2, e2) {
        if ("drag" === t2.interaction.prepared.name) {
          var n2 = t2.interaction, r2 = t2.iEvent;
          pt(t2, e2), dt(n2, n2.dropState.events), e2.fire("actions/drop:end", { interaction: n2, dragEvent: r2 });
        }
      }, "interactions:stop": function(t2) {
        var e2 = t2.interaction;
        if ("drag" === e2.prepared.name) {
          var n2 = e2.dropState;
          n2 && (n2.activeDrops = null, n2.events = null, n2.cur.dropzone = null, n2.cur.element = null, n2.prev.dropzone = null, n2.prev.element = null, n2.rejected = false);
        }
      } }, getActiveDrops: ut, getDrop: ct, getDropEvents: ft, fireDropEvents: dt, defaults: { enabled: false, accept: null, overlap: "pointer" } }, ht = vt;
      st.default = ht;
      var gt = {};
      function yt(t2) {
        var e2 = t2.interaction, n2 = t2.iEvent, r2 = t2.phase;
        if ("gesture" === e2.prepared.name) {
          var o2 = e2.pointers.map(function(t3) {
            return t3.pointer;
          }), a2 = "start" === r2, s2 = "end" === r2, l2 = e2.interactable.options.deltaSource;
          if (n2.touches = [o2[0], o2[1]], a2)
            n2.distance = X.touchDistance(o2, l2), n2.box = X.touchBBox(o2), n2.scale = 1, n2.ds = 0, n2.angle = X.touchAngle(o2, l2), n2.da = 0, e2.gesture.startDistance = n2.distance, e2.gesture.startAngle = n2.angle;
          else if (s2) {
            var u2 = e2.prevEvent;
            n2.distance = u2.distance, n2.box = u2.box, n2.scale = u2.scale, n2.ds = 0, n2.angle = u2.angle, n2.da = 0;
          } else
            n2.distance = X.touchDistance(o2, l2), n2.box = X.touchBBox(o2), n2.scale = n2.distance / e2.gesture.startDistance, n2.angle = X.touchAngle(o2, l2), n2.ds = n2.scale - e2.gesture.scale, n2.da = n2.angle - e2.gesture.angle;
          e2.gesture.distance = n2.distance, e2.gesture.angle = n2.angle, i.default.number(n2.scale) && n2.scale !== 1 / 0 && !isNaN(n2.scale) && (e2.gesture.scale = n2.scale);
        }
      }
      Object.defineProperty(gt, "__esModule", { value: true }), gt.default = void 0;
      var mt = { id: "actions/gesture", before: ["actions/drag", "actions/resize"], install: function(t2) {
        var e2 = t2.actions, n2 = t2.Interactable, r2 = t2.defaults;
        n2.prototype.gesturable = function(t3) {
          return i.default.object(t3) ? (this.options.gesture.enabled = false !== t3.enabled, this.setPerAction("gesture", t3), this.setOnEvents("gesture", t3), this) : i.default.bool(t3) ? (this.options.gesture.enabled = t3, this) : this.options.gesture;
        }, e2.map.gesture = mt, e2.methodDict.gesture = "gesturable", r2.actions.gesture = mt.defaults;
      }, listeners: { "interactions:action-start": yt, "interactions:action-move": yt, "interactions:action-end": yt, "interactions:new": function(t2) {
        t2.interaction.gesture = { angle: 0, distance: 0, scale: 1, startAngle: 0, startDistance: 0 };
      }, "auto-start:check": function(t2) {
        if (!(t2.interaction.pointers.length < 2)) {
          var e2 = t2.interactable.options.gesture;
          if (e2 && e2.enabled)
            return t2.action = { name: "gesture" }, false;
        }
      } }, defaults: {}, getCursor: function() {
        return "";
      } }, bt = mt;
      gt.default = bt;
      var xt = {};
      function wt(t2, e2, n2, r2, o2, a2, s2) {
        if (!e2)
          return false;
        if (true === e2) {
          var l2 = i.default.number(a2.width) ? a2.width : a2.right - a2.left, u2 = i.default.number(a2.height) ? a2.height : a2.bottom - a2.top;
          if (s2 = Math.min(s2, Math.abs(("left" === t2 || "right" === t2 ? l2 : u2) / 2)), l2 < 0 && ("left" === t2 ? t2 = "right" : "right" === t2 && (t2 = "left")), u2 < 0 && ("top" === t2 ? t2 = "bottom" : "bottom" === t2 && (t2 = "top")), "left" === t2) {
            var c2 = l2 >= 0 ? a2.left : a2.right;
            return n2.x < c2 + s2;
          }
          if ("top" === t2) {
            var f2 = u2 >= 0 ? a2.top : a2.bottom;
            return n2.y < f2 + s2;
          }
          if ("right" === t2)
            return n2.x > (l2 >= 0 ? a2.right : a2.left) - s2;
          if ("bottom" === t2)
            return n2.y > (u2 >= 0 ? a2.bottom : a2.top) - s2;
        }
        return !!i.default.element(r2) && (i.default.element(e2) ? e2 === r2 : _.matchesUpTo(r2, e2, o2));
      }
      function _t(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction;
        if ("resize" === n2.prepared.name && n2.resizeAxes) {
          var r2 = e2;
          n2.interactable.options.resize.square ? ("y" === n2.resizeAxes ? r2.delta.x = r2.delta.y : r2.delta.y = r2.delta.x, r2.axes = "xy") : (r2.axes = n2.resizeAxes, "x" === n2.resizeAxes ? r2.delta.y = 0 : "y" === n2.resizeAxes && (r2.delta.x = 0));
        }
      }
      Object.defineProperty(xt, "__esModule", { value: true }), xt.default = void 0;
      var Pt = { id: "actions/resize", before: ["actions/drag"], install: function(t2) {
        var e2 = t2.actions, n2 = t2.browser, r2 = t2.Interactable, o2 = t2.defaults;
        Pt.cursors = function(t3) {
          return t3.isIe9 ? { x: "e-resize", y: "s-resize", xy: "se-resize", top: "n-resize", left: "w-resize", bottom: "s-resize", right: "e-resize", topleft: "se-resize", bottomright: "se-resize", topright: "ne-resize", bottomleft: "ne-resize" } : { x: "ew-resize", y: "ns-resize", xy: "nwse-resize", top: "ns-resize", left: "ew-resize", bottom: "ns-resize", right: "ew-resize", topleft: "nwse-resize", bottomright: "nwse-resize", topright: "nesw-resize", bottomleft: "nesw-resize" };
        }(n2), Pt.defaultMargin = n2.supportsTouch || n2.supportsPointerEvent ? 20 : 10, r2.prototype.resizable = function(e3) {
          return function(t3, e4, n3) {
            return i.default.object(e4) ? (t3.options.resize.enabled = false !== e4.enabled, t3.setPerAction("resize", e4), t3.setOnEvents("resize", e4), i.default.string(e4.axis) && /^x$|^y$|^xy$/.test(e4.axis) ? t3.options.resize.axis = e4.axis : null === e4.axis && (t3.options.resize.axis = n3.defaults.actions.resize.axis), i.default.bool(e4.preserveAspectRatio) ? t3.options.resize.preserveAspectRatio = e4.preserveAspectRatio : i.default.bool(e4.square) && (t3.options.resize.square = e4.square), t3) : i.default.bool(e4) ? (t3.options.resize.enabled = e4, t3) : t3.options.resize;
          }(this, e3, t2);
        }, e2.map.resize = Pt, e2.methodDict.resize = "resizable", o2.actions.resize = Pt.defaults;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.resizeAxes = "xy";
      }, "interactions:action-start": function(t2) {
        !function(t3) {
          var e2 = t3.iEvent, n2 = t3.interaction;
          if ("resize" === n2.prepared.name && n2.prepared.edges) {
            var r2 = e2, o2 = n2.rect;
            n2._rects = { start: (0, M.default)({}, o2), corrected: (0, M.default)({}, o2), previous: (0, M.default)({}, o2), delta: { left: 0, right: 0, width: 0, top: 0, bottom: 0, height: 0 } }, r2.edges = n2.prepared.edges, r2.rect = n2._rects.corrected, r2.deltaRect = n2._rects.delta;
          }
        }(t2), _t(t2);
      }, "interactions:action-move": function(t2) {
        !function(t3) {
          var e2 = t3.iEvent, n2 = t3.interaction;
          if ("resize" === n2.prepared.name && n2.prepared.edges) {
            var r2 = e2, o2 = n2.interactable.options.resize.invert, i2 = "reposition" === o2 || "negate" === o2, a2 = n2.rect, s2 = n2._rects, l2 = s2.start, u2 = s2.corrected, c2 = s2.delta, f2 = s2.previous;
            if ((0, M.default)(f2, u2), i2) {
              if ((0, M.default)(u2, a2), "reposition" === o2) {
                if (u2.top > u2.bottom) {
                  var d2 = u2.top;
                  u2.top = u2.bottom, u2.bottom = d2;
                }
                if (u2.left > u2.right) {
                  var p2 = u2.left;
                  u2.left = u2.right, u2.right = p2;
                }
              }
            } else
              u2.top = Math.min(a2.top, l2.bottom), u2.bottom = Math.max(a2.bottom, l2.top), u2.left = Math.min(a2.left, l2.right), u2.right = Math.max(a2.right, l2.left);
            for (var v2 in u2.width = u2.right - u2.left, u2.height = u2.bottom - u2.top, u2)
              c2[v2] = u2[v2] - f2[v2];
            r2.edges = n2.prepared.edges, r2.rect = u2, r2.deltaRect = c2;
          }
        }(t2), _t(t2);
      }, "interactions:action-end": function(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction;
        if ("resize" === n2.prepared.name && n2.prepared.edges) {
          var r2 = e2;
          r2.edges = n2.prepared.edges, r2.rect = n2._rects.corrected, r2.deltaRect = n2._rects.delta;
        }
      }, "auto-start:check": function(t2) {
        var e2 = t2.interaction, n2 = t2.interactable, r2 = t2.element, o2 = t2.rect, a2 = t2.buttons;
        if (o2) {
          var s2 = (0, M.default)({}, e2.coords.cur.page), l2 = n2.options.resize;
          if (l2 && l2.enabled && (!e2.pointerIsDown || !/mouse|pointer/.test(e2.pointerType) || 0 != (a2 & l2.mouseButtons))) {
            if (i.default.object(l2.edges)) {
              var u2 = { left: false, right: false, top: false, bottom: false };
              for (var c2 in u2)
                u2[c2] = wt(c2, l2.edges[c2], s2, e2._latestPointer.eventTarget, r2, o2, l2.margin || Pt.defaultMargin);
              u2.left = u2.left && !u2.right, u2.top = u2.top && !u2.bottom, (u2.left || u2.right || u2.top || u2.bottom) && (t2.action = { name: "resize", edges: u2 });
            } else {
              var f2 = "y" !== l2.axis && s2.x > o2.right - Pt.defaultMargin, d2 = "x" !== l2.axis && s2.y > o2.bottom - Pt.defaultMargin;
              (f2 || d2) && (t2.action = { name: "resize", axes: (f2 ? "x" : "") + (d2 ? "y" : "") });
            }
            return !t2.action && void 0;
          }
        }
      } }, defaults: { square: false, preserveAspectRatio: false, axis: "xy", margin: NaN, edges: null, invert: "none" }, cursors: null, getCursor: function(t2) {
        var e2 = t2.edges, n2 = t2.axis, r2 = t2.name, o2 = Pt.cursors, i2 = null;
        if (n2)
          i2 = o2[r2 + n2];
        else if (e2) {
          for (var a2 = "", s2 = ["top", "bottom", "left", "right"], l2 = 0; l2 < s2.length; l2++) {
            var u2 = s2[l2];
            e2[u2] && (a2 += u2);
          }
          i2 = o2[a2];
        }
        return i2;
      }, defaultMargin: null }, Ot = Pt;
      xt.default = Ot;
      var Et = {};
      Object.defineProperty(Et, "__esModule", { value: true }), Et.default = void 0;
      var St = { id: "actions", install: function(t2) {
        t2.usePlugin(gt.default), t2.usePlugin(xt.default), t2.usePlugin(c.default), t2.usePlugin(st.default);
      } };
      Et.default = St;
      var Tt = {};
      Object.defineProperty(Tt, "__esModule", { value: true }), Tt.default = void 0;
      var jt, Mt, kt = 0, It = { request: function(t2) {
        return jt(t2);
      }, cancel: function(t2) {
        return Mt(t2);
      }, init: function(t2) {
        if (jt = t2.requestAnimationFrame, Mt = t2.cancelAnimationFrame, !jt)
          for (var e2 = ["ms", "moz", "webkit", "o"], n2 = 0; n2 < e2.length; n2++) {
            var r2 = e2[n2];
            jt = t2["".concat(r2, "RequestAnimationFrame")], Mt = t2["".concat(r2, "CancelAnimationFrame")] || t2["".concat(r2, "CancelRequestAnimationFrame")];
          }
        jt = jt && jt.bind(t2), Mt = Mt && Mt.bind(t2), jt || (jt = function(e3) {
          var n3 = Date.now(), r3 = Math.max(0, 16 - (n3 - kt)), o2 = t2.setTimeout(function() {
            e3(n3 + r3);
          }, r3);
          return kt = n3 + r3, o2;
        }, Mt = function(t3) {
          return clearTimeout(t3);
        });
      } };
      Tt.default = It;
      var Dt = {};
      Object.defineProperty(Dt, "__esModule", { value: true }), Dt.default = void 0, Dt.getContainer = zt, Dt.getScroll = Ct, Dt.getScrollSize = function(t2) {
        return i.default.window(t2) && (t2 = window.document.body), { x: t2.scrollWidth, y: t2.scrollHeight };
      }, Dt.getScrollSizeDelta = function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.element, o2 = n2 && n2.interactable.options[n2.prepared.name].autoScroll;
        if (!o2 || !o2.enabled)
          return e2(), { x: 0, y: 0 };
        var i2 = zt(o2.container, n2.interactable, r2), a2 = Ct(i2);
        e2();
        var s2 = Ct(i2);
        return { x: s2.x - a2.x, y: s2.y - a2.y };
      };
      var At = { defaults: { enabled: false, margin: 60, container: null, speed: 300 }, now: Date.now, interaction: null, i: 0, x: 0, y: 0, isScrolling: false, prevTime: 0, margin: 0, speed: 0, start: function(t2) {
        At.isScrolling = true, Tt.default.cancel(At.i), t2.autoScroll = At, At.interaction = t2, At.prevTime = At.now(), At.i = Tt.default.request(At.scroll);
      }, stop: function() {
        At.isScrolling = false, At.interaction && (At.interaction.autoScroll = null), Tt.default.cancel(At.i);
      }, scroll: function() {
        var t2 = At.interaction, e2 = t2.interactable, n2 = t2.element, r2 = t2.prepared.name, o2 = e2.options[r2].autoScroll, a2 = zt(o2.container, e2, n2), s2 = At.now(), l2 = (s2 - At.prevTime) / 1e3, u2 = o2.speed * l2;
        if (u2 >= 1) {
          var c2 = { x: At.x * u2, y: At.y * u2 };
          if (c2.x || c2.y) {
            var f2 = Ct(a2);
            i.default.window(a2) ? a2.scrollBy(c2.x, c2.y) : a2 && (a2.scrollLeft += c2.x, a2.scrollTop += c2.y);
            var d2 = Ct(a2), p2 = { x: d2.x - f2.x, y: d2.y - f2.y };
            (p2.x || p2.y) && e2.fire({ type: "autoscroll", target: n2, interactable: e2, delta: p2, interaction: t2, container: a2 });
          }
          At.prevTime = s2;
        }
        At.isScrolling && (Tt.default.cancel(At.i), At.i = Tt.default.request(At.scroll));
      }, check: function(t2, e2) {
        var n2;
        return null == (n2 = t2.options[e2].autoScroll) ? void 0 : n2.enabled;
      }, onInteractionMove: function(t2) {
        var e2 = t2.interaction, n2 = t2.pointer;
        if (e2.interacting() && At.check(e2.interactable, e2.prepared.name))
          if (e2.simulation)
            At.x = At.y = 0;
          else {
            var r2, o2, a2, s2, l2 = e2.interactable, u2 = e2.element, c2 = e2.prepared.name, f2 = l2.options[c2].autoScroll, d2 = zt(f2.container, l2, u2);
            if (i.default.window(d2))
              s2 = n2.clientX < At.margin, r2 = n2.clientY < At.margin, o2 = n2.clientX > d2.innerWidth - At.margin, a2 = n2.clientY > d2.innerHeight - At.margin;
            else {
              var p2 = _.getElementClientRect(d2);
              s2 = n2.clientX < p2.left + At.margin, r2 = n2.clientY < p2.top + At.margin, o2 = n2.clientX > p2.right - At.margin, a2 = n2.clientY > p2.bottom - At.margin;
            }
            At.x = o2 ? 1 : s2 ? -1 : 0, At.y = a2 ? 1 : r2 ? -1 : 0, At.isScrolling || (At.margin = f2.margin, At.speed = f2.speed, At.start(e2));
          }
      } };
      function zt(t2, n2, r2) {
        return (i.default.string(t2) ? (0, k.getStringOptionResult)(t2, n2, r2) : t2) || (0, e.getWindow)(r2);
      }
      function Ct(t2) {
        return i.default.window(t2) && (t2 = window.document.body), { x: t2.scrollLeft, y: t2.scrollTop };
      }
      var Rt = { id: "auto-scroll", install: function(t2) {
        var e2 = t2.defaults, n2 = t2.actions;
        t2.autoScroll = At, At.now = function() {
          return t2.now();
        }, n2.phaselessTypes.autoscroll = true, e2.perAction.autoScroll = At.defaults;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.autoScroll = null;
      }, "interactions:destroy": function(t2) {
        t2.interaction.autoScroll = null, At.stop(), At.interaction && (At.interaction = null);
      }, "interactions:stop": At.stop, "interactions:action-move": function(t2) {
        return At.onInteractionMove(t2);
      } } }, Ft = Rt;
      Dt.default = Ft;
      var Xt = {};
      Object.defineProperty(Xt, "__esModule", { value: true }), Xt.copyAction = function(t2, e2) {
        return t2.name = e2.name, t2.axis = e2.axis, t2.edges = e2.edges, t2;
      }, Xt.sign = void 0, Xt.warnOnce = function(t2, n2) {
        var r2 = false;
        return function() {
          return r2 || (e.window.console.warn(n2), r2 = true), t2.apply(this, arguments);
        };
      }, Xt.sign = function(t2) {
        return t2 >= 0 ? 1 : -1;
      };
      var Bt = {};
      function Yt(t2) {
        return i.default.bool(t2) ? (this.options.styleCursor = t2, this) : null === t2 ? (delete this.options.styleCursor, this) : this.options.styleCursor;
      }
      function Wt(t2) {
        return i.default.func(t2) ? (this.options.actionChecker = t2, this) : null === t2 ? (delete this.options.actionChecker, this) : this.options.actionChecker;
      }
      Object.defineProperty(Bt, "__esModule", { value: true }), Bt.default = void 0;
      var Lt = { id: "auto-start/interactableMethods", install: function(t2) {
        var e2 = t2.Interactable;
        e2.prototype.getAction = function(e3, n2, r2, o2) {
          var i2 = function(t3, e4, n3, r3, o3) {
            var i3 = t3.getRect(r3), a2 = { action: null, interactable: t3, interaction: n3, element: r3, rect: i3, buttons: e4.buttons || { 0: 1, 1: 4, 3: 8, 4: 16 }[e4.button] };
            return o3.fire("auto-start:check", a2), a2.action;
          }(this, n2, r2, o2, t2);
          return this.options.actionChecker ? this.options.actionChecker(e3, n2, i2, this, o2, r2) : i2;
        }, e2.prototype.ignoreFrom = (0, Xt.warnOnce)(function(t3) {
          return this._backCompatOption("ignoreFrom", t3);
        }, "Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue})."), e2.prototype.allowFrom = (0, Xt.warnOnce)(function(t3) {
          return this._backCompatOption("allowFrom", t3);
        }, "Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue})."), e2.prototype.actionChecker = Wt, e2.prototype.styleCursor = Yt;
      } };
      Bt.default = Lt;
      var Ut = {};
      function Vt(t2, e2, n2, r2, o2) {
        return e2.testIgnoreAllow(e2.options[t2.name], n2, r2) && e2.options[t2.name].enabled && $t(e2, n2, t2, o2) ? t2 : null;
      }
      function Nt(t2, e2, n2, r2, o2, i2, a2) {
        for (var s2 = 0, l2 = r2.length; s2 < l2; s2++) {
          var u2 = r2[s2], c2 = o2[s2], f2 = u2.getAction(e2, n2, t2, c2);
          if (f2) {
            var d2 = Vt(f2, u2, c2, i2, a2);
            if (d2)
              return { action: d2, interactable: u2, element: c2 };
          }
        }
        return { action: null, interactable: null, element: null };
      }
      function qt(t2, e2, n2, r2, o2) {
        var a2 = [], s2 = [], l2 = r2;
        function u2(t3) {
          a2.push(t3), s2.push(l2);
        }
        for (; i.default.element(l2); ) {
          a2 = [], s2 = [], o2.interactables.forEachMatch(l2, u2);
          var c2 = Nt(t2, e2, n2, a2, s2, r2, o2);
          if (c2.action && !c2.interactable.options[c2.action.name].manualStart)
            return c2;
          l2 = _.parentNode(l2);
        }
        return { action: null, interactable: null, element: null };
      }
      function Gt(t2, e2, n2) {
        var r2 = e2.action, o2 = e2.interactable, i2 = e2.element;
        r2 = r2 || { name: null }, t2.interactable = o2, t2.element = i2, (0, Xt.copyAction)(t2.prepared, r2), t2.rect = o2 && r2.name ? o2.getRect(i2) : null, Zt(t2, n2), n2.fire("autoStart:prepared", { interaction: t2 });
      }
      function $t(t2, e2, n2, r2) {
        var o2 = t2.options, i2 = o2[n2.name].max, a2 = o2[n2.name].maxPerElement, s2 = r2.autoStart.maxInteractions, l2 = 0, u2 = 0, c2 = 0;
        if (!(i2 && a2 && s2))
          return false;
        for (var f2 = 0; f2 < r2.interactions.list.length; f2++) {
          var d2 = r2.interactions.list[f2], p2 = d2.prepared.name;
          if (d2.interacting()) {
            if (++l2 >= s2)
              return false;
            if (d2.interactable === t2) {
              if ((u2 += p2 === n2.name ? 1 : 0) >= i2)
                return false;
              if (d2.element === e2 && (c2++, p2 === n2.name && c2 >= a2))
                return false;
            }
          }
        }
        return s2 > 0;
      }
      function Ht(t2, e2) {
        return i.default.number(t2) ? (e2.autoStart.maxInteractions = t2, this) : e2.autoStart.maxInteractions;
      }
      function Kt(t2, e2, n2) {
        var r2 = n2.autoStart.cursorElement;
        r2 && r2 !== t2 && (r2.style.cursor = ""), t2.ownerDocument.documentElement.style.cursor = e2, t2.style.cursor = e2, n2.autoStart.cursorElement = e2 ? t2 : null;
      }
      function Zt(t2, e2) {
        var n2 = t2.interactable, r2 = t2.element, o2 = t2.prepared;
        if ("mouse" === t2.pointerType && n2 && n2.options.styleCursor) {
          var a2 = "";
          if (o2.name) {
            var s2 = n2.options[o2.name].cursorChecker;
            a2 = i.default.func(s2) ? s2(o2, n2, r2, t2._interacting) : e2.actions.map[o2.name].getCursor(o2);
          }
          Kt(t2.element, a2 || "", e2);
        } else
          e2.autoStart.cursorElement && Kt(e2.autoStart.cursorElement, "", e2);
      }
      Object.defineProperty(Ut, "__esModule", { value: true }), Ut.default = void 0;
      var Jt = { id: "auto-start/base", before: ["actions"], install: function(t2) {
        var e2 = t2.interactStatic, n2 = t2.defaults;
        t2.usePlugin(Bt.default), n2.base.actionChecker = null, n2.base.styleCursor = true, (0, M.default)(n2.perAction, { manualStart: false, max: 1 / 0, maxPerElement: 1, allowFrom: null, ignoreFrom: null, mouseButtons: 1 }), e2.maxInteractions = function(e3) {
          return Ht(e3, t2);
        }, t2.autoStart = { maxInteractions: 1 / 0, withinInteractionLimit: $t, cursorElement: null };
      }, listeners: { "interactions:down": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, o2 = t2.event, i2 = t2.eventTarget;
        n2.interacting() || Gt(n2, qt(n2, r2, o2, i2, e2), e2);
      }, "interactions:move": function(t2, e2) {
        !function(t3, e3) {
          var n2 = t3.interaction, r2 = t3.pointer, o2 = t3.event, i2 = t3.eventTarget;
          "mouse" !== n2.pointerType || n2.pointerIsDown || n2.interacting() || Gt(n2, qt(n2, r2, o2, i2, e3), e3);
        }(t2, e2), function(t3, e3) {
          var n2 = t3.interaction;
          if (n2.pointerIsDown && !n2.interacting() && n2.pointerWasMoved && n2.prepared.name) {
            e3.fire("autoStart:before-start", t3);
            var r2 = n2.interactable, o2 = n2.prepared.name;
            o2 && r2 && (r2.options[o2].manualStart || !$t(r2, n2.element, n2.prepared, e3) ? n2.stop() : (n2.start(n2.prepared, r2, n2.element), Zt(n2, e3)));
          }
        }(t2, e2);
      }, "interactions:stop": function(t2, e2) {
        var n2 = t2.interaction, r2 = n2.interactable;
        r2 && r2.options.styleCursor && Kt(n2.element, "", e2);
      } }, maxInteractions: Ht, withinInteractionLimit: $t, validateAction: Vt }, Qt = Jt;
      Ut.default = Qt;
      var te = {};
      Object.defineProperty(te, "__esModule", { value: true }), te.default = void 0;
      var ee = { id: "auto-start/dragAxis", listeners: { "autoStart:before-start": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.eventTarget, o2 = t2.dx, a2 = t2.dy;
        if ("drag" === n2.prepared.name) {
          var s2 = Math.abs(o2), l2 = Math.abs(a2), u2 = n2.interactable.options.drag, c2 = u2.startAxis, f2 = s2 > l2 ? "x" : s2 < l2 ? "y" : "xy";
          if (n2.prepared.axis = "start" === u2.lockAxis ? f2[0] : u2.lockAxis, "xy" !== f2 && "xy" !== c2 && c2 !== f2) {
            n2.prepared.name = null;
            for (var d2 = r2, p2 = function(t3) {
              if (t3 !== n2.interactable) {
                var o3 = n2.interactable.options.drag;
                if (!o3.manualStart && t3.testIgnoreAllow(o3, d2, r2)) {
                  var i2 = t3.getAction(n2.downPointer, n2.downEvent, n2, d2);
                  if (i2 && "drag" === i2.name && function(t4, e3) {
                    if (!e3)
                      return false;
                    var n3 = e3.options.drag.startAxis;
                    return "xy" === t4 || "xy" === n3 || n3 === t4;
                  }(f2, t3) && Ut.default.validateAction(i2, t3, d2, r2, e2))
                    return t3;
                }
              }
            }; i.default.element(d2); ) {
              var v2 = e2.interactables.forEachMatch(d2, p2);
              if (v2) {
                n2.prepared.name = "drag", n2.interactable = v2, n2.element = d2;
                break;
              }
              d2 = (0, _.parentNode)(d2);
            }
          }
        }
      } } };
      te.default = ee;
      var ne = {};
      function re(t2) {
        var e2 = t2.prepared && t2.prepared.name;
        if (!e2)
          return null;
        var n2 = t2.interactable.options;
        return n2[e2].hold || n2[e2].delay;
      }
      Object.defineProperty(ne, "__esModule", { value: true }), ne.default = void 0;
      var oe = { id: "auto-start/hold", install: function(t2) {
        var e2 = t2.defaults;
        t2.usePlugin(Ut.default), e2.perAction.hold = 0, e2.perAction.delay = 0;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.autoStartHoldTimer = null;
      }, "autoStart:prepared": function(t2) {
        var e2 = t2.interaction, n2 = re(e2);
        n2 > 0 && (e2.autoStartHoldTimer = setTimeout(function() {
          e2.start(e2.prepared, e2.interactable, e2.element);
        }, n2));
      }, "interactions:move": function(t2) {
        var e2 = t2.interaction, n2 = t2.duplicate;
        e2.autoStartHoldTimer && e2.pointerWasMoved && !n2 && (clearTimeout(e2.autoStartHoldTimer), e2.autoStartHoldTimer = null);
      }, "autoStart:before-start": function(t2) {
        var e2 = t2.interaction;
        re(e2) > 0 && (e2.prepared.name = null);
      } }, getHoldDuration: re }, ie = oe;
      ne.default = ie;
      var ae = {};
      Object.defineProperty(ae, "__esModule", { value: true }), ae.default = void 0;
      var se = { id: "auto-start", install: function(t2) {
        t2.usePlugin(Ut.default), t2.usePlugin(ne.default), t2.usePlugin(te.default);
      } };
      ae.default = se;
      var le = {};
      function ue(t2) {
        return /^(always|never|auto)$/.test(t2) ? (this.options.preventDefault = t2, this) : i.default.bool(t2) ? (this.options.preventDefault = t2 ? "always" : "never", this) : this.options.preventDefault;
      }
      function ce(t2) {
        var e2 = t2.interaction, n2 = t2.event;
        e2.interactable && e2.interactable.checkAndPreventDefault(n2);
      }
      function fe(t2) {
        var n2 = t2.Interactable;
        n2.prototype.preventDefault = ue, n2.prototype.checkAndPreventDefault = function(n3) {
          return function(t3, n4, r2) {
            var o2 = t3.options.preventDefault;
            if ("never" !== o2)
              if ("always" !== o2) {
                if (n4.events.supportsPassive && /^touch(start|move)$/.test(r2.type)) {
                  var a2 = (0, e.getWindow)(r2.target).document, s2 = n4.getDocOptions(a2);
                  if (!s2 || !s2.events || false !== s2.events.passive)
                    return;
                }
                /^(mouse|pointer|touch)*(down|start)/i.test(r2.type) || i.default.element(r2.target) && (0, _.matchesSelector)(r2.target, "input,select,textarea,[contenteditable=true],[contenteditable=true] *") || r2.preventDefault();
              } else
                r2.preventDefault();
          }(this, t2, n3);
        }, t2.interactions.docEvents.push({ type: "dragstart", listener: function(e2) {
          for (var n3 = 0; n3 < t2.interactions.list.length; n3++) {
            var r2 = t2.interactions.list[n3];
            if (r2.element && (r2.element === e2.target || (0, _.nodeContains)(r2.element, e2.target)))
              return void r2.interactable.checkAndPreventDefault(e2);
          }
        } });
      }
      Object.defineProperty(le, "__esModule", { value: true }), le.default = void 0, le.install = fe;
      var de = { id: "core/interactablePreventDefault", install: fe, listeners: ["down", "move", "up", "cancel"].reduce(function(t2, e2) {
        return t2["interactions:".concat(e2)] = ce, t2;
      }, {}) };
      le.default = de;
      var pe = {};
      Object.defineProperty(pe, "__esModule", { value: true }), pe.default = void 0, pe.default = {};
      var ve, he = {};
      Object.defineProperty(he, "__esModule", { value: true }), he.default = void 0, function(t2) {
        t2.touchAction = "touchAction", t2.boxSizing = "boxSizing", t2.noListeners = "noListeners";
      }(ve || (ve = {}));
      ve.touchAction, ve.boxSizing, ve.noListeners;
      var ge = { id: "dev-tools", install: function() {
      } };
      he.default = ge;
      var ye = {};
      Object.defineProperty(ye, "__esModule", { value: true }), ye.default = function t2(e2) {
        var n2 = {};
        for (var r2 in e2) {
          var o2 = e2[r2];
          i.default.plainObject(o2) ? n2[r2] = t2(o2) : i.default.array(o2) ? n2[r2] = H.from(o2) : n2[r2] = o2;
        }
        return n2;
      };
      var me = {};
      function be(t2, e2) {
        return function(t3) {
          if (Array.isArray(t3))
            return t3;
        }(t2) || function(t3, e3) {
          var n2 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (null != n2) {
            var r2, o2, i2 = [], a2 = true, s2 = false;
            try {
              for (n2 = n2.call(t3); !(a2 = (r2 = n2.next()).done) && (i2.push(r2.value), !e3 || i2.length !== e3); a2 = true)
                ;
            } catch (t4) {
              s2 = true, o2 = t4;
            } finally {
              try {
                a2 || null == n2.return || n2.return();
              } finally {
                if (s2)
                  throw o2;
              }
            }
            return i2;
          }
        }(t2, e2) || function(t3, e3) {
          if (t3) {
            if ("string" == typeof t3)
              return xe(t3, e3);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            return "Object" === n2 && t3.constructor && (n2 = t3.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t3) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? xe(t3, e3) : void 0;
          }
        }(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function xe(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var n2 = 0, r2 = Array(e2); n2 < e2; n2++)
          r2[n2] = t2[n2];
        return r2;
      }
      function we(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function _e(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(me, "__esModule", { value: true }), me.default = void 0, me.getRectOffset = Ee;
      var Pe = function() {
        function t2(e3) {
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), _e(this, "states", []), _e(this, "startOffset", { left: 0, right: 0, top: 0, bottom: 0 }), _e(this, "startDelta", void 0), _e(this, "result", void 0), _e(this, "endResult", void 0), _e(this, "edges", void 0), _e(this, "interaction", void 0), this.interaction = e3, this.result = Oe();
        }
        var e2, n2;
        return e2 = t2, (n2 = [{ key: "start", value: function(t3, e3) {
          var n3 = t3.phase, r2 = this.interaction, o2 = function(t4) {
            var e4 = t4.interactable.options[t4.prepared.name], n4 = e4.modifiers;
            return n4 && n4.length ? n4 : ["snap", "snapSize", "snapEdges", "restrict", "restrictEdges", "restrictSize"].map(function(t5) {
              var n5 = e4[t5];
              return n5 && n5.enabled && { options: n5, methods: n5._methods };
            }).filter(function(t5) {
              return !!t5;
            });
          }(r2);
          this.prepareStates(o2), this.edges = (0, M.default)({}, r2.edges), this.startOffset = Ee(r2.rect, e3), this.startDelta = { x: 0, y: 0 };
          var i2 = this.fillArg({ phase: n3, pageCoords: e3, preEnd: false });
          return this.result = Oe(), this.startAll(i2), this.result = this.setAll(i2);
        } }, { key: "fillArg", value: function(t3) {
          var e3 = this.interaction;
          return t3.interaction = e3, t3.interactable = e3.interactable, t3.element = e3.element, t3.rect = t3.rect || e3.rect, t3.edges = this.edges, t3.startOffset = this.startOffset, t3;
        } }, { key: "startAll", value: function(t3) {
          for (var e3 = 0; e3 < this.states.length; e3++) {
            var n3 = this.states[e3];
            n3.methods.start && (t3.state = n3, n3.methods.start(t3));
          }
        } }, { key: "setAll", value: function(t3) {
          var e3 = t3.phase, n3 = t3.preEnd, r2 = t3.skipModifiers, o2 = t3.rect;
          t3.coords = (0, M.default)({}, t3.pageCoords), t3.rect = (0, M.default)({}, o2);
          for (var i2 = r2 ? this.states.slice(r2) : this.states, a2 = Oe(t3.coords, t3.rect), s2 = 0; s2 < i2.length; s2++) {
            var l2, u2 = i2[s2], c2 = u2.options, f2 = (0, M.default)({}, t3.coords), d2 = null;
            null != (l2 = u2.methods) && l2.set && this.shouldDo(c2, n3, e3) && (t3.state = u2, d2 = u2.methods.set(t3), k.addEdges(this.interaction.edges, t3.rect, { x: t3.coords.x - f2.x, y: t3.coords.y - f2.y })), a2.eventProps.push(d2);
          }
          a2.delta.x = t3.coords.x - t3.pageCoords.x, a2.delta.y = t3.coords.y - t3.pageCoords.y, a2.rectDelta.left = t3.rect.left - o2.left, a2.rectDelta.right = t3.rect.right - o2.right, a2.rectDelta.top = t3.rect.top - o2.top, a2.rectDelta.bottom = t3.rect.bottom - o2.bottom;
          var p2 = this.result.coords, v2 = this.result.rect;
          if (p2 && v2) {
            var h2 = a2.rect.left !== v2.left || a2.rect.right !== v2.right || a2.rect.top !== v2.top || a2.rect.bottom !== v2.bottom;
            a2.changed = h2 || p2.x !== a2.coords.x || p2.y !== a2.coords.y;
          }
          return a2;
        } }, { key: "applyToInteraction", value: function(t3) {
          var e3 = this.interaction, n3 = t3.phase, r2 = e3.coords.cur, o2 = e3.coords.start, i2 = this.result, a2 = this.startDelta, s2 = i2.delta;
          "start" === n3 && (0, M.default)(this.startDelta, i2.delta);
          for (var l2 = 0; l2 < [[o2, a2], [r2, s2]].length; l2++) {
            var u2 = be([[o2, a2], [r2, s2]][l2], 2), c2 = u2[0], f2 = u2[1];
            c2.page.x += f2.x, c2.page.y += f2.y, c2.client.x += f2.x, c2.client.y += f2.y;
          }
          var d2 = this.result.rectDelta, p2 = t3.rect || e3.rect;
          p2.left += d2.left, p2.right += d2.right, p2.top += d2.top, p2.bottom += d2.bottom, p2.width = p2.right - p2.left, p2.height = p2.bottom - p2.top;
        } }, { key: "setAndApply", value: function(t3) {
          var e3 = this.interaction, n3 = t3.phase, r2 = t3.preEnd, o2 = t3.skipModifiers, i2 = this.setAll(this.fillArg({ preEnd: r2, phase: n3, pageCoords: t3.modifiedCoords || e3.coords.cur.page }));
          if (this.result = i2, !i2.changed && (!o2 || o2 < this.states.length) && e3.interacting())
            return false;
          if (t3.modifiedCoords) {
            var a2 = e3.coords.cur.page, s2 = { x: t3.modifiedCoords.x - a2.x, y: t3.modifiedCoords.y - a2.y };
            i2.coords.x += s2.x, i2.coords.y += s2.y, i2.delta.x += s2.x, i2.delta.y += s2.y;
          }
          this.applyToInteraction(t3);
        } }, { key: "beforeEnd", value: function(t3) {
          var e3 = t3.interaction, n3 = t3.event, r2 = this.states;
          if (r2 && r2.length) {
            for (var o2 = false, i2 = 0; i2 < r2.length; i2++) {
              var a2 = r2[i2];
              t3.state = a2;
              var s2 = a2.options, l2 = a2.methods, u2 = l2.beforeEnd && l2.beforeEnd(t3);
              if (u2)
                return this.endResult = u2, false;
              o2 = o2 || !o2 && this.shouldDo(s2, true, t3.phase, true);
            }
            o2 && e3.move({ event: n3, preEnd: true });
          }
        } }, { key: "stop", value: function(t3) {
          var e3 = t3.interaction;
          if (this.states && this.states.length) {
            var n3 = (0, M.default)({ states: this.states, interactable: e3.interactable, element: e3.element, rect: null }, t3);
            this.fillArg(n3);
            for (var r2 = 0; r2 < this.states.length; r2++) {
              var o2 = this.states[r2];
              n3.state = o2, o2.methods.stop && o2.methods.stop(n3);
            }
            this.states = null, this.endResult = null;
          }
        } }, { key: "prepareStates", value: function(t3) {
          this.states = [];
          for (var e3 = 0; e3 < t3.length; e3++) {
            var n3 = t3[e3], r2 = n3.options, o2 = n3.methods, i2 = n3.name;
            this.states.push({ options: r2, methods: o2, index: e3, name: i2 });
          }
          return this.states;
        } }, { key: "restoreInteractionCoords", value: function(t3) {
          var e3 = t3.interaction, n3 = e3.coords, r2 = e3.rect, o2 = e3.modification;
          if (o2.result) {
            for (var i2 = o2.startDelta, a2 = o2.result, s2 = a2.delta, l2 = a2.rectDelta, u2 = [[n3.start, i2], [n3.cur, s2]], c2 = 0; c2 < u2.length; c2++) {
              var f2 = be(u2[c2], 2), d2 = f2[0], p2 = f2[1];
              d2.page.x -= p2.x, d2.page.y -= p2.y, d2.client.x -= p2.x, d2.client.y -= p2.y;
            }
            r2.left -= l2.left, r2.right -= l2.right, r2.top -= l2.top, r2.bottom -= l2.bottom;
          }
        } }, { key: "shouldDo", value: function(t3, e3, n3, r2) {
          return !(!t3 || false === t3.enabled || r2 && !t3.endOnly || t3.endOnly && !e3 || "start" === n3 && !t3.setStart);
        } }, { key: "copyFrom", value: function(t3) {
          this.startOffset = t3.startOffset, this.startDelta = t3.startDelta, this.edges = t3.edges, this.states = t3.states.map(function(t4) {
            return (0, ye.default)(t4);
          }), this.result = Oe((0, M.default)({}, t3.result.coords), (0, M.default)({}, t3.result.rect));
        } }, { key: "destroy", value: function() {
          for (var t3 in this)
            this[t3] = null;
        } }]) && we(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      function Oe(t2, e2) {
        return { rect: e2, coords: t2, delta: { x: 0, y: 0 }, rectDelta: { left: 0, right: 0, top: 0, bottom: 0 }, eventProps: [], changed: true };
      }
      function Ee(t2, e2) {
        return t2 ? { left: e2.x - t2.left, top: e2.y - t2.top, right: t2.right - e2.x, bottom: t2.bottom - e2.y } : { left: 0, top: 0, right: 0, bottom: 0 };
      }
      me.default = Pe;
      var Se = {};
      function Te(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction.modification.result;
        n2 && (e2.modifiers = n2.eventProps);
      }
      Object.defineProperty(Se, "__esModule", { value: true }), Se.addEventModifiers = Te, Se.default = void 0, Se.makeModifier = function(t2, e2) {
        var n2 = t2.defaults, r2 = { start: t2.start, set: t2.set, beforeEnd: t2.beforeEnd, stop: t2.stop }, o2 = function(t3) {
          var o3 = t3 || {};
          for (var i2 in o3.enabled = false !== o3.enabled, n2)
            i2 in o3 || (o3[i2] = n2[i2]);
          var a2 = { options: o3, methods: r2, name: e2, enable: function() {
            return o3.enabled = true, a2;
          }, disable: function() {
            return o3.enabled = false, a2;
          } };
          return a2;
        };
        return e2 && "string" == typeof e2 && (o2._defaults = n2, o2._methods = r2), o2;
      };
      var je = { id: "modifiers/base", before: ["actions"], install: function(t2) {
        t2.defaults.perAction.modifiers = [];
      }, listeners: { "interactions:new": function(t2) {
        var e2 = t2.interaction;
        e2.modification = new me.default(e2);
      }, "interactions:before-action-start": function(t2) {
        var e2 = t2.interaction.modification;
        e2.start(t2, t2.interaction.coords.start.page), t2.interaction.edges = e2.edges, e2.applyToInteraction(t2);
      }, "interactions:before-action-move": function(t2) {
        return t2.interaction.modification.setAndApply(t2);
      }, "interactions:before-action-end": function(t2) {
        return t2.interaction.modification.beforeEnd(t2);
      }, "interactions:action-start": Te, "interactions:action-move": Te, "interactions:action-end": Te, "interactions:after-action-start": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      }, "interactions:after-action-move": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      }, "interactions:stop": function(t2) {
        return t2.interaction.modification.stop(t2);
      } } }, Me = je;
      Se.default = Me;
      var ke = {};
      Object.defineProperty(ke, "__esModule", { value: true }), ke.defaults = void 0, ke.defaults = { base: { preventDefault: "auto", deltaSource: "page" }, perAction: { enabled: false, origin: { x: 0, y: 0 } }, actions: {} };
      var Ie = {};
      function De(t2) {
        return De = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, De(t2);
      }
      function Ae(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function ze(t2, e2) {
        return ze = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, ze(t2, e2);
      }
      function Ce(t2, e2) {
        if (e2 && ("object" === De(e2) || "function" == typeof e2))
          return e2;
        if (void 0 !== e2)
          throw new TypeError("Derived constructors may only return object or undefined");
        return Re(t2);
      }
      function Re(t2) {
        if (void 0 === t2)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      function Fe(t2) {
        return Fe = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, Fe(t2);
      }
      function Xe(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(Ie, "__esModule", { value: true }), Ie.InteractEvent = void 0;
      var Be = function(t2) {
        !function(t3, e3) {
          if ("function" != typeof e3 && null !== e3)
            throw new TypeError("Super expression must either be null or a function");
          t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), Object.defineProperty(t3, "prototype", { writable: false }), e3 && ze(t3, e3);
        }(a2, t2);
        var e2, n2, r2, o2, i2 = (r2 = a2, o2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }(), function() {
          var t3, e3 = Fe(r2);
          if (o2) {
            var n3 = Fe(this).constructor;
            t3 = Reflect.construct(e3, arguments, n3);
          } else
            t3 = e3.apply(this, arguments);
          return Ce(this, t3);
        });
        function a2(t3, e3, n3, r3, o3, s2, l2) {
          var u2;
          !function(t4, e4) {
            if (!(t4 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, a2), Xe(Re(u2 = i2.call(this, t3)), "relatedTarget", null), Xe(Re(u2), "screenX", void 0), Xe(Re(u2), "screenY", void 0), Xe(Re(u2), "button", void 0), Xe(Re(u2), "buttons", void 0), Xe(Re(u2), "ctrlKey", void 0), Xe(Re(u2), "shiftKey", void 0), Xe(Re(u2), "altKey", void 0), Xe(Re(u2), "metaKey", void 0), Xe(Re(u2), "page", void 0), Xe(Re(u2), "client", void 0), Xe(Re(u2), "delta", void 0), Xe(Re(u2), "rect", void 0), Xe(Re(u2), "x0", void 0), Xe(Re(u2), "y0", void 0), Xe(Re(u2), "t0", void 0), Xe(Re(u2), "dt", void 0), Xe(Re(u2), "duration", void 0), Xe(Re(u2), "clientX0", void 0), Xe(Re(u2), "clientY0", void 0), Xe(Re(u2), "velocity", void 0), Xe(Re(u2), "speed", void 0), Xe(Re(u2), "swipe", void 0), Xe(Re(u2), "axes", void 0), Xe(Re(u2), "preEnd", void 0), o3 = o3 || t3.element;
          var c2 = t3.interactable, f2 = (c2 && c2.options || ke.defaults).deltaSource, d2 = (0, A.default)(c2, o3, n3), p2 = "start" === r3, v2 = "end" === r3, h2 = p2 ? Re(u2) : t3.prevEvent, g2 = p2 ? t3.coords.start : v2 ? { page: h2.page, client: h2.client, timeStamp: t3.coords.cur.timeStamp } : t3.coords.cur;
          return u2.page = (0, M.default)({}, g2.page), u2.client = (0, M.default)({}, g2.client), u2.rect = (0, M.default)({}, t3.rect), u2.timeStamp = g2.timeStamp, v2 || (u2.page.x -= d2.x, u2.page.y -= d2.y, u2.client.x -= d2.x, u2.client.y -= d2.y), u2.ctrlKey = e3.ctrlKey, u2.altKey = e3.altKey, u2.shiftKey = e3.shiftKey, u2.metaKey = e3.metaKey, u2.button = e3.button, u2.buttons = e3.buttons, u2.target = o3, u2.currentTarget = o3, u2.preEnd = s2, u2.type = l2 || n3 + (r3 || ""), u2.interactable = c2, u2.t0 = p2 ? t3.pointers[t3.pointers.length - 1].downTime : h2.t0, u2.x0 = t3.coords.start.page.x - d2.x, u2.y0 = t3.coords.start.page.y - d2.y, u2.clientX0 = t3.coords.start.client.x - d2.x, u2.clientY0 = t3.coords.start.client.y - d2.y, u2.delta = p2 || v2 ? { x: 0, y: 0 } : { x: u2[f2].x - h2[f2].x, y: u2[f2].y - h2[f2].y }, u2.dt = t3.coords.delta.timeStamp, u2.duration = u2.timeStamp - u2.t0, u2.velocity = (0, M.default)({}, t3.coords.velocity[f2]), u2.speed = (0, R.default)(u2.velocity.x, u2.velocity.y), u2.swipe = v2 || "inertiastart" === r3 ? u2.getSwipe() : null, u2;
        }
        return e2 = a2, (n2 = [{ key: "getSwipe", value: function() {
          var t3 = this._interaction;
          if (t3.prevEvent.speed < 600 || this.timeStamp - t3.prevEvent.timeStamp > 150)
            return null;
          var e3 = 180 * Math.atan2(t3.prevEvent.velocityY, t3.prevEvent.velocityX) / Math.PI;
          e3 < 0 && (e3 += 360);
          var n3 = 112.5 <= e3 && e3 < 247.5, r3 = 202.5 <= e3 && e3 < 337.5;
          return { up: r3, down: !r3 && 22.5 <= e3 && e3 < 157.5, left: n3, right: !n3 && (292.5 <= e3 || e3 < 67.5), angle: e3, speed: t3.prevEvent.speed, velocity: { x: t3.prevEvent.velocityX, y: t3.prevEvent.velocityY } };
        } }, { key: "preventDefault", value: function() {
        } }, { key: "stopImmediatePropagation", value: function() {
          this.immediatePropagationStopped = this.propagationStopped = true;
        } }, { key: "stopPropagation", value: function() {
          this.propagationStopped = true;
        } }]) && Ae(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), a2;
      }(N.BaseEvent);
      Ie.InteractEvent = Be, Object.defineProperties(Be.prototype, { pageX: { get: function() {
        return this.page.x;
      }, set: function(t2) {
        this.page.x = t2;
      } }, pageY: { get: function() {
        return this.page.y;
      }, set: function(t2) {
        this.page.y = t2;
      } }, clientX: { get: function() {
        return this.client.x;
      }, set: function(t2) {
        this.client.x = t2;
      } }, clientY: { get: function() {
        return this.client.y;
      }, set: function(t2) {
        this.client.y = t2;
      } }, dx: { get: function() {
        return this.delta.x;
      }, set: function(t2) {
        this.delta.x = t2;
      } }, dy: { get: function() {
        return this.delta.y;
      }, set: function(t2) {
        this.delta.y = t2;
      } }, velocityX: { get: function() {
        return this.velocity.x;
      }, set: function(t2) {
        this.velocity.x = t2;
      } }, velocityY: { get: function() {
        return this.velocity.y;
      }, set: function(t2) {
        this.velocity.y = t2;
      } } });
      var Ye = {};
      function We(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function Le(t2, e2, n2) {
        return e2 && We(t2.prototype, e2), n2 && We(t2, n2), Object.defineProperty(t2, "prototype", { writable: false }), t2;
      }
      function Ue(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(Ye, "__esModule", { value: true }), Ye.PointerInfo = void 0;
      var Ve = Le(function t2(e2, n2, r2, o2, i2) {
        !function(t3, e3) {
          if (!(t3 instanceof e3))
            throw new TypeError("Cannot call a class as a function");
        }(this, t2), Ue(this, "id", void 0), Ue(this, "pointer", void 0), Ue(this, "event", void 0), Ue(this, "downTime", void 0), Ue(this, "downTarget", void 0), this.id = e2, this.pointer = n2, this.event = r2, this.downTime = o2, this.downTarget = i2;
      });
      Ye.PointerInfo = Ve;
      var Ne, qe, Ge = {};
      function $e(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function He(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(Ge, "__esModule", { value: true }), Ge.Interaction = void 0, Object.defineProperty(Ge, "PointerInfo", { enumerable: true, get: function() {
        return Ye.PointerInfo;
      } }), Ge.default = Ge._ProxyValues = Ge._ProxyMethods = void 0, Ge._ProxyValues = Ne, function(t2) {
        t2.interactable = "", t2.element = "", t2.prepared = "", t2.pointerIsDown = "", t2.pointerWasMoved = "", t2._proxy = "";
      }(Ne || (Ge._ProxyValues = Ne = {})), Ge._ProxyMethods = qe, function(t2) {
        t2.start = "", t2.move = "", t2.end = "", t2.stop = "", t2.interacting = "";
      }(qe || (Ge._ProxyMethods = qe = {}));
      var Ke = 0, Ze = function() {
        function t2(e3) {
          var n3 = this, r2 = e3.pointerType, o2 = e3.scopeFire;
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), He(this, "interactable", null), He(this, "element", null), He(this, "rect", null), He(this, "_rects", void 0), He(this, "edges", null), He(this, "_scopeFire", void 0), He(this, "prepared", { name: null, axis: null, edges: null }), He(this, "pointerType", void 0), He(this, "pointers", []), He(this, "downEvent", null), He(this, "downPointer", {}), He(this, "_latestPointer", { pointer: null, event: null, eventTarget: null }), He(this, "prevEvent", null), He(this, "pointerIsDown", false), He(this, "pointerWasMoved", false), He(this, "_interacting", false), He(this, "_ending", false), He(this, "_stopped", true), He(this, "_proxy", null), He(this, "simulation", null), He(this, "doMove", (0, Xt.warnOnce)(function(t3) {
            this.move(t3);
          }, "The interaction.doMove() method has been renamed to interaction.move()")), He(this, "coords", { start: X.newCoords(), prev: X.newCoords(), cur: X.newCoords(), delta: X.newCoords(), velocity: X.newCoords() }), He(this, "_id", Ke++), this._scopeFire = o2, this.pointerType = r2;
          var i2 = this;
          this._proxy = {};
          var a2 = function(t3) {
            Object.defineProperty(n3._proxy, t3, { get: function() {
              return i2[t3];
            } });
          };
          for (var s2 in Ne)
            a2(s2);
          var l2 = function(t3) {
            Object.defineProperty(n3._proxy, t3, { value: function() {
              return i2[t3].apply(i2, arguments);
            } });
          };
          for (var u2 in qe)
            l2(u2);
          this._scopeFire("interactions:new", { interaction: this });
        }
        var e2, n2;
        return e2 = t2, n2 = [{ key: "pointerMoveTolerance", get: function() {
          return 1;
        } }, { key: "pointerDown", value: function(t3, e3, n3) {
          var r2 = this.updatePointer(t3, e3, n3, true), o2 = this.pointers[r2];
          this._scopeFire("interactions:down", { pointer: t3, event: e3, eventTarget: n3, pointerIndex: r2, pointerInfo: o2, type: "down", interaction: this });
        } }, { key: "start", value: function(t3, e3, n3) {
          return !(this.interacting() || !this.pointerIsDown || this.pointers.length < ("gesture" === t3.name ? 2 : 1) || !e3.options[t3.name].enabled) && ((0, Xt.copyAction)(this.prepared, t3), this.interactable = e3, this.element = n3, this.rect = e3.getRect(n3), this.edges = this.prepared.edges ? (0, M.default)({}, this.prepared.edges) : { left: true, right: true, top: true, bottom: true }, this._stopped = false, this._interacting = this._doPhase({ interaction: this, event: this.downEvent, phase: "start" }) && !this._stopped, this._interacting);
        } }, { key: "pointerMove", value: function(t3, e3, n3) {
          this.simulation || this.modification && this.modification.endResult || this.updatePointer(t3, e3, n3, false);
          var r2, o2, i2 = this.coords.cur.page.x === this.coords.prev.page.x && this.coords.cur.page.y === this.coords.prev.page.y && this.coords.cur.client.x === this.coords.prev.client.x && this.coords.cur.client.y === this.coords.prev.client.y;
          this.pointerIsDown && !this.pointerWasMoved && (r2 = this.coords.cur.client.x - this.coords.start.client.x, o2 = this.coords.cur.client.y - this.coords.start.client.y, this.pointerWasMoved = (0, R.default)(r2, o2) > this.pointerMoveTolerance);
          var a2 = this.getPointerIndex(t3), s2 = { pointer: t3, pointerIndex: a2, pointerInfo: this.pointers[a2], event: e3, type: "move", eventTarget: n3, dx: r2, dy: o2, duplicate: i2, interaction: this };
          i2 || X.setCoordVelocity(this.coords.velocity, this.coords.delta), this._scopeFire("interactions:move", s2), i2 || this.simulation || (this.interacting() && (s2.type = null, this.move(s2)), this.pointerWasMoved && X.copyCoords(this.coords.prev, this.coords.cur));
        } }, { key: "move", value: function(t3) {
          t3 && t3.event || X.setZeroCoords(this.coords.delta), (t3 = (0, M.default)({ pointer: this._latestPointer.pointer, event: this._latestPointer.event, eventTarget: this._latestPointer.eventTarget, interaction: this }, t3 || {})).phase = "move", this._doPhase(t3);
        } }, { key: "pointerUp", value: function(t3, e3, n3, r2) {
          var o2 = this.getPointerIndex(t3);
          -1 === o2 && (o2 = this.updatePointer(t3, e3, n3, false));
          var i2 = /cancel$/i.test(e3.type) ? "cancel" : "up";
          this._scopeFire("interactions:".concat(i2), { pointer: t3, pointerIndex: o2, pointerInfo: this.pointers[o2], event: e3, eventTarget: n3, type: i2, curEventTarget: r2, interaction: this }), this.simulation || this.end(e3), this.removePointer(t3, e3);
        } }, { key: "documentBlur", value: function(t3) {
          this.end(t3), this._scopeFire("interactions:blur", { event: t3, type: "blur", interaction: this });
        } }, { key: "end", value: function(t3) {
          var e3;
          this._ending = true, t3 = t3 || this._latestPointer.event, this.interacting() && (e3 = this._doPhase({ event: t3, interaction: this, phase: "end" })), this._ending = false, true === e3 && this.stop();
        } }, { key: "currentAction", value: function() {
          return this._interacting ? this.prepared.name : null;
        } }, { key: "interacting", value: function() {
          return this._interacting;
        } }, { key: "stop", value: function() {
          this._scopeFire("interactions:stop", { interaction: this }), this.interactable = this.element = null, this._interacting = false, this._stopped = true, this.prepared.name = this.prevEvent = null;
        } }, { key: "getPointerIndex", value: function(t3) {
          var e3 = X.getPointerId(t3);
          return "mouse" === this.pointerType || "pen" === this.pointerType ? this.pointers.length - 1 : H.findIndex(this.pointers, function(t4) {
            return t4.id === e3;
          });
        } }, { key: "getPointerInfo", value: function(t3) {
          return this.pointers[this.getPointerIndex(t3)];
        } }, { key: "updatePointer", value: function(t3, e3, n3, r2) {
          var o2 = X.getPointerId(t3), i2 = this.getPointerIndex(t3), a2 = this.pointers[i2];
          return r2 = false !== r2 && (r2 || /(down|start)$/i.test(e3.type)), a2 ? a2.pointer = t3 : (a2 = new Ye.PointerInfo(o2, t3, e3, null, null), i2 = this.pointers.length, this.pointers.push(a2)), X.setCoords(this.coords.cur, this.pointers.map(function(t4) {
            return t4.pointer;
          }), this._now()), X.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur), r2 && (this.pointerIsDown = true, a2.downTime = this.coords.cur.timeStamp, a2.downTarget = n3, X.pointerExtend(this.downPointer, t3), this.interacting() || (X.copyCoords(this.coords.start, this.coords.cur), X.copyCoords(this.coords.prev, this.coords.cur), this.downEvent = e3, this.pointerWasMoved = false)), this._updateLatestPointer(t3, e3, n3), this._scopeFire("interactions:update-pointer", { pointer: t3, event: e3, eventTarget: n3, down: r2, pointerInfo: a2, pointerIndex: i2, interaction: this }), i2;
        } }, { key: "removePointer", value: function(t3, e3) {
          var n3 = this.getPointerIndex(t3);
          if (-1 !== n3) {
            var r2 = this.pointers[n3];
            this._scopeFire("interactions:remove-pointer", { pointer: t3, event: e3, eventTarget: null, pointerIndex: n3, pointerInfo: r2, interaction: this }), this.pointers.splice(n3, 1), this.pointerIsDown = false;
          }
        } }, { key: "_updateLatestPointer", value: function(t3, e3, n3) {
          this._latestPointer.pointer = t3, this._latestPointer.event = e3, this._latestPointer.eventTarget = n3;
        } }, { key: "destroy", value: function() {
          this._latestPointer.pointer = null, this._latestPointer.event = null, this._latestPointer.eventTarget = null;
        } }, { key: "_createPreparedEvent", value: function(t3, e3, n3, r2) {
          return new Ie.InteractEvent(this, t3, this.prepared.name, e3, this.element, n3, r2);
        } }, { key: "_fireEvent", value: function(t3) {
          var e3;
          null == (e3 = this.interactable) || e3.fire(t3), (!this.prevEvent || t3.timeStamp >= this.prevEvent.timeStamp) && (this.prevEvent = t3);
        } }, { key: "_doPhase", value: function(t3) {
          var e3 = t3.event, n3 = t3.phase, r2 = t3.preEnd, o2 = t3.type, i2 = this.rect;
          if (i2 && "move" === n3 && (k.addEdges(this.edges, i2, this.coords.delta[this.interactable.options.deltaSource]), i2.width = i2.right - i2.left, i2.height = i2.bottom - i2.top), false === this._scopeFire("interactions:before-action-".concat(n3), t3))
            return false;
          var a2 = t3.iEvent = this._createPreparedEvent(e3, n3, r2, o2);
          return this._scopeFire("interactions:action-".concat(n3), t3), "start" === n3 && (this.prevEvent = a2), this._fireEvent(a2), this._scopeFire("interactions:after-action-".concat(n3), t3), true;
        } }, { key: "_now", value: function() {
          return Date.now();
        } }], n2 && $e(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      Ge.Interaction = Ze;
      var Je = Ze;
      Ge.default = Je;
      var Qe = {};
      function tn(t2) {
        t2.pointerIsDown && (on(t2.coords.cur, t2.offset.total), t2.offset.pending.x = 0, t2.offset.pending.y = 0);
      }
      function en(t2) {
        nn(t2.interaction);
      }
      function nn(t2) {
        if (!function(t3) {
          return !(!t3.offset.pending.x && !t3.offset.pending.y);
        }(t2))
          return false;
        var e2 = t2.offset.pending;
        return on(t2.coords.cur, e2), on(t2.coords.delta, e2), k.addEdges(t2.edges, t2.rect, e2), e2.x = 0, e2.y = 0, true;
      }
      function rn(t2) {
        var e2 = t2.x, n2 = t2.y;
        this.offset.pending.x += e2, this.offset.pending.y += n2, this.offset.total.x += e2, this.offset.total.y += n2;
      }
      function on(t2, e2) {
        var n2 = t2.page, r2 = t2.client, o2 = e2.x, i2 = e2.y;
        n2.x += o2, n2.y += i2, r2.x += o2, r2.y += i2;
      }
      Object.defineProperty(Qe, "__esModule", { value: true }), Qe.addTotal = tn, Qe.applyPending = nn, Qe.default = void 0, Ge._ProxyMethods.offsetBy = "";
      var an = { id: "offset", before: ["modifiers", "pointer-events", "actions", "inertia"], install: function(t2) {
        t2.Interaction.prototype.offsetBy = rn;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.offset = { total: { x: 0, y: 0 }, pending: { x: 0, y: 0 } };
      }, "interactions:update-pointer": function(t2) {
        return tn(t2.interaction);
      }, "interactions:before-action-start": en, "interactions:before-action-move": en, "interactions:before-action-end": function(t2) {
        var e2 = t2.interaction;
        if (nn(e2))
          return e2.move({ offset: true }), e2.end(), false;
      }, "interactions:stop": function(t2) {
        var e2 = t2.interaction;
        e2.offset.total.x = 0, e2.offset.total.y = 0, e2.offset.pending.x = 0, e2.offset.pending.y = 0;
      } } }, sn = an;
      Qe.default = sn;
      var ln = {};
      function un(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function cn(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(ln, "__esModule", { value: true }), ln.default = ln.InertiaState = void 0;
      var fn = function() {
        function t2(e3) {
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), cn(this, "active", false), cn(this, "isModified", false), cn(this, "smoothEnd", false), cn(this, "allowResume", false), cn(this, "modification", void 0), cn(this, "modifierCount", 0), cn(this, "modifierArg", void 0), cn(this, "startCoords", void 0), cn(this, "t0", 0), cn(this, "v0", 0), cn(this, "te", 0), cn(this, "targetOffset", void 0), cn(this, "modifiedOffset", void 0), cn(this, "currentOffset", void 0), cn(this, "lambda_v0", 0), cn(this, "one_ve_v0", 0), cn(this, "timeout", void 0), cn(this, "interaction", void 0), this.interaction = e3;
        }
        var e2, n2;
        return e2 = t2, (n2 = [{ key: "start", value: function(t3) {
          var e3 = this.interaction, n3 = dn(e3);
          if (!n3 || !n3.enabled)
            return false;
          var r2 = e3.coords.velocity.client, o2 = (0, R.default)(r2.x, r2.y), i2 = this.modification || (this.modification = new me.default(e3));
          if (i2.copyFrom(e3.modification), this.t0 = e3._now(), this.allowResume = n3.allowResume, this.v0 = o2, this.currentOffset = { x: 0, y: 0 }, this.startCoords = e3.coords.cur.page, this.modifierArg = i2.fillArg({ pageCoords: this.startCoords, preEnd: true, phase: "inertiastart" }), this.t0 - e3.coords.cur.timeStamp < 50 && o2 > n3.minSpeed && o2 > n3.endSpeed)
            this.startInertia();
          else {
            if (i2.result = i2.setAll(this.modifierArg), !i2.result.changed)
              return false;
            this.startSmoothEnd();
          }
          return e3.modification.result.rect = null, e3.offsetBy(this.targetOffset), e3._doPhase({ interaction: e3, event: t3, phase: "inertiastart" }), e3.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y }), e3.modification.result.rect = null, this.active = true, e3.simulation = this, true;
        } }, { key: "startInertia", value: function() {
          var t3 = this, e3 = this.interaction.coords.velocity.client, n3 = dn(this.interaction), r2 = n3.resistance, o2 = -Math.log(n3.endSpeed / this.v0) / r2;
          this.targetOffset = { x: (e3.x - o2) / r2, y: (e3.y - o2) / r2 }, this.te = o2, this.lambda_v0 = r2 / this.v0, this.one_ve_v0 = 1 - n3.endSpeed / this.v0;
          var i2 = this.modification, a2 = this.modifierArg;
          a2.pageCoords = { x: this.startCoords.x + this.targetOffset.x, y: this.startCoords.y + this.targetOffset.y }, i2.result = i2.setAll(a2), i2.result.changed && (this.isModified = true, this.modifiedOffset = { x: this.targetOffset.x + i2.result.delta.x, y: this.targetOffset.y + i2.result.delta.y }), this.onNextFrame(function() {
            return t3.inertiaTick();
          });
        } }, { key: "startSmoothEnd", value: function() {
          var t3 = this;
          this.smoothEnd = true, this.isModified = true, this.targetOffset = { x: this.modification.result.delta.x, y: this.modification.result.delta.y }, this.onNextFrame(function() {
            return t3.smoothEndTick();
          });
        } }, { key: "onNextFrame", value: function(t3) {
          var e3 = this;
          this.timeout = Tt.default.request(function() {
            e3.active && t3();
          });
        } }, { key: "inertiaTick", value: function() {
          var t3, e3, n3, r2, o2, i2 = this, a2 = this.interaction, s2 = dn(a2).resistance, l2 = (a2._now() - this.t0) / 1e3;
          if (l2 < this.te) {
            var u2, c2 = 1 - (Math.exp(-s2 * l2) - this.lambda_v0) / this.one_ve_v0;
            this.isModified ? (0, 0, t3 = this.targetOffset.x, e3 = this.targetOffset.y, n3 = this.modifiedOffset.x, r2 = this.modifiedOffset.y, u2 = { x: vn(o2 = c2, 0, t3, n3), y: vn(o2, 0, e3, r2) }) : u2 = { x: this.targetOffset.x * c2, y: this.targetOffset.y * c2 };
            var f2 = { x: u2.x - this.currentOffset.x, y: u2.y - this.currentOffset.y };
            this.currentOffset.x += f2.x, this.currentOffset.y += f2.y, a2.offsetBy(f2), a2.move(), this.onNextFrame(function() {
              return i2.inertiaTick();
            });
          } else
            a2.offsetBy({ x: this.modifiedOffset.x - this.currentOffset.x, y: this.modifiedOffset.y - this.currentOffset.y }), this.end();
        } }, { key: "smoothEndTick", value: function() {
          var t3 = this, e3 = this.interaction, n3 = e3._now() - this.t0, r2 = dn(e3).smoothEndDuration;
          if (n3 < r2) {
            var o2 = { x: hn(n3, 0, this.targetOffset.x, r2), y: hn(n3, 0, this.targetOffset.y, r2) }, i2 = { x: o2.x - this.currentOffset.x, y: o2.y - this.currentOffset.y };
            this.currentOffset.x += i2.x, this.currentOffset.y += i2.y, e3.offsetBy(i2), e3.move({ skipModifiers: this.modifierCount }), this.onNextFrame(function() {
              return t3.smoothEndTick();
            });
          } else
            e3.offsetBy({ x: this.targetOffset.x - this.currentOffset.x, y: this.targetOffset.y - this.currentOffset.y }), this.end();
        } }, { key: "resume", value: function(t3) {
          var e3 = t3.pointer, n3 = t3.event, r2 = t3.eventTarget, o2 = this.interaction;
          o2.offsetBy({ x: -this.currentOffset.x, y: -this.currentOffset.y }), o2.updatePointer(e3, n3, r2, true), o2._doPhase({ interaction: o2, event: n3, phase: "resume" }), (0, X.copyCoords)(o2.coords.prev, o2.coords.cur), this.stop();
        } }, { key: "end", value: function() {
          this.interaction.move(), this.interaction.end(), this.stop();
        } }, { key: "stop", value: function() {
          this.active = this.smoothEnd = false, this.interaction.simulation = null, Tt.default.cancel(this.timeout);
        } }]) && un(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      function dn(t2) {
        var e2 = t2.interactable, n2 = t2.prepared;
        return e2 && e2.options && n2.name && e2.options[n2.name].inertia;
      }
      ln.InertiaState = fn;
      var pn = { id: "inertia", before: ["modifiers", "actions"], install: function(t2) {
        var e2 = t2.defaults;
        t2.usePlugin(Qe.default), t2.usePlugin(Se.default), t2.actions.phases.inertiastart = true, t2.actions.phases.resume = true, e2.perAction.inertia = { enabled: false, resistance: 10, minSpeed: 100, endSpeed: 10, allowResume: true, smoothEndDuration: 300 };
      }, listeners: { "interactions:new": function(t2) {
        var e2 = t2.interaction;
        e2.inertia = new fn(e2);
      }, "interactions:before-action-end": function(t2) {
        var e2 = t2.interaction, n2 = t2.event;
        return (!e2._interacting || e2.simulation || !e2.inertia.start(n2)) && null;
      }, "interactions:down": function(t2) {
        var e2 = t2.interaction, n2 = t2.eventTarget, r2 = e2.inertia;
        if (r2.active)
          for (var o2 = n2; i.default.element(o2); ) {
            if (o2 === e2.element) {
              r2.resume(t2);
              break;
            }
            o2 = _.parentNode(o2);
          }
      }, "interactions:stop": function(t2) {
        var e2 = t2.interaction.inertia;
        e2.active && e2.stop();
      }, "interactions:before-action-resume": function(t2) {
        var e2 = t2.interaction.modification;
        e2.stop(t2), e2.start(t2, t2.interaction.coords.cur.page), e2.applyToInteraction(t2);
      }, "interactions:before-action-inertiastart": function(t2) {
        return t2.interaction.modification.setAndApply(t2);
      }, "interactions:action-resume": Se.addEventModifiers, "interactions:action-inertiastart": Se.addEventModifiers, "interactions:after-action-inertiastart": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      }, "interactions:after-action-resume": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      } } };
      function vn(t2, e2, n2, r2) {
        var o2 = 1 - t2;
        return o2 * o2 * e2 + 2 * o2 * t2 * n2 + t2 * t2 * r2;
      }
      function hn(t2, e2, n2, r2) {
        return -n2 * (t2 /= r2) * (t2 - 2) + e2;
      }
      var gn = pn;
      ln.default = gn;
      var yn = {};
      function mn(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function bn(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      function xn(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          if (t2.immediatePropagationStopped)
            break;
          r2(t2);
        }
      }
      Object.defineProperty(yn, "__esModule", { value: true }), yn.Eventable = void 0;
      var wn = function() {
        function t2(e3) {
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), bn(this, "options", void 0), bn(this, "types", {}), bn(this, "propagationStopped", false), bn(this, "immediatePropagationStopped", false), bn(this, "global", void 0), this.options = (0, M.default)({}, e3 || {});
        }
        var e2, n2;
        return e2 = t2, (n2 = [{ key: "fire", value: function(t3) {
          var e3, n3 = this.global;
          (e3 = this.types[t3.type]) && xn(t3, e3), !t3.propagationStopped && n3 && (e3 = n3[t3.type]) && xn(t3, e3);
        } }, { key: "on", value: function(t3, e3) {
          var n3 = (0, z.default)(t3, e3);
          for (t3 in n3)
            this.types[t3] = H.merge(this.types[t3] || [], n3[t3]);
        } }, { key: "off", value: function(t3, e3) {
          var n3 = (0, z.default)(t3, e3);
          for (t3 in n3) {
            var r2 = this.types[t3];
            if (r2 && r2.length)
              for (var o2 = 0; o2 < n3[t3].length; o2++) {
                var i2 = n3[t3][o2], a2 = r2.indexOf(i2);
                -1 !== a2 && r2.splice(a2, 1);
              }
          }
        } }, { key: "getRect", value: function(t3) {
          return null;
        } }]) && mn(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      yn.Eventable = wn;
      var _n = {};
      Object.defineProperty(_n, "__esModule", { value: true }), _n.default = function(t2, e2) {
        if (e2.phaselessTypes[t2])
          return true;
        for (var n2 in e2.map)
          if (0 === t2.indexOf(n2) && t2.substr(n2.length) in e2.phases)
            return true;
        return false;
      };
      var Pn = {};
      Object.defineProperty(Pn, "__esModule", { value: true }), Pn.createInteractStatic = function(t2) {
        var e2 = function e3(n2, r2) {
          var o2 = t2.interactables.get(n2, r2);
          return o2 || ((o2 = t2.interactables.new(n2, r2)).events.global = e3.globalEvents), o2;
        };
        return e2.getPointerAverage = X.pointerAverage, e2.getTouchBBox = X.touchBBox, e2.getTouchDistance = X.touchDistance, e2.getTouchAngle = X.touchAngle, e2.getElementRect = _.getElementRect, e2.getElementClientRect = _.getElementClientRect, e2.matchesSelector = _.matchesSelector, e2.closest = _.closest, e2.globalEvents = {}, e2.version = "1.10.17", e2.scope = t2, e2.use = function(t3, e3) {
          return this.scope.usePlugin(t3, e3), this;
        }, e2.isSet = function(t3, e3) {
          return !!this.scope.interactables.get(t3, e3 && e3.context);
        }, e2.on = (0, Xt.warnOnce)(function(t3, e3, n2) {
          if (i.default.string(t3) && -1 !== t3.search(" ") && (t3 = t3.trim().split(/ +/)), i.default.array(t3)) {
            for (var r2 = 0; r2 < t3.length; r2++) {
              var o2 = t3[r2];
              this.on(o2, e3, n2);
            }
            return this;
          }
          if (i.default.object(t3)) {
            for (var a2 in t3)
              this.on(a2, t3[a2], e3);
            return this;
          }
          return (0, _n.default)(t3, this.scope.actions) ? this.globalEvents[t3] ? this.globalEvents[t3].push(e3) : this.globalEvents[t3] = [e3] : this.scope.events.add(this.scope.document, t3, e3, { options: n2 }), this;
        }, "The interact.on() method is being deprecated"), e2.off = (0, Xt.warnOnce)(function(t3, e3, n2) {
          if (i.default.string(t3) && -1 !== t3.search(" ") && (t3 = t3.trim().split(/ +/)), i.default.array(t3)) {
            for (var r2 = 0; r2 < t3.length; r2++) {
              var o2 = t3[r2];
              this.off(o2, e3, n2);
            }
            return this;
          }
          if (i.default.object(t3)) {
            for (var a2 in t3)
              this.off(a2, t3[a2], e3);
            return this;
          }
          var s2;
          return (0, _n.default)(t3, this.scope.actions) ? t3 in this.globalEvents && -1 !== (s2 = this.globalEvents[t3].indexOf(e3)) && this.globalEvents[t3].splice(s2, 1) : this.scope.events.remove(this.scope.document, t3, e3, n2), this;
        }, "The interact.off() method is being deprecated"), e2.debug = function() {
          return this.scope;
        }, e2.supportsTouch = function() {
          return b.default.supportsTouch;
        }, e2.supportsPointerEvent = function() {
          return b.default.supportsPointerEvent;
        }, e2.stop = function() {
          for (var t3 = 0; t3 < this.scope.interactions.list.length; t3++)
            this.scope.interactions.list[t3].stop();
          return this;
        }, e2.pointerMoveTolerance = function(t3) {
          return i.default.number(t3) ? (this.scope.interactions.pointerMoveTolerance = t3, this) : this.scope.interactions.pointerMoveTolerance;
        }, e2.addDocument = function(t3, e3) {
          this.scope.addDocument(t3, e3);
        }, e2.removeDocument = function(t3) {
          this.scope.removeDocument(t3);
        }, e2;
      };
      var On = {};
      function En(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function Sn(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(On, "__esModule", { value: true }), On.Interactable = void 0;
      var Tn = function() {
        function t2(n3, r3, o2, i2) {
          !function(t3, e2) {
            if (!(t3 instanceof e2))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), Sn(this, "options", void 0), Sn(this, "_actions", void 0), Sn(this, "target", void 0), Sn(this, "events", new yn.Eventable()), Sn(this, "_context", void 0), Sn(this, "_win", void 0), Sn(this, "_doc", void 0), Sn(this, "_scopeEvents", void 0), Sn(this, "_rectChecker", void 0), this._actions = r3.actions, this.target = n3, this._context = r3.context || o2, this._win = (0, e.getWindow)((0, _.trySelector)(n3) ? this._context : n3), this._doc = this._win.document, this._scopeEvents = i2, this.set(r3);
        }
        var n2, r2;
        return n2 = t2, (r2 = [{ key: "_defaults", get: function() {
          return { base: {}, perAction: {}, actions: {} };
        } }, { key: "setOnEvents", value: function(t3, e2) {
          return i.default.func(e2.onstart) && this.on("".concat(t3, "start"), e2.onstart), i.default.func(e2.onmove) && this.on("".concat(t3, "move"), e2.onmove), i.default.func(e2.onend) && this.on("".concat(t3, "end"), e2.onend), i.default.func(e2.oninertiastart) && this.on("".concat(t3, "inertiastart"), e2.oninertiastart), this;
        } }, { key: "updatePerActionListeners", value: function(t3, e2, n3) {
          (i.default.array(e2) || i.default.object(e2)) && this.off(t3, e2), (i.default.array(n3) || i.default.object(n3)) && this.on(t3, n3);
        } }, { key: "setPerAction", value: function(t3, e2) {
          var n3 = this._defaults;
          for (var r3 in e2) {
            var o2 = r3, a2 = this.options[t3], s2 = e2[o2];
            "listeners" === o2 && this.updatePerActionListeners(t3, a2.listeners, s2), i.default.array(s2) ? a2[o2] = H.from(s2) : i.default.plainObject(s2) ? (a2[o2] = (0, M.default)(a2[o2] || {}, (0, ye.default)(s2)), i.default.object(n3.perAction[o2]) && "enabled" in n3.perAction[o2] && (a2[o2].enabled = false !== s2.enabled)) : i.default.bool(s2) && i.default.object(n3.perAction[o2]) ? a2[o2].enabled = s2 : a2[o2] = s2;
          }
        } }, { key: "getRect", value: function(t3) {
          return t3 = t3 || (i.default.element(this.target) ? this.target : null), i.default.string(this.target) && (t3 = t3 || this._context.querySelector(this.target)), (0, _.getElementRect)(t3);
        } }, { key: "rectChecker", value: function(t3) {
          var e2 = this;
          return i.default.func(t3) ? (this._rectChecker = t3, this.getRect = function(t4) {
            var n3 = (0, M.default)({}, e2._rectChecker(t4));
            return "width" in n3 || (n3.width = n3.right - n3.left, n3.height = n3.bottom - n3.top), n3;
          }, this) : null === t3 ? (delete this.getRect, delete this._rectChecker, this) : this.getRect;
        } }, { key: "_backCompatOption", value: function(t3, e2) {
          if ((0, _.trySelector)(e2) || i.default.object(e2)) {
            for (var n3 in this.options[t3] = e2, this._actions.map)
              this.options[n3][t3] = e2;
            return this;
          }
          return this.options[t3];
        } }, { key: "origin", value: function(t3) {
          return this._backCompatOption("origin", t3);
        } }, { key: "deltaSource", value: function(t3) {
          return "page" === t3 || "client" === t3 ? (this.options.deltaSource = t3, this) : this.options.deltaSource;
        } }, { key: "context", value: function() {
          return this._context;
        } }, { key: "inContext", value: function(t3) {
          return this._context === t3.ownerDocument || (0, _.nodeContains)(this._context, t3);
        } }, { key: "testIgnoreAllow", value: function(t3, e2, n3) {
          return !this.testIgnore(t3.ignoreFrom, e2, n3) && this.testAllow(t3.allowFrom, e2, n3);
        } }, { key: "testAllow", value: function(t3, e2, n3) {
          return !t3 || !!i.default.element(n3) && (i.default.string(t3) ? (0, _.matchesUpTo)(n3, t3, e2) : !!i.default.element(t3) && (0, _.nodeContains)(t3, n3));
        } }, { key: "testIgnore", value: function(t3, e2, n3) {
          return !(!t3 || !i.default.element(n3)) && (i.default.string(t3) ? (0, _.matchesUpTo)(n3, t3, e2) : !!i.default.element(t3) && (0, _.nodeContains)(t3, n3));
        } }, { key: "fire", value: function(t3) {
          return this.events.fire(t3), this;
        } }, { key: "_onOff", value: function(t3, e2, n3, r3) {
          i.default.object(e2) && !i.default.array(e2) && (r3 = n3, n3 = null);
          var o2 = "on" === t3 ? "add" : "remove", a2 = (0, z.default)(e2, n3);
          for (var s2 in a2) {
            "wheel" === s2 && (s2 = b.default.wheelEvent);
            for (var l2 = 0; l2 < a2[s2].length; l2++) {
              var u2 = a2[s2][l2];
              (0, _n.default)(s2, this._actions) ? this.events[t3](s2, u2) : i.default.string(this.target) ? this._scopeEvents["".concat(o2, "Delegate")](this.target, this._context, s2, u2, r3) : this._scopeEvents[o2](this.target, s2, u2, r3);
            }
          }
          return this;
        } }, { key: "on", value: function(t3, e2, n3) {
          return this._onOff("on", t3, e2, n3);
        } }, { key: "off", value: function(t3, e2, n3) {
          return this._onOff("off", t3, e2, n3);
        } }, { key: "set", value: function(t3) {
          var e2 = this._defaults;
          for (var n3 in i.default.object(t3) || (t3 = {}), this.options = (0, ye.default)(e2.base), this._actions.methodDict) {
            var r3 = n3, o2 = this._actions.methodDict[r3];
            this.options[r3] = {}, this.setPerAction(r3, (0, M.default)((0, M.default)({}, e2.perAction), e2.actions[r3])), this[o2](t3[r3]);
          }
          for (var a2 in t3)
            i.default.func(this[a2]) && this[a2](t3[a2]);
          return this;
        } }, { key: "unset", value: function() {
          if (i.default.string(this.target))
            for (var t3 in this._scopeEvents.delegatedEvents)
              for (var e2 = this._scopeEvents.delegatedEvents[t3], n3 = e2.length - 1; n3 >= 0; n3--) {
                var r3 = e2[n3], o2 = r3.selector, a2 = r3.context, s2 = r3.listeners;
                o2 === this.target && a2 === this._context && e2.splice(n3, 1);
                for (var l2 = s2.length - 1; l2 >= 0; l2--)
                  this._scopeEvents.removeDelegate(this.target, this._context, t3, s2[l2][0], s2[l2][1]);
              }
          else
            this._scopeEvents.remove(this.target, "all");
        } }]) && En(n2.prototype, r2), Object.defineProperty(n2, "prototype", { writable: false }), t2;
      }();
      On.Interactable = Tn;
      var jn = {};
      function Mn(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function kn(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(jn, "__esModule", { value: true }), jn.InteractableSet = void 0;
      var In = function() {
        function t2(e3) {
          var n3 = this;
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), kn(this, "list", []), kn(this, "selectorMap", {}), kn(this, "scope", void 0), this.scope = e3, e3.addListeners({ "interactable:unset": function(t3) {
            var e4 = t3.interactable, r2 = e4.target, o2 = e4._context, a2 = i.default.string(r2) ? n3.selectorMap[r2] : r2[n3.scope.id], s2 = H.findIndex(a2, function(t4) {
              return t4.context === o2;
            });
            a2[s2] && (a2[s2].context = null, a2[s2].interactable = null), a2.splice(s2, 1);
          } });
        }
        var e2, n2;
        return e2 = t2, (n2 = [{ key: "new", value: function(t3, e3) {
          e3 = (0, M.default)(e3 || {}, { actions: this.scope.actions });
          var n3 = new this.scope.Interactable(t3, e3, this.scope.document, this.scope.events), r2 = { context: n3._context, interactable: n3 };
          return this.scope.addDocument(n3._doc), this.list.push(n3), i.default.string(t3) ? (this.selectorMap[t3] || (this.selectorMap[t3] = []), this.selectorMap[t3].push(r2)) : (n3.target[this.scope.id] || Object.defineProperty(t3, this.scope.id, { value: [], configurable: true }), t3[this.scope.id].push(r2)), this.scope.fire("interactable:new", { target: t3, options: e3, interactable: n3, win: this.scope._win }), n3;
        } }, { key: "get", value: function(t3, e3) {
          var n3 = e3 && e3.context || this.scope.document, r2 = i.default.string(t3), o2 = r2 ? this.selectorMap[t3] : t3[this.scope.id];
          if (!o2)
            return null;
          var a2 = H.find(o2, function(e4) {
            return e4.context === n3 && (r2 || e4.interactable.inContext(t3));
          });
          return a2 && a2.interactable;
        } }, { key: "forEachMatch", value: function(t3, e3) {
          for (var n3 = 0; n3 < this.list.length; n3++) {
            var r2 = this.list[n3], o2 = void 0;
            if ((i.default.string(r2.target) ? i.default.element(t3) && _.matchesSelector(t3, r2.target) : t3 === r2.target) && r2.inContext(t3) && (o2 = e3(r2)), void 0 !== o2)
              return o2;
          }
        } }]) && Mn(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      jn.InteractableSet = In;
      var Dn = {};
      function An(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function zn(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      function Cn(t2, e2) {
        return function(t3) {
          if (Array.isArray(t3))
            return t3;
        }(t2) || function(t3, e3) {
          var n2 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (null != n2) {
            var r2, o2, i2 = [], a2 = true, s2 = false;
            try {
              for (n2 = n2.call(t3); !(a2 = (r2 = n2.next()).done) && (i2.push(r2.value), !e3 || i2.length !== e3); a2 = true)
                ;
            } catch (t4) {
              s2 = true, o2 = t4;
            } finally {
              try {
                a2 || null == n2.return || n2.return();
              } finally {
                if (s2)
                  throw o2;
              }
            }
            return i2;
          }
        }(t2, e2) || function(t3, e3) {
          if (t3) {
            if ("string" == typeof t3)
              return Rn(t3, e3);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            return "Object" === n2 && t3.constructor && (n2 = t3.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t3) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? Rn(t3, e3) : void 0;
          }
        }(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function Rn(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var n2 = 0, r2 = Array(e2); n2 < e2; n2++)
          r2[n2] = t2[n2];
        return r2;
      }
      Object.defineProperty(Dn, "__esModule", { value: true }), Dn.default = void 0;
      var Fn = function() {
        function t2(e3) {
          !function(t3, e4) {
            if (!(t3 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, t2), zn(this, "currentTarget", void 0), zn(this, "originalEvent", void 0), zn(this, "type", void 0), this.originalEvent = e3, (0, F.default)(this, e3);
        }
        var e2, n2;
        return e2 = t2, (n2 = [{ key: "preventOriginalDefault", value: function() {
          this.originalEvent.preventDefault();
        } }, { key: "stopPropagation", value: function() {
          this.originalEvent.stopPropagation();
        } }, { key: "stopImmediatePropagation", value: function() {
          this.originalEvent.stopImmediatePropagation();
        } }]) && An(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
      }();
      function Xn(t2) {
        if (!i.default.object(t2))
          return { capture: !!t2, passive: false };
        var e2 = (0, M.default)({}, t2);
        return e2.capture = !!t2.capture, e2.passive = !!t2.passive, e2;
      }
      var Bn = { id: "events", install: function(t2) {
        var e2, n2 = [], r2 = {}, o2 = [], a2 = { add: s2, remove: l2, addDelegate: function(t3, e3, n3, i2, a3) {
          var l3 = Xn(a3);
          if (!r2[n3]) {
            r2[n3] = [];
            for (var f2 = 0; f2 < o2.length; f2++) {
              var d2 = o2[f2];
              s2(d2, n3, u2), s2(d2, n3, c2, true);
            }
          }
          var p2 = r2[n3], v2 = H.find(p2, function(n4) {
            return n4.selector === t3 && n4.context === e3;
          });
          v2 || (v2 = { selector: t3, context: e3, listeners: [] }, p2.push(v2)), v2.listeners.push([i2, l3]);
        }, removeDelegate: function(t3, e3, n3, o3, i2) {
          var a3, s3 = Xn(i2), f2 = r2[n3], d2 = false;
          if (f2)
            for (a3 = f2.length - 1; a3 >= 0; a3--) {
              var p2 = f2[a3];
              if (p2.selector === t3 && p2.context === e3) {
                for (var v2 = p2.listeners, h2 = v2.length - 1; h2 >= 0; h2--) {
                  var g2 = Cn(v2[h2], 2), y2 = g2[0], m2 = g2[1], b2 = m2.capture, x2 = m2.passive;
                  if (y2 === o3 && b2 === s3.capture && x2 === s3.passive) {
                    v2.splice(h2, 1), v2.length || (f2.splice(a3, 1), l2(e3, n3, u2), l2(e3, n3, c2, true)), d2 = true;
                    break;
                  }
                }
                if (d2)
                  break;
              }
            }
        }, delegateListener: u2, delegateUseCapture: c2, delegatedEvents: r2, documents: o2, targets: n2, supportsOptions: false, supportsPassive: false };
        function s2(t3, e3, r3, o3) {
          var i2 = Xn(o3), s3 = H.find(n2, function(e4) {
            return e4.eventTarget === t3;
          });
          s3 || (s3 = { eventTarget: t3, events: {} }, n2.push(s3)), s3.events[e3] || (s3.events[e3] = []), t3.addEventListener && !H.contains(s3.events[e3], r3) && (t3.addEventListener(e3, r3, a2.supportsOptions ? i2 : i2.capture), s3.events[e3].push(r3));
        }
        function l2(t3, e3, r3, o3) {
          var i2 = Xn(o3), s3 = H.findIndex(n2, function(e4) {
            return e4.eventTarget === t3;
          }), u3 = n2[s3];
          if (u3 && u3.events)
            if ("all" !== e3) {
              var c3 = false, f2 = u3.events[e3];
              if (f2) {
                if ("all" === r3) {
                  for (var d2 = f2.length - 1; d2 >= 0; d2--)
                    l2(t3, e3, f2[d2], i2);
                  return;
                }
                for (var p2 = 0; p2 < f2.length; p2++)
                  if (f2[p2] === r3) {
                    t3.removeEventListener(e3, r3, a2.supportsOptions ? i2 : i2.capture), f2.splice(p2, 1), 0 === f2.length && (delete u3.events[e3], c3 = true);
                    break;
                  }
              }
              c3 && !Object.keys(u3.events).length && n2.splice(s3, 1);
            } else
              for (e3 in u3.events)
                u3.events.hasOwnProperty(e3) && l2(t3, e3, "all");
        }
        function u2(t3, e3) {
          for (var n3 = Xn(e3), o3 = new Fn(t3), a3 = r2[t3.type], s3 = Cn(X.getEventTargets(t3), 1)[0], l3 = s3; i.default.element(l3); ) {
            for (var u3 = 0; u3 < a3.length; u3++) {
              var c3 = a3[u3], f2 = c3.selector, d2 = c3.context;
              if (_.matchesSelector(l3, f2) && _.nodeContains(d2, s3) && _.nodeContains(d2, l3)) {
                var p2 = c3.listeners;
                o3.currentTarget = l3;
                for (var v2 = 0; v2 < p2.length; v2++) {
                  var h2 = Cn(p2[v2], 2), g2 = h2[0], y2 = h2[1], m2 = y2.capture, b2 = y2.passive;
                  m2 === n3.capture && b2 === n3.passive && g2(o3);
                }
              }
            }
            l3 = _.parentNode(l3);
          }
        }
        function c2(t3) {
          return u2(t3, true);
        }
        return null == (e2 = t2.document) || e2.createElement("div").addEventListener("test", null, { get capture() {
          return a2.supportsOptions = true;
        }, get passive() {
          return a2.supportsPassive = true;
        } }), t2.events = a2, a2;
      } };
      Dn.default = Bn;
      var Yn = {};
      Object.defineProperty(Yn, "__esModule", { value: true }), Yn.default = void 0;
      var Wn = { methodOrder: ["simulationResume", "mouseOrPen", "hasPointer", "idle"], search: function(t2) {
        for (var e2 = 0; e2 < Wn.methodOrder.length; e2++) {
          var n2;
          n2 = Wn.methodOrder[e2];
          var r2 = Wn[n2](t2);
          if (r2)
            return r2;
        }
        return null;
      }, simulationResume: function(t2) {
        var e2 = t2.pointerType, n2 = t2.eventType, r2 = t2.eventTarget, o2 = t2.scope;
        if (!/down|start/i.test(n2))
          return null;
        for (var i2 = 0; i2 < o2.interactions.list.length; i2++) {
          var a2 = o2.interactions.list[i2], s2 = r2;
          if (a2.simulation && a2.simulation.allowResume && a2.pointerType === e2)
            for (; s2; ) {
              if (s2 === a2.element)
                return a2;
              s2 = _.parentNode(s2);
            }
        }
        return null;
      }, mouseOrPen: function(t2) {
        var e2, n2 = t2.pointerId, r2 = t2.pointerType, o2 = t2.eventType, i2 = t2.scope;
        if ("mouse" !== r2 && "pen" !== r2)
          return null;
        for (var a2 = 0; a2 < i2.interactions.list.length; a2++) {
          var s2 = i2.interactions.list[a2];
          if (s2.pointerType === r2) {
            if (s2.simulation && !Ln(s2, n2))
              continue;
            if (s2.interacting())
              return s2;
            e2 || (e2 = s2);
          }
        }
        if (e2)
          return e2;
        for (var l2 = 0; l2 < i2.interactions.list.length; l2++) {
          var u2 = i2.interactions.list[l2];
          if (!(u2.pointerType !== r2 || /down/i.test(o2) && u2.simulation))
            return u2;
        }
        return null;
      }, hasPointer: function(t2) {
        for (var e2 = t2.pointerId, n2 = t2.scope, r2 = 0; r2 < n2.interactions.list.length; r2++) {
          var o2 = n2.interactions.list[r2];
          if (Ln(o2, e2))
            return o2;
        }
        return null;
      }, idle: function(t2) {
        for (var e2 = t2.pointerType, n2 = t2.scope, r2 = 0; r2 < n2.interactions.list.length; r2++) {
          var o2 = n2.interactions.list[r2];
          if (1 === o2.pointers.length) {
            var i2 = o2.interactable;
            if (i2 && (!i2.options.gesture || !i2.options.gesture.enabled))
              continue;
          } else if (o2.pointers.length >= 2)
            continue;
          if (!o2.interacting() && e2 === o2.pointerType)
            return o2;
        }
        return null;
      } };
      function Ln(t2, e2) {
        return t2.pointers.some(function(t3) {
          return t3.id === e2;
        });
      }
      var Un = Wn;
      Yn.default = Un;
      var Vn = {};
      function Nn(t2) {
        return Nn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, Nn(t2);
      }
      function qn(t2, e2) {
        return function(t3) {
          if (Array.isArray(t3))
            return t3;
        }(t2) || function(t3, e3) {
          var n2 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (null != n2) {
            var r2, o2, i2 = [], a2 = true, s2 = false;
            try {
              for (n2 = n2.call(t3); !(a2 = (r2 = n2.next()).done) && (i2.push(r2.value), !e3 || i2.length !== e3); a2 = true)
                ;
            } catch (t4) {
              s2 = true, o2 = t4;
            } finally {
              try {
                a2 || null == n2.return || n2.return();
              } finally {
                if (s2)
                  throw o2;
              }
            }
            return i2;
          }
        }(t2, e2) || function(t3, e3) {
          if (t3) {
            if ("string" == typeof t3)
              return Gn(t3, e3);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            return "Object" === n2 && t3.constructor && (n2 = t3.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t3) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? Gn(t3, e3) : void 0;
          }
        }(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function Gn(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var n2 = 0, r2 = Array(e2); n2 < e2; n2++)
          r2[n2] = t2[n2];
        return r2;
      }
      function $n(t2, e2) {
        if (!(t2 instanceof e2))
          throw new TypeError("Cannot call a class as a function");
      }
      function Hn(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function Kn(t2, e2) {
        return Kn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, Kn(t2, e2);
      }
      function Zn(t2, e2) {
        if (e2 && ("object" === Nn(e2) || "function" == typeof e2))
          return e2;
        if (void 0 !== e2)
          throw new TypeError("Derived constructors may only return object or undefined");
        return function(t3) {
          if (void 0 === t3)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t3;
        }(t2);
      }
      function Jn(t2) {
        return Jn = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, Jn(t2);
      }
      Object.defineProperty(Vn, "__esModule", { value: true }), Vn.default = void 0;
      var Qn = ["pointerDown", "pointerMove", "pointerUp", "updatePointer", "removePointer", "windowBlur"];
      function tr(t2, e2) {
        return function(n2) {
          var r2 = e2.interactions.list, o2 = X.getPointerType(n2), i2 = qn(X.getEventTargets(n2), 2), a2 = i2[0], s2 = i2[1], l2 = [];
          if (/^touch/.test(n2.type)) {
            e2.prevTouchTime = e2.now();
            for (var u2 = 0; u2 < n2.changedTouches.length; u2++) {
              var c2 = n2.changedTouches[u2], f2 = { pointer: c2, pointerId: X.getPointerId(c2), pointerType: o2, eventType: n2.type, eventTarget: a2, curEventTarget: s2, scope: e2 }, d2 = er(f2);
              l2.push([f2.pointer, f2.eventTarget, f2.curEventTarget, d2]);
            }
          } else {
            var p2 = false;
            if (!b.default.supportsPointerEvent && /mouse/.test(n2.type)) {
              for (var v2 = 0; v2 < r2.length && !p2; v2++)
                p2 = "mouse" !== r2[v2].pointerType && r2[v2].pointerIsDown;
              p2 = p2 || e2.now() - e2.prevTouchTime < 500 || 0 === n2.timeStamp;
            }
            if (!p2) {
              var h2 = { pointer: n2, pointerId: X.getPointerId(n2), pointerType: o2, eventType: n2.type, curEventTarget: s2, eventTarget: a2, scope: e2 }, g2 = er(h2);
              l2.push([h2.pointer, h2.eventTarget, h2.curEventTarget, g2]);
            }
          }
          for (var y2 = 0; y2 < l2.length; y2++) {
            var m2 = qn(l2[y2], 4), x2 = m2[0], w2 = m2[1], _2 = m2[2];
            m2[3][t2](x2, n2, w2, _2);
          }
        };
      }
      function er(t2) {
        var e2 = t2.pointerType, n2 = t2.scope, r2 = { interaction: Yn.default.search(t2), searchDetails: t2 };
        return n2.fire("interactions:find", r2), r2.interaction || n2.interactions.new({ pointerType: e2 });
      }
      function nr(t2, e2) {
        var n2 = t2.doc, r2 = t2.scope, o2 = t2.options, i2 = r2.interactions.docEvents, a2 = r2.events, s2 = a2[e2];
        for (var l2 in r2.browser.isIOS && !o2.events && (o2.events = { passive: false }), a2.delegatedEvents)
          s2(n2, l2, a2.delegateListener), s2(n2, l2, a2.delegateUseCapture, true);
        for (var u2 = o2 && o2.events, c2 = 0; c2 < i2.length; c2++) {
          var f2 = i2[c2];
          s2(n2, f2.type, f2.listener, u2);
        }
      }
      var rr = { id: "core/interactions", install: function(t2) {
        for (var e2 = {}, n2 = 0; n2 < Qn.length; n2++) {
          var r2 = Qn[n2];
          e2[r2] = tr(r2, t2);
        }
        var o2, i2 = b.default.pEventTypes;
        function a2() {
          for (var e3 = 0; e3 < t2.interactions.list.length; e3++) {
            var n3 = t2.interactions.list[e3];
            if (n3.pointerIsDown && "touch" === n3.pointerType && !n3._interacting)
              for (var r3 = function() {
                var e4 = n3.pointers[o3];
                t2.documents.some(function(t3) {
                  var n4 = t3.doc;
                  return (0, _.nodeContains)(n4, e4.downTarget);
                }) || n3.removePointer(e4.pointer, e4.event);
              }, o3 = 0; o3 < n3.pointers.length; o3++)
                r3();
          }
        }
        (o2 = h.default.PointerEvent ? [{ type: i2.down, listener: a2 }, { type: i2.down, listener: e2.pointerDown }, { type: i2.move, listener: e2.pointerMove }, { type: i2.up, listener: e2.pointerUp }, { type: i2.cancel, listener: e2.pointerUp }] : [{ type: "mousedown", listener: e2.pointerDown }, { type: "mousemove", listener: e2.pointerMove }, { type: "mouseup", listener: e2.pointerUp }, { type: "touchstart", listener: a2 }, { type: "touchstart", listener: e2.pointerDown }, { type: "touchmove", listener: e2.pointerMove }, { type: "touchend", listener: e2.pointerUp }, { type: "touchcancel", listener: e2.pointerUp }]).push({ type: "blur", listener: function(e3) {
          for (var n3 = 0; n3 < t2.interactions.list.length; n3++)
            t2.interactions.list[n3].documentBlur(e3);
        } }), t2.prevTouchTime = 0, t2.Interaction = function(e3) {
          !function(t3, e4) {
            if ("function" != typeof e4 && null !== e4)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t3, writable: true, configurable: true } }), Object.defineProperty(t3, "prototype", { writable: false }), e4 && Kn(t3, e4);
          }(s2, e3);
          var n3, r3, o3, i3, a3 = (o3 = s2, i3 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (t3) {
              return false;
            }
          }(), function() {
            var t3, e4 = Jn(o3);
            if (i3) {
              var n4 = Jn(this).constructor;
              t3 = Reflect.construct(e4, arguments, n4);
            } else
              t3 = e4.apply(this, arguments);
            return Zn(this, t3);
          });
          function s2() {
            return $n(this, s2), a3.apply(this, arguments);
          }
          return n3 = s2, (r3 = [{ key: "pointerMoveTolerance", get: function() {
            return t2.interactions.pointerMoveTolerance;
          }, set: function(e4) {
            t2.interactions.pointerMoveTolerance = e4;
          } }, { key: "_now", value: function() {
            return t2.now();
          } }]) && Hn(n3.prototype, r3), Object.defineProperty(n3, "prototype", { writable: false }), s2;
        }(Ge.default), t2.interactions = { list: [], new: function(e3) {
          e3.scopeFire = function(e4, n4) {
            return t2.fire(e4, n4);
          };
          var n3 = new t2.Interaction(e3);
          return t2.interactions.list.push(n3), n3;
        }, listeners: e2, docEvents: o2, pointerMoveTolerance: 1 }, t2.usePlugin(le.default);
      }, listeners: { "scope:add-document": function(t2) {
        return nr(t2, "add");
      }, "scope:remove-document": function(t2) {
        return nr(t2, "remove");
      }, "interactable:unset": function(t2, e2) {
        for (var n2 = t2.interactable, r2 = e2.interactions.list.length - 1; r2 >= 0; r2--) {
          var o2 = e2.interactions.list[r2];
          o2.interactable === n2 && (o2.stop(), e2.fire("interactions:destroy", { interaction: o2 }), o2.destroy(), e2.interactions.list.length > 2 && e2.interactions.list.splice(r2, 1));
        }
      } }, onDocSignal: nr, doOnInteractions: tr, methodNames: Qn }, or = rr;
      Vn.default = or;
      var ir = {};
      function ar(t2) {
        return ar = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, ar(t2);
      }
      function sr() {
        return sr = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t2, e2, n2) {
          var r2 = lr(t2, e2);
          if (r2) {
            var o2 = Object.getOwnPropertyDescriptor(r2, e2);
            return o2.get ? o2.get.call(arguments.length < 3 ? t2 : n2) : o2.value;
          }
        }, sr.apply(this, arguments);
      }
      function lr(t2, e2) {
        for (; !Object.prototype.hasOwnProperty.call(t2, e2) && null !== (t2 = fr(t2)); )
          ;
        return t2;
      }
      function ur(t2, e2) {
        return ur = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, ur(t2, e2);
      }
      function cr(t2, e2) {
        if (e2 && ("object" === ar(e2) || "function" == typeof e2))
          return e2;
        if (void 0 !== e2)
          throw new TypeError("Derived constructors may only return object or undefined");
        return function(t3) {
          if (void 0 === t3)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t3;
        }(t2);
      }
      function fr(t2) {
        return fr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, fr(t2);
      }
      function dr(t2, e2) {
        if (!(t2 instanceof e2))
          throw new TypeError("Cannot call a class as a function");
      }
      function pr(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function vr(t2, e2, n2) {
        return e2 && pr(t2.prototype, e2), n2 && pr(t2, n2), Object.defineProperty(t2, "prototype", { writable: false }), t2;
      }
      function hr(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(ir, "__esModule", { value: true }), ir.Scope = void 0, ir.initScope = yr;
      var gr = function() {
        function t2() {
          var e2 = this;
          dr(this, t2), hr(this, "id", "__interact_scope_".concat(Math.floor(100 * Math.random()))), hr(this, "isInitialized", false), hr(this, "listenerMaps", []), hr(this, "browser", b.default), hr(this, "defaults", (0, ye.default)(ke.defaults)), hr(this, "Eventable", yn.Eventable), hr(this, "actions", { map: {}, phases: { start: true, move: true, end: true }, methodDict: {}, phaselessTypes: {} }), hr(this, "interactStatic", (0, Pn.createInteractStatic)(this)), hr(this, "InteractEvent", Ie.InteractEvent), hr(this, "Interactable", void 0), hr(this, "interactables", new jn.InteractableSet(this)), hr(this, "_win", void 0), hr(this, "document", void 0), hr(this, "window", void 0), hr(this, "documents", []), hr(this, "_plugins", { list: [], map: {} }), hr(this, "onWindowUnload", function(t3) {
            return e2.removeDocument(t3.target);
          });
          var n2 = this;
          this.Interactable = function(t3) {
            !function(t4, e4) {
              if ("function" != typeof e4 && null !== e4)
                throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && ur(t4, e4);
            }(i2, t3);
            var e3, r2, o2 = (e3 = i2, r2 = function() {
              if ("undefined" == typeof Reflect || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if ("function" == typeof Proxy)
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t4) {
                return false;
              }
            }(), function() {
              var t4, n3 = fr(e3);
              if (r2) {
                var o3 = fr(this).constructor;
                t4 = Reflect.construct(n3, arguments, o3);
              } else
                t4 = n3.apply(this, arguments);
              return cr(this, t4);
            });
            function i2() {
              return dr(this, i2), o2.apply(this, arguments);
            }
            return vr(i2, [{ key: "_defaults", get: function() {
              return n2.defaults;
            } }, { key: "set", value: function(t4) {
              return sr(fr(i2.prototype), "set", this).call(this, t4), n2.fire("interactable:set", { options: t4, interactable: this }), this;
            } }, { key: "unset", value: function() {
              sr(fr(i2.prototype), "unset", this).call(this);
              var t4 = n2.interactables.list.indexOf(this);
              t4 < 0 || (sr(fr(i2.prototype), "unset", this).call(this), n2.interactables.list.splice(t4, 1), n2.fire("interactable:unset", { interactable: this }));
            } }]), i2;
          }(On.Interactable);
        }
        return vr(t2, [{ key: "addListeners", value: function(t3, e2) {
          this.listenerMaps.push({ id: e2, map: t3 });
        } }, { key: "fire", value: function(t3, e2) {
          for (var n2 = 0; n2 < this.listenerMaps.length; n2++) {
            var r2 = this.listenerMaps[n2].map[t3];
            if (r2 && false === r2(e2, this, t3))
              return false;
          }
        } }, { key: "init", value: function(t3) {
          return this.isInitialized ? this : yr(this, t3);
        } }, { key: "pluginIsInstalled", value: function(t3) {
          return this._plugins.map[t3.id] || -1 !== this._plugins.list.indexOf(t3);
        } }, { key: "usePlugin", value: function(t3, e2) {
          if (!this.isInitialized)
            return this;
          if (this.pluginIsInstalled(t3))
            return this;
          if (t3.id && (this._plugins.map[t3.id] = t3), this._plugins.list.push(t3), t3.install && t3.install(this, e2), t3.listeners && t3.before) {
            for (var n2 = 0, r2 = this.listenerMaps.length, o2 = t3.before.reduce(function(t4, e3) {
              return t4[e3] = true, t4[mr(e3)] = true, t4;
            }, {}); n2 < r2; n2++) {
              var i2 = this.listenerMaps[n2].id;
              if (o2[i2] || o2[mr(i2)])
                break;
            }
            this.listenerMaps.splice(n2, 0, { id: t3.id, map: t3.listeners });
          } else
            t3.listeners && this.listenerMaps.push({ id: t3.id, map: t3.listeners });
          return this;
        } }, { key: "addDocument", value: function(t3, n2) {
          if (-1 !== this.getDocIndex(t3))
            return false;
          var r2 = e.getWindow(t3);
          n2 = n2 ? (0, M.default)({}, n2) : {}, this.documents.push({ doc: t3, options: n2 }), this.events.documents.push(t3), t3 !== this.document && this.events.add(r2, "unload", this.onWindowUnload), this.fire("scope:add-document", { doc: t3, window: r2, scope: this, options: n2 });
        } }, { key: "removeDocument", value: function(t3) {
          var n2 = this.getDocIndex(t3), r2 = e.getWindow(t3), o2 = this.documents[n2].options;
          this.events.remove(r2, "unload", this.onWindowUnload), this.documents.splice(n2, 1), this.events.documents.splice(n2, 1), this.fire("scope:remove-document", { doc: t3, window: r2, scope: this, options: o2 });
        } }, { key: "getDocIndex", value: function(t3) {
          for (var e2 = 0; e2 < this.documents.length; e2++)
            if (this.documents[e2].doc === t3)
              return e2;
          return -1;
        } }, { key: "getDocOptions", value: function(t3) {
          var e2 = this.getDocIndex(t3);
          return -1 === e2 ? null : this.documents[e2].options;
        } }, { key: "now", value: function() {
          return (this.window.Date || Date).now();
        } }]), t2;
      }();
      function yr(t2, n2) {
        return t2.isInitialized = true, i.default.window(n2) && e.init(n2), h.default.init(n2), b.default.init(n2), Tt.default.init(n2), t2.window = n2, t2.document = n2.document, t2.usePlugin(Vn.default), t2.usePlugin(Dn.default), t2;
      }
      function mr(t2) {
        return t2 && t2.replace(/\/.*$/, "");
      }
      ir.Scope = gr;
      var br = {};
      Object.defineProperty(br, "__esModule", { value: true }), br.default = void 0;
      var xr = new ir.Scope(), wr = xr.interactStatic;
      br.default = wr;
      var _r = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0;
      xr.init(_r);
      var Pr = {};
      Object.defineProperty(Pr, "__esModule", { value: true }), Pr.default = void 0, Pr.default = function() {
      };
      var Or = {};
      Object.defineProperty(Or, "__esModule", { value: true }), Or.default = void 0, Or.default = function() {
      };
      var Er = {};
      function Sr(t2, e2) {
        return function(t3) {
          if (Array.isArray(t3))
            return t3;
        }(t2) || function(t3, e3) {
          var n2 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (null != n2) {
            var r2, o2, i2 = [], a2 = true, s2 = false;
            try {
              for (n2 = n2.call(t3); !(a2 = (r2 = n2.next()).done) && (i2.push(r2.value), !e3 || i2.length !== e3); a2 = true)
                ;
            } catch (t4) {
              s2 = true, o2 = t4;
            } finally {
              try {
                a2 || null == n2.return || n2.return();
              } finally {
                if (s2)
                  throw o2;
              }
            }
            return i2;
          }
        }(t2, e2) || function(t3, e3) {
          if (t3) {
            if ("string" == typeof t3)
              return Tr(t3, e3);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            return "Object" === n2 && t3.constructor && (n2 = t3.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t3) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? Tr(t3, e3) : void 0;
          }
        }(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function Tr(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var n2 = 0, r2 = Array(e2); n2 < e2; n2++)
          r2[n2] = t2[n2];
        return r2;
      }
      Object.defineProperty(Er, "__esModule", { value: true }), Er.default = void 0, Er.default = function(t2) {
        var e2 = [["x", "y"], ["left", "top"], ["right", "bottom"], ["width", "height"]].filter(function(e3) {
          var n3 = Sr(e3, 2), r2 = n3[0], o2 = n3[1];
          return r2 in t2 || o2 in t2;
        }), n2 = function(n3, r2) {
          for (var o2 = t2.range, i2 = t2.limits, a2 = void 0 === i2 ? { left: -1 / 0, right: 1 / 0, top: -1 / 0, bottom: 1 / 0 } : i2, s2 = t2.offset, l2 = void 0 === s2 ? { x: 0, y: 0 } : s2, u2 = { range: o2, grid: t2, x: null, y: null }, c2 = 0; c2 < e2.length; c2++) {
            var f2 = Sr(e2[c2], 2), d2 = f2[0], p2 = f2[1], v2 = Math.round((n3 - l2.x) / t2[d2]), h2 = Math.round((r2 - l2.y) / t2[p2]);
            u2[d2] = Math.max(a2.left, Math.min(a2.right, v2 * t2[d2] + l2.x)), u2[p2] = Math.max(a2.top, Math.min(a2.bottom, h2 * t2[p2] + l2.y));
          }
          return u2;
        };
        return n2.grid = t2, n2.coordFields = e2, n2;
      };
      var jr = {};
      Object.defineProperty(jr, "__esModule", { value: true }), Object.defineProperty(jr, "edgeTarget", { enumerable: true, get: function() {
        return Pr.default;
      } }), Object.defineProperty(jr, "elements", { enumerable: true, get: function() {
        return Or.default;
      } }), Object.defineProperty(jr, "grid", { enumerable: true, get: function() {
        return Er.default;
      } });
      var Mr = {};
      Object.defineProperty(Mr, "__esModule", { value: true }), Mr.default = void 0;
      var kr = { id: "snappers", install: function(t2) {
        var e2 = t2.interactStatic;
        e2.snappers = (0, M.default)(e2.snappers || {}, jr), e2.createSnapGrid = e2.snappers.grid;
      } }, Ir = kr;
      Mr.default = Ir;
      var Dr = {};
      function Ar(t2, e2) {
        var n2 = Object.keys(t2);
        if (Object.getOwnPropertySymbols) {
          var r2 = Object.getOwnPropertySymbols(t2);
          e2 && (r2 = r2.filter(function(e3) {
            return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
          })), n2.push.apply(n2, r2);
        }
        return n2;
      }
      function zr(t2) {
        for (var e2 = 1; e2 < arguments.length; e2++) {
          var n2 = null != arguments[e2] ? arguments[e2] : {};
          e2 % 2 ? Ar(Object(n2), true).forEach(function(e3) {
            Cr(t2, e3, n2[e3]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ar(Object(n2)).forEach(function(e3) {
            Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
          });
        }
        return t2;
      }
      function Cr(t2, e2, n2) {
        return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      Object.defineProperty(Dr, "__esModule", { value: true }), Dr.default = Dr.aspectRatio = void 0;
      var Rr = { start: function(t2) {
        var e2 = t2.state, n2 = t2.rect, r2 = t2.edges, o2 = t2.pageCoords, i2 = e2.options.ratio, a2 = e2.options, s2 = a2.equalDelta, l2 = a2.modifiers;
        "preserve" === i2 && (i2 = n2.width / n2.height), e2.startCoords = (0, M.default)({}, o2), e2.startRect = (0, M.default)({}, n2), e2.ratio = i2, e2.equalDelta = s2;
        var u2 = e2.linkedEdges = { top: r2.top || r2.left && !r2.bottom, left: r2.left || r2.top && !r2.right, bottom: r2.bottom || r2.right && !r2.top, right: r2.right || r2.bottom && !r2.left };
        if (e2.xIsPrimaryAxis = !(!r2.left && !r2.right), e2.equalDelta) {
          var c2 = (u2.left ? 1 : -1) * (u2.top ? 1 : -1);
          e2.edgeSign = { x: c2, y: c2 };
        } else
          e2.edgeSign = { x: u2.left ? -1 : 1, y: u2.top ? -1 : 1 };
        if ((0, M.default)(t2.edges, u2), l2 && l2.length) {
          var f2 = new me.default(t2.interaction);
          f2.copyFrom(t2.interaction.modification), f2.prepareStates(l2), e2.subModification = f2, f2.startAll(zr({}, t2));
        }
      }, set: function(t2) {
        var e2 = t2.state, n2 = t2.rect, r2 = t2.coords, o2 = (0, M.default)({}, r2), i2 = e2.equalDelta ? Fr : Xr;
        if (i2(e2, e2.xIsPrimaryAxis, r2, n2), !e2.subModification)
          return null;
        var a2 = (0, M.default)({}, n2);
        (0, k.addEdges)(e2.linkedEdges, a2, { x: r2.x - o2.x, y: r2.y - o2.y });
        var s2 = e2.subModification.setAll(zr(zr({}, t2), {}, { rect: a2, edges: e2.linkedEdges, pageCoords: r2, prevCoords: r2, prevRect: a2 })), l2 = s2.delta;
        return s2.changed && (i2(e2, Math.abs(l2.x) > Math.abs(l2.y), s2.coords, s2.rect), (0, M.default)(r2, s2.coords)), s2.eventProps;
      }, defaults: { ratio: "preserve", equalDelta: false, modifiers: [], enabled: false } };
      function Fr(t2, e2, n2) {
        var r2 = t2.startCoords, o2 = t2.edgeSign;
        e2 ? n2.y = r2.y + (n2.x - r2.x) * o2.y : n2.x = r2.x + (n2.y - r2.y) * o2.x;
      }
      function Xr(t2, e2, n2, r2) {
        var o2 = t2.startRect, i2 = t2.startCoords, a2 = t2.ratio, s2 = t2.edgeSign;
        if (e2) {
          var l2 = r2.width / a2;
          n2.y = i2.y + (l2 - o2.height) * s2.y;
        } else {
          var u2 = r2.height * a2;
          n2.x = i2.x + (u2 - o2.width) * s2.x;
        }
      }
      Dr.aspectRatio = Rr;
      var Br = (0, Se.makeModifier)(Rr, "aspectRatio");
      Dr.default = Br;
      var Yr = {};
      Object.defineProperty(Yr, "__esModule", { value: true }), Yr.default = void 0;
      var Wr = function() {
      };
      Wr._defaults = {};
      var Lr = Wr;
      Yr.default = Lr;
      var Ur = {};
      Object.defineProperty(Ur, "__esModule", { value: true }), Object.defineProperty(Ur, "default", { enumerable: true, get: function() {
        return Yr.default;
      } });
      var Vr = {};
      function Nr(t2, e2, n2) {
        return i.default.func(t2) ? k.resolveRectLike(t2, e2.interactable, e2.element, [n2.x, n2.y, e2]) : k.resolveRectLike(t2, e2.interactable, e2.element);
      }
      Object.defineProperty(Vr, "__esModule", { value: true }), Vr.default = void 0, Vr.getRestrictionRect = Nr, Vr.restrict = void 0;
      var qr = { start: function(t2) {
        var e2 = t2.rect, n2 = t2.startOffset, r2 = t2.state, o2 = t2.interaction, i2 = t2.pageCoords, a2 = r2.options, s2 = a2.elementRect, l2 = (0, M.default)({ left: 0, top: 0, right: 0, bottom: 0 }, a2.offset || {});
        if (e2 && s2) {
          var u2 = Nr(a2.restriction, o2, i2);
          if (u2) {
            var c2 = u2.right - u2.left - e2.width, f2 = u2.bottom - u2.top - e2.height;
            c2 < 0 && (l2.left += c2, l2.right += c2), f2 < 0 && (l2.top += f2, l2.bottom += f2);
          }
          l2.left += n2.left - e2.width * s2.left, l2.top += n2.top - e2.height * s2.top, l2.right += n2.right - e2.width * (1 - s2.right), l2.bottom += n2.bottom - e2.height * (1 - s2.bottom);
        }
        r2.offset = l2;
      }, set: function(t2) {
        var e2 = t2.coords, n2 = t2.interaction, r2 = t2.state, o2 = r2.options, i2 = r2.offset, a2 = Nr(o2.restriction, n2, e2);
        if (a2) {
          var s2 = k.xywhToTlbr(a2);
          e2.x = Math.max(Math.min(s2.right - i2.right, e2.x), s2.left + i2.left), e2.y = Math.max(Math.min(s2.bottom - i2.bottom, e2.y), s2.top + i2.top);
        }
      }, defaults: { restriction: null, elementRect: null, offset: null, endOnly: false, enabled: false } };
      Vr.restrict = qr;
      var Gr = (0, Se.makeModifier)(qr, "restrict");
      Vr.default = Gr;
      var $r = {};
      Object.defineProperty($r, "__esModule", { value: true }), $r.restrictEdges = $r.default = void 0;
      var Hr = { top: 1 / 0, left: 1 / 0, bottom: -1 / 0, right: -1 / 0 }, Kr = { top: -1 / 0, left: -1 / 0, bottom: 1 / 0, right: 1 / 0 };
      function Zr(t2, e2) {
        for (var n2 = ["top", "left", "bottom", "right"], r2 = 0; r2 < n2.length; r2++) {
          var o2 = n2[r2];
          o2 in t2 || (t2[o2] = e2[o2]);
        }
        return t2;
      }
      var Jr = { noInner: Hr, noOuter: Kr, start: function(t2) {
        var e2, n2 = t2.interaction, r2 = t2.startOffset, o2 = t2.state, i2 = o2.options;
        if (i2) {
          var a2 = (0, Vr.getRestrictionRect)(i2.offset, n2, n2.coords.start.page);
          e2 = k.rectToXY(a2);
        }
        e2 = e2 || { x: 0, y: 0 }, o2.offset = { top: e2.y + r2.top, left: e2.x + r2.left, bottom: e2.y - r2.bottom, right: e2.x - r2.right };
      }, set: function(t2) {
        var e2 = t2.coords, n2 = t2.edges, r2 = t2.interaction, o2 = t2.state, i2 = o2.offset, a2 = o2.options;
        if (n2) {
          var s2 = (0, M.default)({}, e2), l2 = (0, Vr.getRestrictionRect)(a2.inner, r2, s2) || {}, u2 = (0, Vr.getRestrictionRect)(a2.outer, r2, s2) || {};
          Zr(l2, Hr), Zr(u2, Kr), n2.top ? e2.y = Math.min(Math.max(u2.top + i2.top, s2.y), l2.top + i2.top) : n2.bottom && (e2.y = Math.max(Math.min(u2.bottom + i2.bottom, s2.y), l2.bottom + i2.bottom)), n2.left ? e2.x = Math.min(Math.max(u2.left + i2.left, s2.x), l2.left + i2.left) : n2.right && (e2.x = Math.max(Math.min(u2.right + i2.right, s2.x), l2.right + i2.right));
        }
      }, defaults: { inner: null, outer: null, offset: null, endOnly: false, enabled: false } };
      $r.restrictEdges = Jr;
      var Qr = (0, Se.makeModifier)(Jr, "restrictEdges");
      $r.default = Qr;
      var to2 = {};
      Object.defineProperty(to2, "__esModule", { value: true }), to2.restrictRect = to2.default = void 0;
      var eo = (0, M.default)({ get elementRect() {
        return { top: 0, left: 0, bottom: 1, right: 1 };
      }, set elementRect(t2) {
      } }, Vr.restrict.defaults), no = { start: Vr.restrict.start, set: Vr.restrict.set, defaults: eo };
      to2.restrictRect = no;
      var ro = (0, Se.makeModifier)(no, "restrictRect");
      to2.default = ro;
      var oo = {};
      Object.defineProperty(oo, "__esModule", { value: true }), oo.restrictSize = oo.default = void 0;
      var io = { width: -1 / 0, height: -1 / 0 }, ao = { width: 1 / 0, height: 1 / 0 }, so = { start: function(t2) {
        return $r.restrictEdges.start(t2);
      }, set: function(t2) {
        var e2 = t2.interaction, n2 = t2.state, r2 = t2.rect, o2 = t2.edges, i2 = n2.options;
        if (o2) {
          var a2 = k.tlbrToXywh((0, Vr.getRestrictionRect)(i2.min, e2, t2.coords)) || io, s2 = k.tlbrToXywh((0, Vr.getRestrictionRect)(i2.max, e2, t2.coords)) || ao;
          n2.options = { endOnly: i2.endOnly, inner: (0, M.default)({}, $r.restrictEdges.noInner), outer: (0, M.default)({}, $r.restrictEdges.noOuter) }, o2.top ? (n2.options.inner.top = r2.bottom - a2.height, n2.options.outer.top = r2.bottom - s2.height) : o2.bottom && (n2.options.inner.bottom = r2.top + a2.height, n2.options.outer.bottom = r2.top + s2.height), o2.left ? (n2.options.inner.left = r2.right - a2.width, n2.options.outer.left = r2.right - s2.width) : o2.right && (n2.options.inner.right = r2.left + a2.width, n2.options.outer.right = r2.left + s2.width), $r.restrictEdges.set(t2), n2.options = i2;
        }
      }, defaults: { min: null, max: null, endOnly: false, enabled: false } };
      oo.restrictSize = so;
      var lo = (0, Se.makeModifier)(so, "restrictSize");
      oo.default = lo;
      var uo = {};
      Object.defineProperty(uo, "__esModule", { value: true }), Object.defineProperty(uo, "default", { enumerable: true, get: function() {
        return Yr.default;
      } });
      var co = {};
      Object.defineProperty(co, "__esModule", { value: true }), co.snap = co.default = void 0;
      var fo = { start: function(t2) {
        var e2, n2 = t2.interaction, r2 = t2.interactable, o2 = t2.element, i2 = t2.rect, a2 = t2.state, s2 = t2.startOffset, l2 = a2.options, u2 = l2.offsetWithOrigin ? function(t3) {
          var e3 = t3.interaction.element;
          return (0, k.rectToXY)((0, k.resolveRectLike)(t3.state.options.origin, null, null, [e3])) || (0, A.default)(t3.interactable, e3, t3.interaction.prepared.name);
        }(t2) : { x: 0, y: 0 };
        if ("startCoords" === l2.offset)
          e2 = { x: n2.coords.start.page.x, y: n2.coords.start.page.y };
        else {
          var c2 = (0, k.resolveRectLike)(l2.offset, r2, o2, [n2]);
          (e2 = (0, k.rectToXY)(c2) || { x: 0, y: 0 }).x += u2.x, e2.y += u2.y;
        }
        var f2 = l2.relativePoints;
        a2.offsets = i2 && f2 && f2.length ? f2.map(function(t3, n3) {
          return { index: n3, relativePoint: t3, x: s2.left - i2.width * t3.x + e2.x, y: s2.top - i2.height * t3.y + e2.y };
        }) : [{ index: 0, relativePoint: null, x: e2.x, y: e2.y }];
      }, set: function(t2) {
        var e2 = t2.interaction, n2 = t2.coords, r2 = t2.state, o2 = r2.options, a2 = r2.offsets, s2 = (0, A.default)(e2.interactable, e2.element, e2.prepared.name), l2 = (0, M.default)({}, n2), u2 = [];
        o2.offsetWithOrigin || (l2.x -= s2.x, l2.y -= s2.y);
        for (var c2 = 0; c2 < a2.length; c2++)
          for (var f2 = a2[c2], d2 = l2.x - f2.x, p2 = l2.y - f2.y, v2 = 0, h2 = o2.targets.length; v2 < h2; v2++) {
            var g2, y2 = o2.targets[v2];
            (g2 = i.default.func(y2) ? y2(d2, p2, e2._proxy, f2, v2) : y2) && u2.push({ x: (i.default.number(g2.x) ? g2.x : d2) + f2.x, y: (i.default.number(g2.y) ? g2.y : p2) + f2.y, range: i.default.number(g2.range) ? g2.range : o2.range, source: y2, index: v2, offset: f2 });
          }
        for (var m2 = { target: null, inRange: false, distance: 0, range: 0, delta: { x: 0, y: 0 } }, b2 = 0; b2 < u2.length; b2++) {
          var x2 = u2[b2], w2 = x2.range, _2 = x2.x - l2.x, P2 = x2.y - l2.y, O2 = (0, R.default)(_2, P2), E2 = O2 <= w2;
          w2 === 1 / 0 && m2.inRange && m2.range !== 1 / 0 && (E2 = false), m2.target && !(E2 ? m2.inRange && w2 !== 1 / 0 ? O2 / w2 < m2.distance / m2.range : w2 === 1 / 0 && m2.range !== 1 / 0 || O2 < m2.distance : !m2.inRange && O2 < m2.distance) || (m2.target = x2, m2.distance = O2, m2.range = w2, m2.inRange = E2, m2.delta.x = _2, m2.delta.y = P2);
        }
        return m2.inRange && (n2.x = m2.target.x, n2.y = m2.target.y), r2.closest = m2, m2;
      }, defaults: { range: 1 / 0, targets: null, offset: null, offsetWithOrigin: true, origin: null, relativePoints: null, endOnly: false, enabled: false } };
      co.snap = fo;
      var po = (0, Se.makeModifier)(fo, "snap");
      co.default = po;
      var vo = {};
      function ho(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var n2 = 0, r2 = Array(e2); n2 < e2; n2++)
          r2[n2] = t2[n2];
        return r2;
      }
      Object.defineProperty(vo, "__esModule", { value: true }), vo.snapSize = vo.default = void 0;
      var go = { start: function(t2) {
        var e2 = t2.state, n2 = t2.edges, r2 = e2.options;
        if (!n2)
          return null;
        t2.state = { options: { targets: null, relativePoints: [{ x: n2.left ? 0 : 1, y: n2.top ? 0 : 1 }], offset: r2.offset || "self", origin: { x: 0, y: 0 }, range: r2.range } }, e2.targetFields = e2.targetFields || [["width", "height"], ["x", "y"]], co.snap.start(t2), e2.offsets = t2.state.offsets, t2.state = e2;
      }, set: function(t2) {
        var e2, n2, r2 = t2.interaction, o2 = t2.state, a2 = t2.coords, s2 = o2.options, l2 = o2.offsets, u2 = { x: a2.x - l2[0].x, y: a2.y - l2[0].y };
        o2.options = (0, M.default)({}, s2), o2.options.targets = [];
        for (var c2 = 0; c2 < (s2.targets || []).length; c2++) {
          var f2 = (s2.targets || [])[c2], d2 = void 0;
          if (d2 = i.default.func(f2) ? f2(u2.x, u2.y, r2) : f2) {
            for (var p2 = 0; p2 < o2.targetFields.length; p2++) {
              var v2 = (e2 = o2.targetFields[p2], n2 = 2, function(t3) {
                if (Array.isArray(t3))
                  return t3;
              }(e2) || function(t3, e3) {
                var n3 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
                if (null != n3) {
                  var r3, o3, i2 = [], a3 = true, s3 = false;
                  try {
                    for (n3 = n3.call(t3); !(a3 = (r3 = n3.next()).done) && (i2.push(r3.value), !e3 || i2.length !== e3); a3 = true)
                      ;
                  } catch (t4) {
                    s3 = true, o3 = t4;
                  } finally {
                    try {
                      a3 || null == n3.return || n3.return();
                    } finally {
                      if (s3)
                        throw o3;
                    }
                  }
                  return i2;
                }
              }(e2, n2) || function(t3, e3) {
                if (t3) {
                  if ("string" == typeof t3)
                    return ho(t3, e3);
                  var n3 = Object.prototype.toString.call(t3).slice(8, -1);
                  return "Object" === n3 && t3.constructor && (n3 = t3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(t3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? ho(t3, e3) : void 0;
                }
              }(e2, n2) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }()), h2 = v2[0], g2 = v2[1];
              if (h2 in d2 || g2 in d2) {
                d2.x = d2[h2], d2.y = d2[g2];
                break;
              }
            }
            o2.options.targets.push(d2);
          }
        }
        var y2 = co.snap.set(t2);
        return o2.options = s2, y2;
      }, defaults: { range: 1 / 0, targets: null, offset: null, endOnly: false, enabled: false } };
      vo.snapSize = go;
      var yo = (0, Se.makeModifier)(go, "snapSize");
      vo.default = yo;
      var mo = {};
      Object.defineProperty(mo, "__esModule", { value: true }), mo.snapEdges = mo.default = void 0;
      var bo = { start: function(t2) {
        var e2 = t2.edges;
        return e2 ? (t2.state.targetFields = t2.state.targetFields || [[e2.left ? "left" : "right", e2.top ? "top" : "bottom"]], vo.snapSize.start(t2)) : null;
      }, set: vo.snapSize.set, defaults: (0, M.default)((0, ye.default)(vo.snapSize.defaults), { targets: null, range: null, offset: { x: 0, y: 0 } }) };
      mo.snapEdges = bo;
      var xo = (0, Se.makeModifier)(bo, "snapEdges");
      mo.default = xo;
      var wo = {};
      Object.defineProperty(wo, "__esModule", { value: true }), Object.defineProperty(wo, "default", { enumerable: true, get: function() {
        return Yr.default;
      } });
      var _o = {};
      Object.defineProperty(_o, "__esModule", { value: true }), Object.defineProperty(_o, "default", { enumerable: true, get: function() {
        return Yr.default;
      } });
      var Po = {};
      Object.defineProperty(Po, "__esModule", { value: true }), Po.default = void 0;
      var Oo = { aspectRatio: Dr.default, restrictEdges: $r.default, restrict: Vr.default, restrictRect: to2.default, restrictSize: oo.default, snapEdges: mo.default, snap: co.default, snapSize: vo.default, spring: wo.default, avoid: Ur.default, transform: _o.default, rubberband: uo.default };
      Po.default = Oo;
      var Eo = {};
      Object.defineProperty(Eo, "__esModule", { value: true }), Eo.default = void 0;
      var So = { id: "modifiers", install: function(t2) {
        var e2 = t2.interactStatic;
        for (var n2 in t2.usePlugin(Se.default), t2.usePlugin(Mr.default), e2.modifiers = Po.default, Po.default) {
          var r2 = Po.default[n2], o2 = r2._defaults, i2 = r2._methods;
          o2._methods = i2, t2.defaults.perAction[n2] = o2;
        }
      } }, To = So;
      Eo.default = To;
      var jo = {};
      function Mo(t2) {
        return Mo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, Mo(t2);
      }
      function ko(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, r2.key, r2);
        }
      }
      function Io(t2, e2) {
        return Io = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, Io(t2, e2);
      }
      function Do(t2, e2) {
        if (e2 && ("object" === Mo(e2) || "function" == typeof e2))
          return e2;
        if (void 0 !== e2)
          throw new TypeError("Derived constructors may only return object or undefined");
        return Ao(t2);
      }
      function Ao(t2) {
        if (void 0 === t2)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      function zo(t2) {
        return zo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, zo(t2);
      }
      Object.defineProperty(jo, "__esModule", { value: true }), jo.default = jo.PointerEvent = void 0;
      var Co = function(t2) {
        !function(t3, e3) {
          if ("function" != typeof e3 && null !== e3)
            throw new TypeError("Super expression must either be null or a function");
          t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), Object.defineProperty(t3, "prototype", { writable: false }), e3 && Io(t3, e3);
        }(a2, t2);
        var e2, n2, r2, o2, i2 = (r2 = a2, o2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }(), function() {
          var t3, e3 = zo(r2);
          if (o2) {
            var n3 = zo(this).constructor;
            t3 = Reflect.construct(e3, arguments, n3);
          } else
            t3 = e3.apply(this, arguments);
          return Do(this, t3);
        });
        function a2(t3, e3, n3, r3, o3, s2) {
          var l2;
          if (function(t4, e4) {
            if (!(t4 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, a2), l2 = i2.call(this, o3), X.pointerExtend(Ao(l2), n3), n3 !== e3 && X.pointerExtend(Ao(l2), e3), l2.timeStamp = s2, l2.originalEvent = n3, l2.type = t3, l2.pointerId = X.getPointerId(e3), l2.pointerType = X.getPointerType(e3), l2.target = r3, l2.currentTarget = null, "tap" === t3) {
            var u2 = o3.getPointerIndex(e3);
            l2.dt = l2.timeStamp - o3.pointers[u2].downTime;
            var c2 = l2.timeStamp - o3.tapTime;
            l2.double = !!o3.prevTap && "doubletap" !== o3.prevTap.type && o3.prevTap.target === l2.target && c2 < 500;
          } else
            "doubletap" === t3 && (l2.dt = e3.timeStamp - o3.tapTime, l2.double = true);
          return l2;
        }
        return e2 = a2, (n2 = [{ key: "_subtractOrigin", value: function(t3) {
          var e3 = t3.x, n3 = t3.y;
          return this.pageX -= e3, this.pageY -= n3, this.clientX -= e3, this.clientY -= n3, this;
        } }, { key: "_addOrigin", value: function(t3) {
          var e3 = t3.x, n3 = t3.y;
          return this.pageX += e3, this.pageY += n3, this.clientX += e3, this.clientY += n3, this;
        } }, { key: "preventDefault", value: function() {
          this.originalEvent.preventDefault();
        } }]) && ko(e2.prototype, n2), Object.defineProperty(e2, "prototype", { writable: false }), a2;
      }(N.BaseEvent);
      jo.PointerEvent = jo.default = Co;
      var Ro = {};
      Object.defineProperty(Ro, "__esModule", { value: true }), Ro.default = void 0;
      var Fo = { id: "pointer-events/base", before: ["inertia", "modifiers", "auto-start", "actions"], install: function(t2) {
        t2.pointerEvents = Fo, t2.defaults.actions.pointerEvents = Fo.defaults, (0, M.default)(t2.actions.phaselessTypes, Fo.types);
      }, listeners: { "interactions:new": function(t2) {
        var e2 = t2.interaction;
        e2.prevTap = null, e2.tapTime = 0;
      }, "interactions:update-pointer": function(t2) {
        var e2 = t2.down, n2 = t2.pointerInfo;
        !e2 && n2.hold || (n2.hold = { duration: 1 / 0, timeout: null });
      }, "interactions:move": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, o2 = t2.event, i2 = t2.eventTarget;
        t2.duplicate || n2.pointerIsDown && !n2.pointerWasMoved || (n2.pointerIsDown && Yo(t2), Xo({ interaction: n2, pointer: r2, event: o2, eventTarget: i2, type: "move" }, e2));
      }, "interactions:down": function(t2, e2) {
        !function(t3, e3) {
          for (var n2 = t3.interaction, r2 = t3.pointer, o2 = t3.event, i2 = t3.eventTarget, a2 = t3.pointerIndex, s2 = n2.pointers[a2].hold, l2 = _.getPath(i2), u2 = { interaction: n2, pointer: r2, event: o2, eventTarget: i2, type: "hold", targets: [], path: l2, node: null }, c2 = 0; c2 < l2.length; c2++) {
            var f2 = l2[c2];
            u2.node = f2, e3.fire("pointerEvents:collect-targets", u2);
          }
          if (u2.targets.length) {
            for (var d2 = 1 / 0, p2 = 0; p2 < u2.targets.length; p2++) {
              var v2 = u2.targets[p2].eventable.options.holdDuration;
              v2 < d2 && (d2 = v2);
            }
            s2.duration = d2, s2.timeout = setTimeout(function() {
              Xo({ interaction: n2, eventTarget: i2, pointer: r2, event: o2, type: "hold" }, e3);
            }, d2);
          }
        }(t2, e2), Xo(t2, e2);
      }, "interactions:up": function(t2, e2) {
        Yo(t2), Xo(t2, e2), function(t3, e3) {
          var n2 = t3.interaction, r2 = t3.pointer, o2 = t3.event, i2 = t3.eventTarget;
          n2.pointerWasMoved || Xo({ interaction: n2, eventTarget: i2, pointer: r2, event: o2, type: "tap" }, e3);
        }(t2, e2);
      }, "interactions:cancel": function(t2, e2) {
        Yo(t2), Xo(t2, e2);
      } }, PointerEvent: jo.PointerEvent, fire: Xo, collectEventTargets: Bo, defaults: { holdDuration: 600, ignoreFrom: null, allowFrom: null, origin: { x: 0, y: 0 } }, types: { down: true, move: true, up: true, cancel: true, tap: true, doubletap: true, hold: true } };
      function Xo(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, o2 = t2.event, i2 = t2.eventTarget, a2 = t2.type, s2 = t2.targets, l2 = void 0 === s2 ? Bo(t2, e2) : s2, u2 = new jo.PointerEvent(a2, r2, o2, i2, n2, e2.now());
        e2.fire("pointerEvents:new", { pointerEvent: u2 });
        for (var c2 = { interaction: n2, pointer: r2, event: o2, eventTarget: i2, targets: l2, type: a2, pointerEvent: u2 }, f2 = 0; f2 < l2.length; f2++) {
          var d2 = l2[f2];
          for (var p2 in d2.props || {})
            u2[p2] = d2.props[p2];
          var v2 = (0, A.default)(d2.eventable, d2.node);
          if (u2._subtractOrigin(v2), u2.eventable = d2.eventable, u2.currentTarget = d2.node, d2.eventable.fire(u2), u2._addOrigin(v2), u2.immediatePropagationStopped || u2.propagationStopped && f2 + 1 < l2.length && l2[f2 + 1].node !== u2.currentTarget)
            break;
        }
        if (e2.fire("pointerEvents:fired", c2), "tap" === a2) {
          var h2 = u2.double ? Xo({ interaction: n2, pointer: r2, event: o2, eventTarget: i2, type: "doubletap" }, e2) : u2;
          n2.prevTap = h2, n2.tapTime = h2.timeStamp;
        }
        return u2;
      }
      function Bo(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, o2 = t2.event, i2 = t2.eventTarget, a2 = t2.type, s2 = n2.getPointerIndex(r2), l2 = n2.pointers[s2];
        if ("tap" === a2 && (n2.pointerWasMoved || !l2 || l2.downTarget !== i2))
          return [];
        for (var u2 = _.getPath(i2), c2 = { interaction: n2, pointer: r2, event: o2, eventTarget: i2, type: a2, path: u2, targets: [], node: null }, f2 = 0; f2 < u2.length; f2++) {
          var d2 = u2[f2];
          c2.node = d2, e2.fire("pointerEvents:collect-targets", c2);
        }
        return "hold" === a2 && (c2.targets = c2.targets.filter(function(t3) {
          var e3;
          return t3.eventable.options.holdDuration === (null == (e3 = n2.pointers[s2]) ? void 0 : e3.hold.duration);
        })), c2.targets;
      }
      function Yo(t2) {
        var e2 = t2.interaction, n2 = t2.pointerIndex, r2 = e2.pointers[n2].hold;
        r2 && r2.timeout && (clearTimeout(r2.timeout), r2.timeout = null);
      }
      var Wo = Fo;
      Ro.default = Wo;
      var Lo = {};
      function Uo(t2) {
        var e2 = t2.interaction;
        e2.holdIntervalHandle && (clearInterval(e2.holdIntervalHandle), e2.holdIntervalHandle = null);
      }
      Object.defineProperty(Lo, "__esModule", { value: true }), Lo.default = void 0;
      var Vo = { id: "pointer-events/holdRepeat", install: function(t2) {
        t2.usePlugin(Ro.default);
        var e2 = t2.pointerEvents;
        e2.defaults.holdRepeatInterval = 0, e2.types.holdrepeat = t2.actions.phaselessTypes.holdrepeat = true;
      }, listeners: ["move", "up", "cancel", "endall"].reduce(function(t2, e2) {
        return t2["pointerEvents:".concat(e2)] = Uo, t2;
      }, { "pointerEvents:new": function(t2) {
        var e2 = t2.pointerEvent;
        "hold" === e2.type && (e2.count = (e2.count || 0) + 1);
      }, "pointerEvents:fired": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointerEvent, o2 = t2.eventTarget, i2 = t2.targets;
        if ("hold" === r2.type && i2.length) {
          var a2 = i2[0].eventable.options.holdRepeatInterval;
          a2 <= 0 || (n2.holdIntervalHandle = setTimeout(function() {
            e2.pointerEvents.fire({ interaction: n2, eventTarget: o2, type: "hold", pointer: r2, event: r2 }, e2);
          }, a2));
        }
      } }) }, No = Vo;
      Lo.default = No;
      var qo = {};
      function Go(t2) {
        return (0, M.default)(this.events.options, t2), this;
      }
      Object.defineProperty(qo, "__esModule", { value: true }), qo.default = void 0;
      var $o = { id: "pointer-events/interactableTargets", install: function(t2) {
        var e2 = t2.Interactable;
        e2.prototype.pointerEvents = Go;
        var n2 = e2.prototype._backCompatOption;
        e2.prototype._backCompatOption = function(t3, e3) {
          var r2 = n2.call(this, t3, e3);
          return r2 === this && (this.events.options[t3] = e3), r2;
        };
      }, listeners: { "pointerEvents:collect-targets": function(t2, e2) {
        var n2 = t2.targets, r2 = t2.node, o2 = t2.type, i2 = t2.eventTarget;
        e2.interactables.forEachMatch(r2, function(t3) {
          var e3 = t3.events, a2 = e3.options;
          e3.types[o2] && e3.types[o2].length && t3.testIgnoreAllow(a2, r2, i2) && n2.push({ node: r2, eventable: e3, props: { interactable: t3 } });
        });
      }, "interactable:new": function(t2) {
        var e2 = t2.interactable;
        e2.events.getRect = function(t3) {
          return e2.getRect(t3);
        };
      }, "interactable:set": function(t2, e2) {
        var n2 = t2.interactable, r2 = t2.options;
        (0, M.default)(n2.events.options, e2.pointerEvents.defaults), (0, M.default)(n2.events.options, r2.pointerEvents || {});
      } } }, Ho = $o;
      qo.default = Ho;
      var Ko = {};
      Object.defineProperty(Ko, "__esModule", { value: true }), Ko.default = void 0;
      var Zo = { id: "pointer-events", install: function(t2) {
        t2.usePlugin(Ro), t2.usePlugin(Lo.default), t2.usePlugin(qo.default);
      } }, Jo = Zo;
      Ko.default = Jo;
      var Qo = {};
      function ti(t2) {
        var e2 = t2.Interactable;
        t2.actions.phases.reflow = true, e2.prototype.reflow = function(e3) {
          return function(t3, e4, n2) {
            for (var r2 = i.default.string(t3.target) ? H.from(t3._context.querySelectorAll(t3.target)) : [t3.target], o2 = n2.window.Promise, a2 = o2 ? [] : null, s2 = function() {
              var i2 = r2[l2], s3 = t3.getRect(i2);
              if (!s3)
                return "break";
              var u2 = H.find(n2.interactions.list, function(n3) {
                return n3.interacting() && n3.interactable === t3 && n3.element === i2 && n3.prepared.name === e4.name;
              }), c2 = void 0;
              if (u2)
                u2.move(), a2 && (c2 = u2._reflowPromise || new o2(function(t4) {
                  u2._reflowResolve = t4;
                }));
              else {
                var f2 = (0, k.tlbrToXywh)(s3), d2 = { page: { x: f2.x, y: f2.y }, client: { x: f2.x, y: f2.y }, timeStamp: n2.now() }, p2 = X.coordsToEvent(d2);
                c2 = function(t4, e5, n3, r3, o3) {
                  var i3 = t4.interactions.new({ pointerType: "reflow" }), a3 = { interaction: i3, event: o3, pointer: o3, eventTarget: n3, phase: "reflow" };
                  i3.interactable = e5, i3.element = n3, i3.prevEvent = o3, i3.updatePointer(o3, o3, n3, true), X.setZeroCoords(i3.coords.delta), (0, Xt.copyAction)(i3.prepared, r3), i3._doPhase(a3);
                  var s4 = t4.window.Promise, l3 = s4 ? new s4(function(t5) {
                    i3._reflowResolve = t5;
                  }) : void 0;
                  return i3._reflowPromise = l3, i3.start(r3, e5, n3), i3._interacting ? (i3.move(a3), i3.end(o3)) : (i3.stop(), i3._reflowResolve()), i3.removePointer(o3, o3), l3;
                }(n2, t3, i2, e4, p2);
              }
              a2 && a2.push(c2);
            }, l2 = 0; l2 < r2.length && "break" !== s2(); l2++)
              ;
            return a2 && o2.all(a2).then(function() {
              return t3;
            });
          }(this, e3, t2);
        };
      }
      Object.defineProperty(Qo, "__esModule", { value: true }), Qo.default = void 0, Qo.install = ti;
      var ei = { id: "reflow", install: ti, listeners: { "interactions:stop": function(t2, e2) {
        var n2 = t2.interaction;
        "reflow" === n2.pointerType && (n2._reflowResolve && n2._reflowResolve(), H.remove(e2.interactions.list, n2));
      } } }, ni = ei;
      Qo.default = ni;
      var ri = { exports: {} };
      function oi(t2) {
        return oi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, oi(t2);
      }
      Object.defineProperty(ri.exports, "__esModule", { value: true }), ri.exports.default = void 0, br.default.use(le.default), br.default.use(Qe.default), br.default.use(Ko.default), br.default.use(ln.default), br.default.use(Eo.default), br.default.use(ae.default), br.default.use(Et.default), br.default.use(Dt.default), br.default.use(Qo.default);
      var ii = br.default;
      if (ri.exports.default = ii, "object" === oi(ri) && ri)
        try {
          ri.exports = br.default;
        } catch (t2) {
        }
      br.default.default = br.default, Et.default, Dt.default, ae.default, le.default, he.default, ln.default, br.default, Eo.default, Qe.default, Ko.default, Qo.default, ri = ri.exports;
      var ai = { exports: {} };
      function si(t2) {
        return si = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, si(t2);
      }
      Object.defineProperty(ai.exports, "__esModule", { value: true }), ai.exports.default = void 0;
      var li = ri.default;
      if (ai.exports.default = li, "object" === si(ai) && ai)
        try {
          ai.exports = ri.default;
        } catch (t2) {
        }
      return ri.default.default = ri.default, ai.exports;
    });
  }
});

// node_modules/moment/dist/moment.js
var moment_exports = {};
__export(moment_exports, {
  default: () => moment_default
});
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(callback) {
  hookCallback = callback;
}
function isArray(input) {
  return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
}
function isObject(input) {
  return input != null && Object.prototype.toString.call(input) === "[object Object]";
}
function hasOwnProp(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
}
function isObjectEmpty(obj) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(obj).length === 0;
  } else {
    var k;
    for (k in obj) {
      if (hasOwnProp(obj, k)) {
        return false;
      }
    }
    return true;
  }
}
function isUndefined(input) {
  return input === void 0;
}
function isNumber(input) {
  return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
}
function isDate(input) {
  return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
}
function map(arr, fn) {
  var res = [], i, arrLen = arr.length;
  for (i = 0; i < arrLen; ++i) {
    res.push(fn(arr[i], i));
  }
  return res;
}
function extend(a, b) {
  for (var i in b) {
    if (hasOwnProp(b, i)) {
      a[i] = b[i];
    }
  }
  if (hasOwnProp(b, "toString")) {
    a.toString = b.toString;
  }
  if (hasOwnProp(b, "valueOf")) {
    a.valueOf = b.valueOf;
  }
  return a;
}
function createUTC(input, format2, locale2, strict) {
  return createLocalOrUTC(input, format2, locale2, strict, true).utc();
}
function defaultParsingFlags() {
  return {
    empty: false,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: false,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: false,
    userInvalidated: false,
    iso: false,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: false,
    weekdayMismatch: false
  };
}
function getParsingFlags(m) {
  if (m._pf == null) {
    m._pf = defaultParsingFlags();
  }
  return m._pf;
}
function isValid(m) {
  if (m._isValid == null) {
    var flags = getParsingFlags(m), parsedParts = some.call(flags.parsedDateParts, function(i) {
      return i != null;
    }), isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
    if (m._strict) {
      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
    }
    if (Object.isFrozen == null || !Object.isFrozen(m)) {
      m._isValid = isNowValid;
    } else {
      return isNowValid;
    }
  }
  return m._isValid;
}
function createInvalid(flags) {
  var m = createUTC(NaN);
  if (flags != null) {
    extend(getParsingFlags(m), flags);
  } else {
    getParsingFlags(m).userInvalidated = true;
  }
  return m;
}
function copyConfig(to2, from2) {
  var i, prop, val, momentPropertiesLen = momentProperties.length;
  if (!isUndefined(from2._isAMomentObject)) {
    to2._isAMomentObject = from2._isAMomentObject;
  }
  if (!isUndefined(from2._i)) {
    to2._i = from2._i;
  }
  if (!isUndefined(from2._f)) {
    to2._f = from2._f;
  }
  if (!isUndefined(from2._l)) {
    to2._l = from2._l;
  }
  if (!isUndefined(from2._strict)) {
    to2._strict = from2._strict;
  }
  if (!isUndefined(from2._tzm)) {
    to2._tzm = from2._tzm;
  }
  if (!isUndefined(from2._isUTC)) {
    to2._isUTC = from2._isUTC;
  }
  if (!isUndefined(from2._offset)) {
    to2._offset = from2._offset;
  }
  if (!isUndefined(from2._pf)) {
    to2._pf = getParsingFlags(from2);
  }
  if (!isUndefined(from2._locale)) {
    to2._locale = from2._locale;
  }
  if (momentPropertiesLen > 0) {
    for (i = 0; i < momentPropertiesLen; i++) {
      prop = momentProperties[i];
      val = from2[prop];
      if (!isUndefined(val)) {
        to2[prop] = val;
      }
    }
  }
  return to2;
}
function Moment(config) {
  copyConfig(this, config);
  this._d = new Date(config._d != null ? config._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = /* @__PURE__ */ new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
}
function isMoment(obj) {
  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
}
function warn(msg) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + msg);
  }
}
function deprecate(msg, fn) {
  var firstTime = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, msg);
    }
    if (firstTime) {
      var args = [], arg, i, key, argLen = arguments.length;
      for (i = 0; i < argLen; i++) {
        arg = "";
        if (typeof arguments[i] === "object") {
          arg += "\n[" + i + "] ";
          for (key in arguments[0]) {
            if (hasOwnProp(arguments[0], key)) {
              arg += key + ": " + arguments[0][key] + ", ";
            }
          }
          arg = arg.slice(0, -2);
        } else {
          arg = arguments[i];
        }
        args.push(arg);
      }
      warn(
        msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack
      );
      firstTime = false;
    }
    return fn.apply(this, arguments);
  }, fn);
}
function deprecateSimple(name, msg) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(name, msg);
  }
  if (!deprecations[name]) {
    warn(msg);
    deprecations[name] = true;
  }
}
function isFunction(input) {
  return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
}
function set(config) {
  var prop, i;
  for (i in config) {
    if (hasOwnProp(config, i)) {
      prop = config[i];
      if (isFunction(prop)) {
        this[i] = prop;
      } else {
        this["_" + i] = prop;
      }
    }
  }
  this._config = config;
  this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function mergeConfigs(parentConfig, childConfig) {
  var res = extend({}, parentConfig), prop;
  for (prop in childConfig) {
    if (hasOwnProp(childConfig, prop)) {
      if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
        res[prop] = {};
        extend(res[prop], parentConfig[prop]);
        extend(res[prop], childConfig[prop]);
      } else if (childConfig[prop] != null) {
        res[prop] = childConfig[prop];
      } else {
        delete res[prop];
      }
    }
  }
  for (prop in parentConfig) {
    if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
      res[prop] = extend({}, res[prop]);
    }
  }
  return res;
}
function Locale(config) {
  if (config != null) {
    this.set(config);
  }
}
function calendar(key, mom, now2) {
  var output = this._calendar[key] || this._calendar["sameElse"];
  return isFunction(output) ? output.call(mom, now2) : output;
}
function zeroFill(number, targetLength, forceSign) {
  var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign2 = number >= 0;
  return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}
function addFormatToken(token2, padded, ordinal2, callback) {
  var func = callback;
  if (typeof callback === "string") {
    func = function() {
      return this[callback]();
    };
  }
  if (token2) {
    formatTokenFunctions[token2] = func;
  }
  if (padded) {
    formatTokenFunctions[padded[0]] = function() {
      return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
    };
  }
  if (ordinal2) {
    formatTokenFunctions[ordinal2] = function() {
      return this.localeData().ordinal(
        func.apply(this, arguments),
        token2
      );
    };
  }
}
function removeFormattingTokens(input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|\]$/g, "");
  }
  return input.replace(/\\/g, "");
}
function makeFormatFunction(format2) {
  var array = format2.match(formattingTokens), i, length;
  for (i = 0, length = array.length; i < length; i++) {
    if (formatTokenFunctions[array[i]]) {
      array[i] = formatTokenFunctions[array[i]];
    } else {
      array[i] = removeFormattingTokens(array[i]);
    }
  }
  return function(mom) {
    var output = "", i2;
    for (i2 = 0; i2 < length; i2++) {
      output += isFunction(array[i2]) ? array[i2].call(mom, format2) : array[i2];
    }
    return output;
  };
}
function formatMoment(m, format2) {
  if (!m.isValid()) {
    return m.localeData().invalidDate();
  }
  format2 = expandFormat(format2, m.localeData());
  formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
  return formatFunctions[format2](m);
}
function expandFormat(format2, locale2) {
  var i = 5;
  function replaceLongDateFormatTokens(input) {
    return locale2.longDateFormat(input) || input;
  }
  localFormattingTokens.lastIndex = 0;
  while (i >= 0 && localFormattingTokens.test(format2)) {
    format2 = format2.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens
    );
    localFormattingTokens.lastIndex = 0;
    i -= 1;
  }
  return format2;
}
function longDateFormat(key) {
  var format2 = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
  if (format2 || !formatUpper) {
    return format2;
  }
  this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
    if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
      return tok.slice(1);
    }
    return tok;
  }).join("");
  return this._longDateFormat[key];
}
function invalidDate() {
  return this._invalidDate;
}
function ordinal(number) {
  return this._ordinal.replace("%d", number);
}
function relativeTime(number, withoutSuffix, string, isFuture) {
  var output = this._relativeTime[string];
  return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
}
function pastFuture(diff2, output) {
  var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
  return isFunction(format2) ? format2(output) : format2.replace(/%s/i, output);
}
function addUnitAlias(unit, shorthand) {
  var lowerCase = unit.toLowerCase();
  aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit;
}
function normalizeUnits(units) {
  return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
}
function normalizeObjectUnits(inputObject) {
  var normalizedInput = {}, normalizedProp, prop;
  for (prop in inputObject) {
    if (hasOwnProp(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);
      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }
  return normalizedInput;
}
function addUnitPriority(unit, priority) {
  priorities[unit] = priority;
}
function getPrioritizedUnits(unitsObj) {
  var units = [], u;
  for (u in unitsObj) {
    if (hasOwnProp(unitsObj, u)) {
      units.push({ unit: u, priority: priorities[u] });
    }
  }
  units.sort(function(a, b) {
    return a.priority - b.priority;
  });
  return units;
}
function isLeapYear(year) {
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
function absFloor(number) {
  if (number < 0) {
    return Math.ceil(number) || 0;
  } else {
    return Math.floor(number);
  }
}
function toInt(argumentForCoercion) {
  var coercedNumber = +argumentForCoercion, value = 0;
  if (coercedNumber !== 0 && isFinite(coercedNumber)) {
    value = absFloor(coercedNumber);
  }
  return value;
}
function makeGetSet(unit, keepTime) {
  return function(value) {
    if (value != null) {
      set$1(this, unit, value);
      hooks.updateOffset(this, keepTime);
      return this;
    } else {
      return get(this, unit);
    }
  };
}
function get(mom, unit) {
  return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN;
}
function set$1(mom, unit, value) {
  if (mom.isValid() && !isNaN(value)) {
    if (unit === "FullYear" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
      value = toInt(value);
      mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](
        value,
        mom.month(),
        daysInMonth(value, mom.month())
      );
    } else {
      mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value);
    }
  }
}
function stringGet(units) {
  units = normalizeUnits(units);
  if (isFunction(this[units])) {
    return this[units]();
  }
  return this;
}
function stringSet(units, value) {
  if (typeof units === "object") {
    units = normalizeObjectUnits(units);
    var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;
    for (i = 0; i < prioritizedLen; i++) {
      this[prioritized[i].unit](units[prioritized[i].unit]);
    }
  } else {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units](value);
    }
  }
  return this;
}
function addRegexToken(token2, regex, strictRegex) {
  regexes[token2] = isFunction(regex) ? regex : function(isStrict, localeData2) {
    return isStrict && strictRegex ? strictRegex : regex;
  };
}
function getParseRegexForToken(token2, config) {
  if (!hasOwnProp(regexes, token2)) {
    return new RegExp(unescapeFormat(token2));
  }
  return regexes[token2](config._strict, config._locale);
}
function unescapeFormat(s) {
  return regexEscape(
    s.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
      }
    )
  );
}
function regexEscape(s) {
  return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function addParseToken(token2, callback) {
  var i, func = callback, tokenLen;
  if (typeof token2 === "string") {
    token2 = [token2];
  }
  if (isNumber(callback)) {
    func = function(input, array) {
      array[callback] = toInt(input);
    };
  }
  tokenLen = token2.length;
  for (i = 0; i < tokenLen; i++) {
    tokens[token2[i]] = func;
  }
}
function addWeekParseToken(token2, callback) {
  addParseToken(token2, function(input, array, config, token3) {
    config._w = config._w || {};
    callback(input, config._w, config, token3);
  });
}
function addTimeToArrayFromToken(token2, input, config) {
  if (input != null && hasOwnProp(tokens, token2)) {
    tokens[token2](input, config._a, config, token2);
  }
}
function mod(n, x) {
  return (n % x + x) % x;
}
function daysInMonth(year, month) {
  if (isNaN(year) || isNaN(month)) {
    return NaN;
  }
  var modMonth = mod(month, 12);
  year += (month - modMonth) / 12;
  return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
}
function localeMonths(m, format2) {
  if (!m) {
    return isArray(this._months) ? this._months : this._months["standalone"];
  }
  return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m.month()];
}
function localeMonthsShort(m, format2) {
  if (!m) {
    return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m.month()];
}
function handleStrictParse(monthName, format2, strict) {
  var i, ii, mom, llc = monthName.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (i = 0; i < 12; ++i) {
      mom = createUTC([2e3, i]);
      this._shortMonthsParse[i] = this.monthsShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format2 === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format2 === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeMonthsParse(monthName, format2, strict) {
  var i, mom, regex;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, monthName, format2, strict);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    if (strict && !this._longMonthsParse[i]) {
      this._longMonthsParse[i] = new RegExp(
        "^" + this.months(mom, "").replace(".", "") + "$",
        "i"
      );
      this._shortMonthsParse[i] = new RegExp(
        "^" + this.monthsShort(mom, "").replace(".", "") + "$",
        "i"
      );
    }
    if (!strict && !this._monthsParse[i]) {
      regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
      this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format2 === "MMMM" && this._longMonthsParse[i].test(monthName)) {
      return i;
    } else if (strict && format2 === "MMM" && this._shortMonthsParse[i].test(monthName)) {
      return i;
    } else if (!strict && this._monthsParse[i].test(monthName)) {
      return i;
    }
  }
}
function setMonth(mom, value) {
  var dayOfMonth;
  if (!mom.isValid()) {
    return mom;
  }
  if (typeof value === "string") {
    if (/^\d+$/.test(value)) {
      value = toInt(value);
    } else {
      value = mom.localeData().monthsParse(value);
      if (!isNumber(value)) {
        return mom;
      }
    }
  }
  dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
  mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value, dayOfMonth);
  return mom;
}
function getSetMonth(value) {
  if (value != null) {
    setMonth(this, value);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get(this, "Month");
  }
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
}
function monthsRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
  }
}
function computeMonthsParse() {
  function cmpLenRev(a, b) {
    return b.length - a.length;
  }
  var shortPieces = [], longPieces = [], mixedPieces = [], i, mom;
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    shortPieces.push(this.monthsShort(mom, ""));
    longPieces.push(this.months(mom, ""));
    mixedPieces.push(this.months(mom, ""));
    mixedPieces.push(this.monthsShort(mom, ""));
  }
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  for (i = 0; i < 12; i++) {
    shortPieces[i] = regexEscape(shortPieces[i]);
    longPieces[i] = regexEscape(longPieces[i]);
  }
  for (i = 0; i < 24; i++) {
    mixedPieces[i] = regexEscape(mixedPieces[i]);
  }
  this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._monthsShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function createDate(y, m, d, h, M, s, ms) {
  var date;
  if (y < 100 && y >= 0) {
    date = new Date(y + 400, m, d, h, M, s, ms);
    if (isFinite(date.getFullYear())) {
      date.setFullYear(y);
    }
  } else {
    date = new Date(y, m, d, h, M, s, ms);
  }
  return date;
}
function createUTCDate(y) {
  var date, args;
  if (y < 100 && y >= 0) {
    args = Array.prototype.slice.call(arguments);
    args[0] = y + 400;
    date = new Date(Date.UTC.apply(null, args));
    if (isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y);
    }
  } else {
    date = new Date(Date.UTC.apply(null, arguments));
  }
  return date;
}
function firstWeekOffset(year, dow, doy) {
  var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
}
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
  var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
  if (dayOfYear <= 0) {
    resYear = year - 1;
    resDayOfYear = daysInYear(resYear) + dayOfYear;
  } else if (dayOfYear > daysInYear(year)) {
    resYear = year + 1;
    resDayOfYear = dayOfYear - daysInYear(year);
  } else {
    resYear = year;
    resDayOfYear = dayOfYear;
  }
  return {
    year: resYear,
    dayOfYear: resDayOfYear
  };
}
function weekOfYear(mom, dow, doy) {
  var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
  if (week < 1) {
    resYear = mom.year() - 1;
    resWeek = week + weeksInYear(resYear, dow, doy);
  } else if (week > weeksInYear(mom.year(), dow, doy)) {
    resWeek = week - weeksInYear(mom.year(), dow, doy);
    resYear = mom.year() + 1;
  } else {
    resYear = mom.year();
    resWeek = week;
  }
  return {
    week: resWeek,
    year: resYear
  };
}
function weeksInYear(year, dow, doy) {
  var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}
function localeWeek(mom) {
  return weekOfYear(mom, this._week.dow, this._week.doy).week;
}
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(input) {
  var week = this.localeData().week(this);
  return input == null ? week : this.add((input - week) * 7, "d");
}
function getSetISOWeek(input) {
  var week = weekOfYear(this, 1, 4).week;
  return input == null ? week : this.add((input - week) * 7, "d");
}
function parseWeekday(input, locale2) {
  if (typeof input !== "string") {
    return input;
  }
  if (!isNaN(input)) {
    return parseInt(input, 10);
  }
  input = locale2.weekdaysParse(input);
  if (typeof input === "number") {
    return input;
  }
  return null;
}
function parseIsoWeekday(input, locale2) {
  if (typeof input === "string") {
    return locale2.weekdaysParse(input) % 7 || 7;
  }
  return isNaN(input) ? null : input;
}
function shiftWeekdays(ws, n) {
  return ws.slice(n, 7).concat(ws.slice(0, n));
}
function localeWeekdays(m, format2) {
  var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format2) ? "format" : "standalone"];
  return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
}
function localeWeekdaysShort(m) {
  return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(m) {
  return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}
function handleStrictParse$1(weekdayName, format2, strict) {
  var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (i = 0; i < 7; ++i) {
      mom = createUTC([2e3, 1]).day(i);
      this._minWeekdaysParse[i] = this.weekdaysMin(
        mom,
        ""
      ).toLocaleLowerCase();
      this._shortWeekdaysParse[i] = this.weekdaysShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format2 === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format2 === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format2 === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format2 === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeWeekdaysParse(weekdayName, format2, strict) {
  var i, mom, regex;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, weekdayName, format2, strict);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    if (strict && !this._fullWeekdaysParse[i]) {
      this._fullWeekdaysParse[i] = new RegExp(
        "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._shortWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._minWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
    }
    if (!this._weekdaysParse[i]) {
      regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
      this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format2 === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format2 === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
      return i;
    }
  }
}
function getSetDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
  if (input != null) {
    input = parseWeekday(input, this.localeData());
    return this.add(input - day, "d");
  } else {
    return day;
  }
}
function getSetLocaleDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return input == null ? weekday : this.add(input - weekday, "d");
}
function getSetISODayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    var weekday = parseIsoWeekday(input, this.localeData());
    return this.day(this.day() % 7 ? weekday : weekday - 7);
  } else {
    return this.day() || 7;
  }
}
function weekdaysRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
}
function weekdaysShortRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
}
function weekdaysMinRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
}
function computeWeekdaysParse() {
  function cmpLenRev(a, b) {
    return b.length - a.length;
  }
  var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    minp = regexEscape(this.weekdaysMin(mom, ""));
    shortp = regexEscape(this.weekdaysShort(mom, ""));
    longp = regexEscape(this.weekdays(mom, ""));
    minPieces.push(minp);
    shortPieces.push(shortp);
    longPieces.push(longp);
    mixedPieces.push(minp);
    mixedPieces.push(shortp);
    mixedPieces.push(longp);
  }
  minPieces.sort(cmpLenRev);
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._weekdaysShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
  this._weekdaysMinStrictRegex = new RegExp(
    "^(" + minPieces.join("|") + ")",
    "i"
  );
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
function meridiem(token2, lowercase) {
  addFormatToken(token2, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase
    );
  });
}
function matchMeridiem(isStrict, locale2) {
  return locale2._meridiemParse;
}
function localeIsPM(input) {
  return (input + "").toLowerCase().charAt(0) === "p";
}
function localeMeridiem(hours2, minutes2, isLower) {
  if (hours2 > 11) {
    return isLower ? "pm" : "PM";
  } else {
    return isLower ? "am" : "AM";
  }
}
function commonPrefix(arr1, arr2) {
  var i, minl = Math.min(arr1.length, arr2.length);
  for (i = 0; i < minl; i += 1) {
    if (arr1[i] !== arr2[i]) {
      return i;
    }
  }
  return minl;
}
function normalizeLocale(key) {
  return key ? key.toLowerCase().replace("_", "-") : key;
}
function chooseLocale(names) {
  var i = 0, j, next, locale2, split;
  while (i < names.length) {
    split = normalizeLocale(names[i]).split("-");
    j = split.length;
    next = normalizeLocale(names[i + 1]);
    next = next ? next.split("-") : null;
    while (j > 0) {
      locale2 = loadLocale(split.slice(0, j).join("-"));
      if (locale2) {
        return locale2;
      }
      if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {
        break;
      }
      j--;
    }
    i++;
  }
  return globalLocale;
}
function isLocaleNameSane(name) {
  return name.match("^[^/\\\\]*$") != null;
}
function loadLocale(name) {
  var oldLocale = null, aliasedRequire;
  if (locales[name] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(name)) {
    try {
      oldLocale = globalLocale._abbr;
      aliasedRequire = __require;
      aliasedRequire("./locale/" + name);
      getSetGlobalLocale(oldLocale);
    } catch (e) {
      locales[name] = null;
    }
  }
  return locales[name];
}
function getSetGlobalLocale(key, values) {
  var data;
  if (key) {
    if (isUndefined(values)) {
      data = getLocale(key);
    } else {
      data = defineLocale(key, values);
    }
    if (data) {
      globalLocale = data;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn(
          "Locale " + key + " not found. Did you forget to load it?"
        );
      }
    }
  }
  return globalLocale._abbr;
}
function defineLocale(name, config) {
  if (config !== null) {
    var locale2, parentConfig = baseConfig;
    config.abbr = name;
    if (locales[name] != null) {
      deprecateSimple(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      );
      parentConfig = locales[name]._config;
    } else if (config.parentLocale != null) {
      if (locales[config.parentLocale] != null) {
        parentConfig = locales[config.parentLocale]._config;
      } else {
        locale2 = loadLocale(config.parentLocale);
        if (locale2 != null) {
          parentConfig = locale2._config;
        } else {
          if (!localeFamilies[config.parentLocale]) {
            localeFamilies[config.parentLocale] = [];
          }
          localeFamilies[config.parentLocale].push({
            name,
            config
          });
          return null;
        }
      }
    }
    locales[name] = new Locale(mergeConfigs(parentConfig, config));
    if (localeFamilies[name]) {
      localeFamilies[name].forEach(function(x) {
        defineLocale(x.name, x.config);
      });
    }
    getSetGlobalLocale(name);
    return locales[name];
  } else {
    delete locales[name];
    return null;
  }
}
function updateLocale(name, config) {
  if (config != null) {
    var locale2, tmpLocale, parentConfig = baseConfig;
    if (locales[name] != null && locales[name].parentLocale != null) {
      locales[name].set(mergeConfigs(locales[name]._config, config));
    } else {
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config = mergeConfigs(parentConfig, config);
      if (tmpLocale == null) {
        config.abbr = name;
      }
      locale2 = new Locale(config);
      locale2.parentLocale = locales[name];
      locales[name] = locale2;
    }
    getSetGlobalLocale(name);
  } else {
    if (locales[name] != null) {
      if (locales[name].parentLocale != null) {
        locales[name] = locales[name].parentLocale;
        if (name === getSetGlobalLocale()) {
          getSetGlobalLocale(name);
        }
      } else if (locales[name] != null) {
        delete locales[name];
      }
    }
  }
  return locales[name];
}
function getLocale(key) {
  var locale2;
  if (key && key._locale && key._locale._abbr) {
    key = key._locale._abbr;
  }
  if (!key) {
    return globalLocale;
  }
  if (!isArray(key)) {
    locale2 = loadLocale(key);
    if (locale2) {
      return locale2;
    }
    key = [key];
  }
  return chooseLocale(key);
}
function listLocales() {
  return keys(locales);
}
function checkOverflow(m) {
  var overflow, a = m._a;
  if (a && getParsingFlags(m).overflow === -2) {
    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
      overflow = DATE;
    }
    if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
      overflow = WEEK;
    }
    if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
      overflow = WEEKDAY;
    }
    getParsingFlags(m).overflow = overflow;
  }
  return m;
}
function configFromISO(config) {
  var i, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
  if (match) {
    getParsingFlags(config).iso = true;
    for (i = 0, l = isoDatesLen; i < l; i++) {
      if (isoDates[i][1].exec(match[1])) {
        dateFormat = isoDates[i][0];
        allowTime = isoDates[i][2] !== false;
        break;
      }
    }
    if (dateFormat == null) {
      config._isValid = false;
      return;
    }
    if (match[3]) {
      for (i = 0, l = isoTimesLen; i < l; i++) {
        if (isoTimes[i][1].exec(match[3])) {
          timeFormat = (match[2] || " ") + isoTimes[i][0];
          break;
        }
      }
      if (timeFormat == null) {
        config._isValid = false;
        return;
      }
    }
    if (!allowTime && timeFormat != null) {
      config._isValid = false;
      return;
    }
    if (match[4]) {
      if (tzRegex.exec(match[4])) {
        tzFormat = "Z";
      } else {
        config._isValid = false;
        return;
      }
    }
    config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
    configFromStringAndFormat(config);
  } else {
    config._isValid = false;
  }
}
function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)
  ];
  if (secondStr) {
    result.push(parseInt(secondStr, 10));
  }
  return result;
}
function untruncateYear(yearStr) {
  var year = parseInt(yearStr, 10);
  if (year <= 49) {
    return 2e3 + year;
  } else if (year <= 999) {
    return 1900 + year;
  }
  return year;
}
function preprocessRFC2822(s) {
  return s.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(weekdayStr, parsedInput, config) {
  if (weekdayStr) {
    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]
    ).getDay();
    if (weekdayProvided !== weekdayActual) {
      getParsingFlags(config).weekdayMismatch = true;
      config._isValid = false;
      return false;
    }
  }
  return true;
}
function calculateOffset(obsOffset, militaryOffset, numOffset) {
  if (obsOffset) {
    return obsOffsets[obsOffset];
  } else if (militaryOffset) {
    return 0;
  } else {
    var hm = parseInt(numOffset, 10), m = hm % 100, h = (hm - m) / 100;
    return h * 60 + m;
  }
}
function configFromRFC2822(config) {
  var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;
  if (match) {
    parsedArray = extractFromRFC2822Strings(
      match[4],
      match[3],
      match[2],
      match[5],
      match[6],
      match[7]
    );
    if (!checkWeekday(match[1], parsedArray, config)) {
      return;
    }
    config._a = parsedArray;
    config._tzm = calculateOffset(match[8], match[9], match[10]);
    config._d = createUTCDate.apply(null, config._a);
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    getParsingFlags(config).rfc2822 = true;
  } else {
    config._isValid = false;
  }
}
function configFromString(config) {
  var matched = aspNetJsonRegex.exec(config._i);
  if (matched !== null) {
    config._d = /* @__PURE__ */ new Date(+matched[1]);
    return;
  }
  configFromISO(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  configFromRFC2822(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  if (config._strict) {
    config._isValid = false;
  } else {
    hooks.createFromInputFallback(config);
  }
}
function defaults(a, b, c) {
  if (a != null) {
    return a;
  }
  if (b != null) {
    return b;
  }
  return c;
}
function currentDateArray(config) {
  var nowValue = new Date(hooks.now());
  if (config._useUTC) {
    return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()
    ];
  }
  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}
function configFromArray(config) {
  var i, date, input = [], currentDate, expectedWeekday, yearToUse;
  if (config._d) {
    return;
  }
  currentDate = currentDateArray(config);
  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
    dayOfYearFromWeekInfo(config);
  }
  if (config._dayOfYear != null) {
    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
      getParsingFlags(config)._overflowDayOfYear = true;
    }
    date = createUTCDate(yearToUse, 0, config._dayOfYear);
    config._a[MONTH] = date.getUTCMonth();
    config._a[DATE] = date.getUTCDate();
  }
  for (i = 0; i < 3 && config._a[i] == null; ++i) {
    config._a[i] = input[i] = currentDate[i];
  }
  for (; i < 7; i++) {
    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
  }
  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
    config._nextDay = true;
    config._a[HOUR] = 0;
  }
  config._d = (config._useUTC ? createUTCDate : createDate).apply(
    null,
    input
  );
  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
  if (config._tzm != null) {
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
  }
  if (config._nextDay) {
    config._a[HOUR] = 24;
  }
  if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
    getParsingFlags(config).weekdayMismatch = true;
  }
}
function dayOfYearFromWeekInfo(config) {
  var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
  w = config._w;
  if (w.GG != null || w.W != null || w.E != null) {
    dow = 1;
    doy = 4;
    weekYear = defaults(
      w.GG,
      config._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year
    );
    week = defaults(w.W, 1);
    weekday = defaults(w.E, 1);
    if (weekday < 1 || weekday > 7) {
      weekdayOverflow = true;
    }
  } else {
    dow = config._locale._week.dow;
    doy = config._locale._week.doy;
    curWeek = weekOfYear(createLocal(), dow, doy);
    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
    week = defaults(w.w, curWeek.week);
    if (w.d != null) {
      weekday = w.d;
      if (weekday < 0 || weekday > 6) {
        weekdayOverflow = true;
      }
    } else if (w.e != null) {
      weekday = w.e + dow;
      if (w.e < 0 || w.e > 6) {
        weekdayOverflow = true;
      }
    } else {
      weekday = dow;
    }
  }
  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
    getParsingFlags(config)._overflowWeeks = true;
  } else if (weekdayOverflow != null) {
    getParsingFlags(config)._overflowWeekday = true;
  } else {
    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
    config._a[YEAR] = temp.year;
    config._dayOfYear = temp.dayOfYear;
  }
}
function configFromStringAndFormat(config) {
  if (config._f === hooks.ISO_8601) {
    configFromISO(config);
    return;
  }
  if (config._f === hooks.RFC_2822) {
    configFromRFC2822(config);
    return;
  }
  config._a = [];
  getParsingFlags(config).empty = true;
  var string = "" + config._i, i, parsedInput, tokens2, token2, skipped, stringLength = string.length, totalParsedInputLength = 0, era, tokenLen;
  tokens2 = expandFormat(config._f, config._locale).match(formattingTokens) || [];
  tokenLen = tokens2.length;
  for (i = 0; i < tokenLen; i++) {
    token2 = tokens2[i];
    parsedInput = (string.match(getParseRegexForToken(token2, config)) || [])[0];
    if (parsedInput) {
      skipped = string.substr(0, string.indexOf(parsedInput));
      if (skipped.length > 0) {
        getParsingFlags(config).unusedInput.push(skipped);
      }
      string = string.slice(
        string.indexOf(parsedInput) + parsedInput.length
      );
      totalParsedInputLength += parsedInput.length;
    }
    if (formatTokenFunctions[token2]) {
      if (parsedInput) {
        getParsingFlags(config).empty = false;
      } else {
        getParsingFlags(config).unusedTokens.push(token2);
      }
      addTimeToArrayFromToken(token2, parsedInput, config);
    } else if (config._strict && !parsedInput) {
      getParsingFlags(config).unusedTokens.push(token2);
    }
  }
  getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
  if (string.length > 0) {
    getParsingFlags(config).unusedInput.push(string);
  }
  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
    getParsingFlags(config).bigHour = void 0;
  }
  getParsingFlags(config).parsedDateParts = config._a.slice(0);
  getParsingFlags(config).meridiem = config._meridiem;
  config._a[HOUR] = meridiemFixWrap(
    config._locale,
    config._a[HOUR],
    config._meridiem
  );
  era = getParsingFlags(config).era;
  if (era !== null) {
    config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
  }
  configFromArray(config);
  checkOverflow(config);
}
function meridiemFixWrap(locale2, hour, meridiem2) {
  var isPm;
  if (meridiem2 == null) {
    return hour;
  }
  if (locale2.meridiemHour != null) {
    return locale2.meridiemHour(hour, meridiem2);
  } else if (locale2.isPM != null) {
    isPm = locale2.isPM(meridiem2);
    if (isPm && hour < 12) {
      hour += 12;
    }
    if (!isPm && hour === 12) {
      hour = 0;
    }
    return hour;
  } else {
    return hour;
  }
}
function configFromStringAndArray(config) {
  var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;
  if (configfLen === 0) {
    getParsingFlags(config).invalidFormat = true;
    config._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (i = 0; i < configfLen; i++) {
    currentScore = 0;
    validFormatFound = false;
    tempConfig = copyConfig({}, config);
    if (config._useUTC != null) {
      tempConfig._useUTC = config._useUTC;
    }
    tempConfig._f = config._f[i];
    configFromStringAndFormat(tempConfig);
    if (isValid(tempConfig)) {
      validFormatFound = true;
    }
    currentScore += getParsingFlags(tempConfig).charsLeftOver;
    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    getParsingFlags(tempConfig).score = currentScore;
    if (!bestFormatIsValid) {
      if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
        if (validFormatFound) {
          bestFormatIsValid = true;
        }
      }
    } else {
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
  }
  extend(config, bestMoment || tempConfig);
}
function configFromObject(config) {
  if (config._d) {
    return;
  }
  var i = normalizeObjectUnits(config._i), dayOrDate = i.day === void 0 ? i.date : i.day;
  config._a = map(
    [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
    function(obj) {
      return obj && parseInt(obj, 10);
    }
  );
  configFromArray(config);
}
function createFromConfig(config) {
  var res = new Moment(checkOverflow(prepareConfig(config)));
  if (res._nextDay) {
    res.add(1, "d");
    res._nextDay = void 0;
  }
  return res;
}
function prepareConfig(config) {
  var input = config._i, format2 = config._f;
  config._locale = config._locale || getLocale(config._l);
  if (input === null || format2 === void 0 && input === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof input === "string") {
    config._i = input = config._locale.preparse(input);
  }
  if (isMoment(input)) {
    return new Moment(checkOverflow(input));
  } else if (isDate(input)) {
    config._d = input;
  } else if (isArray(format2)) {
    configFromStringAndArray(config);
  } else if (format2) {
    configFromStringAndFormat(config);
  } else {
    configFromInput(config);
  }
  if (!isValid(config)) {
    config._d = null;
  }
  return config;
}
function configFromInput(config) {
  var input = config._i;
  if (isUndefined(input)) {
    config._d = new Date(hooks.now());
  } else if (isDate(input)) {
    config._d = new Date(input.valueOf());
  } else if (typeof input === "string") {
    configFromString(config);
  } else if (isArray(input)) {
    config._a = map(input.slice(0), function(obj) {
      return parseInt(obj, 10);
    });
    configFromArray(config);
  } else if (isObject(input)) {
    configFromObject(config);
  } else if (isNumber(input)) {
    config._d = new Date(input);
  } else {
    hooks.createFromInputFallback(config);
  }
}
function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
  var c = {};
  if (format2 === true || format2 === false) {
    strict = format2;
    format2 = void 0;
  }
  if (locale2 === true || locale2 === false) {
    strict = locale2;
    locale2 = void 0;
  }
  if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
    input = void 0;
  }
  c._isAMomentObject = true;
  c._useUTC = c._isUTC = isUTC;
  c._l = locale2;
  c._i = input;
  c._f = format2;
  c._strict = strict;
  return createFromConfig(c);
}
function createLocal(input, format2, locale2, strict) {
  return createLocalOrUTC(input, format2, locale2, strict, false);
}
function pickBy(fn, moments) {
  var res, i;
  if (moments.length === 1 && isArray(moments[0])) {
    moments = moments[0];
  }
  if (!moments.length) {
    return createLocal();
  }
  res = moments[0];
  for (i = 1; i < moments.length; ++i) {
    if (!moments[i].isValid() || moments[i][fn](res)) {
      res = moments[i];
    }
  }
  return res;
}
function min() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isBefore", args);
}
function max() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isAfter", args);
}
function isDurationValid(m) {
  var key, unitHasDecimal = false, i, orderLen = ordering.length;
  for (key in m) {
    if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
      return false;
    }
  }
  for (i = 0; i < orderLen; ++i) {
    if (m[ordering[i]]) {
      if (unitHasDecimal) {
        return false;
      }
      if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
        unitHasDecimal = true;
      }
    }
  }
  return true;
}
function isValid$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(duration) {
  var normalizedInput = normalizeObjectUnits(duration), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
  this._isValid = isDurationValid(normalizedInput);
  this._milliseconds = +milliseconds2 + seconds2 * 1e3 + // 1000
  minutes2 * 6e4 + // 1000 * 60
  hours2 * 1e3 * 60 * 60;
  this._days = +days2 + weeks2 * 7;
  this._months = +months2 + quarters * 3 + years2 * 12;
  this._data = {};
  this._locale = getLocale();
  this._bubble();
}
function isDuration(obj) {
  return obj instanceof Duration;
}
function absRound(number) {
  if (number < 0) {
    return Math.round(-1 * number) * -1;
  } else {
    return Math.round(number);
  }
}
function compareArrays(array1, array2, dontConvert) {
  var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
  for (i = 0; i < len; i++) {
    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
      diffs++;
    }
  }
  return diffs + lengthDiff;
}
function offset(token2, separator) {
  addFormatToken(token2, 0, 0, function() {
    var offset2 = this.utcOffset(), sign2 = "+";
    if (offset2 < 0) {
      offset2 = -offset2;
      sign2 = "-";
    }
    return sign2 + zeroFill(~~(offset2 / 60), 2) + separator + zeroFill(~~offset2 % 60, 2);
  });
}
function offsetFromString(matcher, string) {
  var matches = (string || "").match(matcher), chunk, parts, minutes2;
  if (matches === null) {
    return null;
  }
  chunk = matches[matches.length - 1] || [];
  parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
  minutes2 = +(parts[1] * 60) + toInt(parts[2]);
  return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
}
function cloneWithOffset(input, model) {
  var res, diff2;
  if (model._isUTC) {
    res = model.clone();
    diff2 = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
    res._d.setTime(res._d.valueOf() + diff2);
    hooks.updateOffset(res, false);
    return res;
  } else {
    return createLocal(input).local();
  }
}
function getDateOffset(m) {
  return -Math.round(m._d.getTimezoneOffset());
}
function getSetOffset(input, keepLocalTime, keepMinutes) {
  var offset2 = this._offset || 0, localAdjust;
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    if (typeof input === "string") {
      input = offsetFromString(matchShortOffset, input);
      if (input === null) {
        return this;
      }
    } else if (Math.abs(input) < 16 && !keepMinutes) {
      input = input * 60;
    }
    if (!this._isUTC && keepLocalTime) {
      localAdjust = getDateOffset(this);
    }
    this._offset = input;
    this._isUTC = true;
    if (localAdjust != null) {
      this.add(localAdjust, "m");
    }
    if (offset2 !== input) {
      if (!keepLocalTime || this._changeInProgress) {
        addSubtract(
          this,
          createDuration(input - offset2, "m"),
          1,
          false
        );
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? offset2 : getDateOffset(this);
  }
}
function getSetZone(input, keepLocalTime) {
  if (input != null) {
    if (typeof input !== "string") {
      input = -input;
    }
    this.utcOffset(input, keepLocalTime);
    return this;
  } else {
    return -this.utcOffset();
  }
}
function setOffsetToUTC(keepLocalTime) {
  return this.utcOffset(0, keepLocalTime);
}
function setOffsetToLocal(keepLocalTime) {
  if (this._isUTC) {
    this.utcOffset(0, keepLocalTime);
    this._isUTC = false;
    if (keepLocalTime) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var tZone = offsetFromString(matchOffset, this._i);
    if (tZone != null) {
      this.utcOffset(tZone);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
}
function hasAlignedHourOffset(input) {
  if (!this.isValid()) {
    return false;
  }
  input = input ? createLocal(input).utcOffset() : 0;
  return (this.utcOffset() - input) % 60 === 0;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var c = {}, other;
  copyConfig(c, this);
  c = prepareConfig(c);
  if (c._a) {
    other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
    this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : false;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : false;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
}
function createDuration(input, key) {
  var duration = input, match = null, sign2, ret, diffRes;
  if (isDuration(input)) {
    duration = {
      ms: input._milliseconds,
      d: input._days,
      M: input._months
    };
  } else if (isNumber(input) || !isNaN(+input)) {
    duration = {};
    if (key) {
      duration[key] = +input;
    } else {
      duration.milliseconds = +input;
    }
  } else if (match = aspNetRegex.exec(input)) {
    sign2 = match[1] === "-" ? -1 : 1;
    duration = {
      y: 0,
      d: toInt(match[DATE]) * sign2,
      h: toInt(match[HOUR]) * sign2,
      m: toInt(match[MINUTE]) * sign2,
      s: toInt(match[SECOND]) * sign2,
      ms: toInt(absRound(match[MILLISECOND] * 1e3)) * sign2
      // the millisecond decimal point is included in the match
    };
  } else if (match = isoRegex.exec(input)) {
    sign2 = match[1] === "-" ? -1 : 1;
    duration = {
      y: parseIso(match[2], sign2),
      M: parseIso(match[3], sign2),
      w: parseIso(match[4], sign2),
      d: parseIso(match[5], sign2),
      h: parseIso(match[6], sign2),
      m: parseIso(match[7], sign2),
      s: parseIso(match[8], sign2)
    };
  } else if (duration == null) {
    duration = {};
  } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
    diffRes = momentsDifference(
      createLocal(duration.from),
      createLocal(duration.to)
    );
    duration = {};
    duration.ms = diffRes.milliseconds;
    duration.M = diffRes.months;
  }
  ret = new Duration(duration);
  if (isDuration(input) && hasOwnProp(input, "_locale")) {
    ret._locale = input._locale;
  }
  if (isDuration(input) && hasOwnProp(input, "_isValid")) {
    ret._isValid = input._isValid;
  }
  return ret;
}
function parseIso(inp, sign2) {
  var res = inp && parseFloat(inp.replace(",", "."));
  return (isNaN(res) ? 0 : res) * sign2;
}
function positiveMomentsDifference(base, other) {
  var res = {};
  res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
  if (base.clone().add(res.months, "M").isAfter(other)) {
    --res.months;
  }
  res.milliseconds = +other - +base.clone().add(res.months, "M");
  return res;
}
function momentsDifference(base, other) {
  var res;
  if (!(base.isValid() && other.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  other = cloneWithOffset(other, base);
  if (base.isBefore(other)) {
    res = positiveMomentsDifference(base, other);
  } else {
    res = positiveMomentsDifference(other, base);
    res.milliseconds = -res.milliseconds;
    res.months = -res.months;
  }
  return res;
}
function createAdder(direction, name) {
  return function(val, period) {
    var dur, tmp;
    if (period !== null && !isNaN(+period)) {
      deprecateSimple(
        name,
        "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
      );
      tmp = val;
      val = period;
      period = tmp;
    }
    dur = createDuration(val, period);
    addSubtract(this, dur, direction);
    return this;
  };
}
function addSubtract(mom, duration, isAdding, updateOffset) {
  var milliseconds2 = duration._milliseconds, days2 = absRound(duration._days), months2 = absRound(duration._months);
  if (!mom.isValid()) {
    return;
  }
  updateOffset = updateOffset == null ? true : updateOffset;
  if (months2) {
    setMonth(mom, get(mom, "Month") + months2 * isAdding);
  }
  if (days2) {
    set$1(mom, "Date", get(mom, "Date") + days2 * isAdding);
  }
  if (milliseconds2) {
    mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
  }
  if (updateOffset) {
    hooks.updateOffset(mom, days2 || months2);
  }
}
function isString(input) {
  return typeof input === "string" || input instanceof String;
}
function isMomentInput(input) {
  return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
}
function isMomentInputObject(input) {
  var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], i, property, propertyLen = properties.length;
  for (i = 0; i < propertyLen; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
}
function isNumberOrStringArray(input) {
  var arrayTest = isArray(input), dataTypeTest = false;
  if (arrayTest) {
    dataTypeTest = input.filter(function(item) {
      return !isNumber(item) && isString(input);
    }).length === 0;
  }
  return arrayTest && dataTypeTest;
}
function isCalendarSpec(input) {
  var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], i, property;
  for (i = 0; i < properties.length; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
}
function getCalendarFormat(myMoment, now2) {
  var diff2 = myMoment.diff(now2, "days", true);
  return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(time, formats) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      time = void 0;
      formats = void 0;
    } else if (isMomentInput(arguments[0])) {
      time = arguments[0];
      formats = void 0;
    } else if (isCalendarSpec(arguments[0])) {
      formats = arguments[0];
      time = void 0;
    }
  }
  var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction(formats[format2]) ? formats[format2].call(this, now2) : formats[format2]);
  return this.format(
    output || this.localeData().calendar(format2, this, createLocal(now2))
  );
}
function clone() {
  return new Moment(this);
}
function isAfter(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() > localInput.valueOf();
  } else {
    return localInput.valueOf() < this.clone().startOf(units).valueOf();
  }
}
function isBefore(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() < localInput.valueOf();
  } else {
    return this.clone().endOf(units).valueOf() < localInput.valueOf();
  }
}
function isBetween(from2, to2, units, inclusivity) {
  var localFrom = isMoment(from2) ? from2 : createLocal(from2), localTo = isMoment(to2) ? to2 : createLocal(to2);
  if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
    return false;
  }
  inclusivity = inclusivity || "()";
  return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
}
function isSame(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input), inputMs;
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() === localInput.valueOf();
  } else {
    inputMs = localInput.valueOf();
    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
  }
}
function isSameOrAfter(input, units) {
  return this.isSame(input, units) || this.isAfter(input, units);
}
function isSameOrBefore(input, units) {
  return this.isSame(input, units) || this.isBefore(input, units);
}
function diff(input, units, asFloat) {
  var that, zoneDelta, output;
  if (!this.isValid()) {
    return NaN;
  }
  that = cloneWithOffset(input, this);
  if (!that.isValid()) {
    return NaN;
  }
  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
  units = normalizeUnits(units);
  switch (units) {
    case "year":
      output = monthDiff(this, that) / 12;
      break;
    case "month":
      output = monthDiff(this, that);
      break;
    case "quarter":
      output = monthDiff(this, that) / 3;
      break;
    case "second":
      output = (this - that) / 1e3;
      break;
    case "minute":
      output = (this - that) / 6e4;
      break;
    case "hour":
      output = (this - that) / 36e5;
      break;
    case "day":
      output = (this - that - zoneDelta) / 864e5;
      break;
    case "week":
      output = (this - that - zoneDelta) / 6048e5;
      break;
    default:
      output = this - that;
  }
  return asFloat ? output : absFloor(output);
}
function monthDiff(a, b) {
  if (a.date() < b.date()) {
    return -monthDiff(b, a);
  }
  var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
  if (b - anchor < 0) {
    anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
    adjust = (b - anchor) / (anchor - anchor2);
  } else {
    anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
    adjust = (b - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
}
function toString() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(keepOffset) {
  if (!this.isValid()) {
    return null;
  }
  var utc = keepOffset !== true, m = utc ? this.clone().utc() : this;
  if (m.year() < 0 || m.year() > 9999) {
    return formatMoment(
      m,
      utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
    );
  }
  if (isFunction(Date.prototype.toISOString)) {
    if (utc) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m, "Z"));
    }
  }
  return formatMoment(
    m,
    utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function inspect() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var func = "moment", zone = "", prefix, year, datetime, suffix;
  if (!this.isLocal()) {
    func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    zone = "Z";
  }
  prefix = "[" + func + '("]';
  year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  datetime = "-MM-DD[T]HH:mm:ss.SSS";
  suffix = zone + '[")]';
  return this.format(prefix + year + datetime + suffix);
}
function format(inputString) {
  if (!inputString) {
    inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var output = formatMoment(this, inputString);
  return this.localeData().postformat(output);
}
function from(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function fromNow(withoutSuffix) {
  return this.from(createLocal(), withoutSuffix);
}
function to(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function toNow(withoutSuffix) {
  return this.to(createLocal(), withoutSuffix);
}
function locale(key) {
  var newLocaleData;
  if (key === void 0) {
    return this._locale._abbr;
  } else {
    newLocaleData = getLocale(key);
    if (newLocaleData != null) {
      this._locale = newLocaleData;
    }
    return this;
  }
}
function localeData() {
  return this._locale;
}
function mod$1(dividend, divisor) {
  return (dividend % divisor + divisor) % divisor;
}
function localStartOfDate(y, m, d) {
  if (y < 100 && y >= 0) {
    return new Date(y + 400, m, d) - MS_PER_400_YEARS;
  } else {
    return new Date(y, m, d).valueOf();
  }
}
function utcStartOfDate(y, m, d) {
  if (y < 100 && y >= 0) {
    return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(y, m, d);
  }
}
function startOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year(), 0, 1);
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      time = startOfDate(this.year(), this.month(), 1);
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date());
      break;
    case "hour":
      time = this._d.valueOf();
      time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      );
      break;
    case "minute":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_MINUTE);
      break;
    case "second":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_SECOND);
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function endOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      time = startOfDate(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      time = this._d.valueOf();
      time += MS_PER_HOUR - mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      ) - 1;
      break;
    case "minute":
      time = this._d.valueOf();
      time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
      break;
    case "second":
      time = this._d.valueOf();
      time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray() {
  var m = this;
  return [
    m.year(),
    m.month(),
    m.date(),
    m.hour(),
    m.minute(),
    m.second(),
    m.millisecond()
  ];
}
function toObject() {
  var m = this;
  return {
    years: m.year(),
    months: m.month(),
    date: m.date(),
    hours: m.hours(),
    minutes: m.minutes(),
    seconds: m.seconds(),
    milliseconds: m.milliseconds()
  };
}
function toJSON() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2() {
  return isValid(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
function localeEras(m, format2) {
  var i, l, date, eras = this._eras || getLocale("en")._eras;
  for (i = 0, l = eras.length; i < l; ++i) {
    switch (typeof eras[i].since) {
      case "string":
        date = hooks(eras[i].since).startOf("day");
        eras[i].since = date.valueOf();
        break;
    }
    switch (typeof eras[i].until) {
      case "undefined":
        eras[i].until = Infinity;
        break;
      case "string":
        date = hooks(eras[i].until).startOf("day").valueOf();
        eras[i].until = date.valueOf();
        break;
    }
  }
  return eras;
}
function localeErasParse(eraName, format2, strict) {
  var i, l, eras = this.eras(), name, abbr, narrow;
  eraName = eraName.toUpperCase();
  for (i = 0, l = eras.length; i < l; ++i) {
    name = eras[i].name.toUpperCase();
    abbr = eras[i].abbr.toUpperCase();
    narrow = eras[i].narrow.toUpperCase();
    if (strict) {
      switch (format2) {
        case "N":
        case "NN":
        case "NNN":
          if (abbr === eraName) {
            return eras[i];
          }
          break;
        case "NNNN":
          if (name === eraName) {
            return eras[i];
          }
          break;
        case "NNNNN":
          if (narrow === eraName) {
            return eras[i];
          }
          break;
      }
    } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
      return eras[i];
    }
  }
}
function localeErasConvertYear(era, year) {
  var dir = era.since <= era.until ? 1 : -1;
  if (year === void 0) {
    return hooks(era.since).year();
  } else {
    return hooks(era.since).year() + (year - era.offset) * dir;
  }
}
function getEraName() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].name;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].name;
    }
  }
  return "";
}
function getEraNarrow() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].narrow;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].narrow;
    }
  }
  return "";
}
function getEraAbbr() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].abbr;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].abbr;
    }
  }
  return "";
}
function getEraYear() {
  var i, l, dir, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    dir = eras[i].since <= eras[i].until ? 1 : -1;
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {
      return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
    }
  }
  return this.year();
}
function erasNameRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(isStrict) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(isStrict, locale2) {
  return locale2.erasAbbrRegex(isStrict);
}
function matchEraName(isStrict, locale2) {
  return locale2.erasNameRegex(isStrict);
}
function matchEraNarrow(isStrict, locale2) {
  return locale2.erasNarrowRegex(isStrict);
}
function matchEraYearOrdinal(isStrict, locale2) {
  return locale2._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l, eras = this.eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    namePieces.push(regexEscape(eras[i].name));
    abbrPieces.push(regexEscape(eras[i].abbr));
    narrowPieces.push(regexEscape(eras[i].narrow));
    mixedPieces.push(regexEscape(eras[i].name));
    mixedPieces.push(regexEscape(eras[i].abbr));
    mixedPieces.push(regexEscape(eras[i].narrow));
  }
  this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp(
    "^(" + narrowPieces.join("|") + ")",
    "i"
  );
}
function addWeekYearFormatToken(token2, getter) {
  addFormatToken(0, [token2, token2.length], 0, getter);
}
function getSetWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday(),
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function getSetISOWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}
function getWeeksInWeekYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
}
function getSetWeekYearHelper(input, week, weekday, dow, doy) {
  var weeksTarget;
  if (input == null) {
    return weekOfYear(this, dow, doy).year;
  } else {
    weeksTarget = weeksInYear(input, dow, doy);
    if (week > weeksTarget) {
      week = weeksTarget;
    }
    return setWeekAll.call(this, input, week, weekday, dow, doy);
  }
}
function setWeekAll(weekYear, week, weekday, dow, doy) {
  var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
  this.year(date.getUTCFullYear());
  this.month(date.getUTCMonth());
  this.date(date.getUTCDate());
  return this;
}
function getSetQuarter(input) {
  return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}
function getSetDayOfYear(input) {
  var dayOfYear = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
}
function parseMs(input, array) {
  array[MILLISECOND] = toInt(("0." + input) * 1e3);
}
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
function createUnix(input) {
  return createLocal(input * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(string) {
  return string;
}
function get$1(format2, index, field, setter) {
  var locale2 = getLocale(), utc = createUTC().set(setter, index);
  return locale2[field](utc, format2);
}
function listMonthsImpl(format2, index, field) {
  if (isNumber(format2)) {
    index = format2;
    format2 = void 0;
  }
  format2 = format2 || "";
  if (index != null) {
    return get$1(format2, index, field, "month");
  }
  var i, out = [];
  for (i = 0; i < 12; i++) {
    out[i] = get$1(format2, i, field, "month");
  }
  return out;
}
function listWeekdaysImpl(localeSorted, format2, index, field) {
  if (typeof localeSorted === "boolean") {
    if (isNumber(format2)) {
      index = format2;
      format2 = void 0;
    }
    format2 = format2 || "";
  } else {
    format2 = localeSorted;
    index = format2;
    localeSorted = false;
    if (isNumber(format2)) {
      index = format2;
      format2 = void 0;
    }
    format2 = format2 || "";
  }
  var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0, i, out = [];
  if (index != null) {
    return get$1(format2, (index + shift) % 7, field, "day");
  }
  for (i = 0; i < 7; i++) {
    out[i] = get$1(format2, (i + shift) % 7, field, "day");
  }
  return out;
}
function listMonths(format2, index) {
  return listMonthsImpl(format2, index, "months");
}
function listMonthsShort(format2, index) {
  return listMonthsImpl(format2, index, "monthsShort");
}
function listWeekdays(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdays");
}
function listWeekdaysShort(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysShort");
}
function listWeekdaysMin(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysMin");
}
function abs() {
  var data = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  data.milliseconds = mathAbs(data.milliseconds);
  data.seconds = mathAbs(data.seconds);
  data.minutes = mathAbs(data.minutes);
  data.hours = mathAbs(data.hours);
  data.months = mathAbs(data.months);
  data.years = mathAbs(data.years);
  return this;
}
function addSubtract$1(duration, input, value, direction) {
  var other = createDuration(input, value);
  duration._milliseconds += direction * other._milliseconds;
  duration._days += direction * other._days;
  duration._months += direction * other._months;
  return duration._bubble();
}
function add$1(input, value) {
  return addSubtract$1(this, input, value, 1);
}
function subtract$1(input, value) {
  return addSubtract$1(this, input, value, -1);
}
function absCeil(number) {
  if (number < 0) {
    return Math.floor(number);
  } else {
    return Math.ceil(number);
  }
}
function bubble() {
  var milliseconds2 = this._milliseconds, days2 = this._days, months2 = this._months, data = this._data, seconds2, minutes2, hours2, years2, monthsFromDays;
  if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
    milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
    days2 = 0;
    months2 = 0;
  }
  data.milliseconds = milliseconds2 % 1e3;
  seconds2 = absFloor(milliseconds2 / 1e3);
  data.seconds = seconds2 % 60;
  minutes2 = absFloor(seconds2 / 60);
  data.minutes = minutes2 % 60;
  hours2 = absFloor(minutes2 / 60);
  data.hours = hours2 % 24;
  days2 += absFloor(hours2 / 24);
  monthsFromDays = absFloor(daysToMonths(days2));
  months2 += monthsFromDays;
  days2 -= absCeil(monthsToDays(monthsFromDays));
  years2 = absFloor(months2 / 12);
  months2 %= 12;
  data.days = days2;
  data.months = months2;
  data.years = years2;
  return this;
}
function daysToMonths(days2) {
  return days2 * 4800 / 146097;
}
function monthsToDays(months2) {
  return months2 * 146097 / 4800;
}
function as(units) {
  if (!this.isValid()) {
    return NaN;
  }
  var days2, months2, milliseconds2 = this._milliseconds;
  units = normalizeUnits(units);
  if (units === "month" || units === "quarter" || units === "year") {
    days2 = this._days + milliseconds2 / 864e5;
    months2 = this._months + daysToMonths(days2);
    switch (units) {
      case "month":
        return months2;
      case "quarter":
        return months2 / 3;
      case "year":
        return months2 / 12;
    }
  } else {
    days2 = this._days + Math.round(monthsToDays(this._months));
    switch (units) {
      case "week":
        return days2 / 7 + milliseconds2 / 6048e5;
      case "day":
        return days2 + milliseconds2 / 864e5;
      case "hour":
        return days2 * 24 + milliseconds2 / 36e5;
      case "minute":
        return days2 * 1440 + milliseconds2 / 6e4;
      case "second":
        return days2 * 86400 + milliseconds2 / 1e3;
      case "millisecond":
        return Math.floor(days2 * 864e5) + milliseconds2;
      default:
        throw new Error("Unknown unit " + units);
    }
  }
}
function valueOf$1() {
  if (!this.isValid()) {
    return NaN;
  }
  return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
}
function makeAs(alias) {
  return function() {
    return this.as(alias);
  };
}
function clone$1() {
  return createDuration(this);
}
function get$2(units) {
  units = normalizeUnits(units);
  return this.isValid() ? this[units + "s"]() : NaN;
}
function makeGetter(name) {
  return function() {
    return this.isValid() ? this._data[name] : NaN;
  };
}
function weeks() {
  return absFloor(this.days() / 7);
}
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale2) {
  return locale2.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}
function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
  var duration = createDuration(posNegDuration).abs(), seconds2 = round(duration.as("s")), minutes2 = round(duration.as("m")), hours2 = round(duration.as("h")), days2 = round(duration.as("d")), months2 = round(duration.as("M")), weeks2 = round(duration.as("w")), years2 = round(duration.as("y")), a = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
  if (thresholds2.w != null) {
    a = a || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
  }
  a = a || months2 <= 1 && ["M"] || months2 < thresholds2.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
  a[2] = withoutSuffix;
  a[3] = +posNegDuration > 0;
  a[4] = locale2;
  return substituteTimeAgo.apply(null, a);
}
function getSetRelativeTimeRounding(roundingFunction) {
  if (roundingFunction === void 0) {
    return round;
  }
  if (typeof roundingFunction === "function") {
    round = roundingFunction;
    return true;
  }
  return false;
}
function getSetRelativeTimeThreshold(threshold, limit) {
  if (thresholds[threshold] === void 0) {
    return false;
  }
  if (limit === void 0) {
    return thresholds[threshold];
  }
  thresholds[threshold] = limit;
  if (threshold === "s") {
    thresholds.ss = limit - 1;
  }
  return true;
}
function humanize(argWithSuffix, argThresholds) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var withSuffix = false, th = thresholds, locale2, output;
  if (typeof argWithSuffix === "object") {
    argThresholds = argWithSuffix;
    argWithSuffix = false;
  }
  if (typeof argWithSuffix === "boolean") {
    withSuffix = argWithSuffix;
  }
  if (typeof argThresholds === "object") {
    th = Object.assign({}, thresholds, argThresholds);
    if (argThresholds.s != null && argThresholds.ss == null) {
      th.ss = argThresholds.s - 1;
    }
  }
  locale2 = this.localeData();
  output = relativeTime$1(this, !withSuffix, th, locale2);
  if (withSuffix) {
    output = locale2.pastFuture(+this, output);
  }
  return locale2.postformat(output);
}
function sign(x) {
  return (x > 0) - (x < 0) || +x;
}
function toISOString$1() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months2 = abs$1(this._months), minutes2, hours2, years2, s, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
  if (!total) {
    return "P0D";
  }
  minutes2 = absFloor(seconds2 / 60);
  hours2 = absFloor(minutes2 / 60);
  seconds2 %= 60;
  minutes2 %= 60;
  years2 = absFloor(months2 / 12);
  months2 %= 12;
  s = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
  totalSign = total < 0 ? "-" : "";
  ymSign = sign(this._months) !== sign(total) ? "-" : "";
  daysSign = sign(this._days) !== sign(total) ? "-" : "";
  hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
  return totalSign + "P" + (years2 ? ymSign + years2 + "Y" : "") + (months2 ? ymSign + months2 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s + "S" : "");
}
var hookCallback, some, momentProperties, updateInProgress, deprecations, keys, defaultCalendar, formattingTokens, localFormattingTokens, formatFunctions, formatTokenFunctions, defaultLongDateFormat, defaultInvalidDate, defaultOrdinal, defaultDayOfMonthOrdinalParse, defaultRelativeTime, aliases, priorities, match1, match2, match3, match4, match6, match1to2, match3to4, match5to6, match1to3, match1to4, match1to6, matchUnsigned, matchSigned, matchOffset, matchShortOffset, matchTimestamp, matchWord, regexes, tokens, YEAR, MONTH, DATE, HOUR, MINUTE, SECOND, MILLISECOND, WEEK, WEEKDAY, indexOf, defaultLocaleMonths, defaultLocaleMonthsShort, MONTHS_IN_FORMAT, defaultMonthsShortRegex, defaultMonthsRegex, getSetYear, defaultLocaleWeek, defaultLocaleWeekdays, defaultLocaleWeekdaysShort, defaultLocaleWeekdaysMin, defaultWeekdaysRegex, defaultWeekdaysShortRegex, defaultWeekdaysMinRegex, defaultLocaleMeridiemParse, getSetHour, baseConfig, locales, localeFamilies, globalLocale, extendedIsoRegex, basicIsoRegex, tzRegex, isoDates, isoTimes, aspNetJsonRegex, rfc2822, obsOffsets, prototypeMin, prototypeMax, now, ordering, chunkOffset, aspNetRegex, isoRegex, add, subtract, lang, MS_PER_SECOND, MS_PER_MINUTE, MS_PER_HOUR, MS_PER_400_YEARS, getSetDayOfMonth, getSetMinute, getSetSecond, token, getSetMillisecond, proto, proto$1, mathAbs, asMilliseconds, asSeconds, asMinutes, asHours, asDays, asWeeks, asMonths, asQuarters, asYears, milliseconds, seconds, minutes, hours, days, months, years, round, thresholds, abs$1, proto$2, moment_default;
var init_moment = __esm({
  "node_modules/moment/dist/moment.js"() {
    if (Array.prototype.some) {
      some = Array.prototype.some;
    } else {
      some = function(fun) {
        var t = Object(this), len = t.length >>> 0, i;
        for (i = 0; i < len; i++) {
          if (i in t && fun.call(this, t[i], i, t)) {
            return true;
          }
        }
        return false;
      };
    }
    momentProperties = hooks.momentProperties = [];
    updateInProgress = false;
    deprecations = {};
    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;
    if (Object.keys) {
      keys = Object.keys;
    } else {
      keys = function(obj) {
        var i, res = [];
        for (i in obj) {
          if (hasOwnProp(obj, i)) {
            res.push(i);
          }
        }
        return res;
      };
    }
    defaultCalendar = {
      sameDay: "[Today at] LT",
      nextDay: "[Tomorrow at] LT",
      nextWeek: "dddd [at] LT",
      lastDay: "[Yesterday at] LT",
      lastWeek: "[Last] dddd [at] LT",
      sameElse: "L"
    };
    formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
    localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
    formatFunctions = {};
    formatTokenFunctions = {};
    defaultLongDateFormat = {
      LTS: "h:mm:ss A",
      LT: "h:mm A",
      L: "MM/DD/YYYY",
      LL: "MMMM D, YYYY",
      LLL: "MMMM D, YYYY h:mm A",
      LLLL: "dddd, MMMM D, YYYY h:mm A"
    };
    defaultInvalidDate = "Invalid date";
    defaultOrdinal = "%d";
    defaultDayOfMonthOrdinalParse = /\d{1,2}/;
    defaultRelativeTime = {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      ss: "%d seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      w: "a week",
      ww: "%d weeks",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    };
    aliases = {};
    priorities = {};
    match1 = /\d/;
    match2 = /\d\d/;
    match3 = /\d{3}/;
    match4 = /\d{4}/;
    match6 = /[+-]?\d{6}/;
    match1to2 = /\d\d?/;
    match3to4 = /\d\d\d\d?/;
    match5to6 = /\d\d\d\d\d\d?/;
    match1to3 = /\d{1,3}/;
    match1to4 = /\d{1,4}/;
    match1to6 = /[+-]?\d{1,6}/;
    matchUnsigned = /\d+/;
    matchSigned = /[+-]?\d+/;
    matchOffset = /Z|[+-]\d\d:?\d\d/gi;
    matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
    matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
    matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
    regexes = {};
    tokens = {};
    YEAR = 0;
    MONTH = 1;
    DATE = 2;
    HOUR = 3;
    MINUTE = 4;
    SECOND = 5;
    MILLISECOND = 6;
    WEEK = 7;
    WEEKDAY = 8;
    if (Array.prototype.indexOf) {
      indexOf = Array.prototype.indexOf;
    } else {
      indexOf = function(o) {
        var i;
        for (i = 0; i < this.length; ++i) {
          if (this[i] === o) {
            return i;
          }
        }
        return -1;
      };
    }
    addFormatToken("M", ["MM", 2], "Mo", function() {
      return this.month() + 1;
    });
    addFormatToken("MMM", 0, 0, function(format2) {
      return this.localeData().monthsShort(this, format2);
    });
    addFormatToken("MMMM", 0, 0, function(format2) {
      return this.localeData().months(this, format2);
    });
    addUnitAlias("month", "M");
    addUnitPriority("month", 8);
    addRegexToken("M", match1to2);
    addRegexToken("MM", match1to2, match2);
    addRegexToken("MMM", function(isStrict, locale2) {
      return locale2.monthsShortRegex(isStrict);
    });
    addRegexToken("MMMM", function(isStrict, locale2) {
      return locale2.monthsRegex(isStrict);
    });
    addParseToken(["M", "MM"], function(input, array) {
      array[MONTH] = toInt(input) - 1;
    });
    addParseToken(["MMM", "MMMM"], function(input, array, config, token2) {
      var month = config._locale.monthsParse(input, token2, config._strict);
      if (month != null) {
        array[MONTH] = month;
      } else {
        getParsingFlags(config).invalidMonth = input;
      }
    });
    defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
      "_"
    );
    defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
    MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    defaultMonthsShortRegex = matchWord;
    defaultMonthsRegex = matchWord;
    addFormatToken("Y", 0, 0, function() {
      var y = this.year();
      return y <= 9999 ? zeroFill(y, 4) : "+" + y;
    });
    addFormatToken(0, ["YY", 2], 0, function() {
      return this.year() % 100;
    });
    addFormatToken(0, ["YYYY", 4], 0, "year");
    addFormatToken(0, ["YYYYY", 5], 0, "year");
    addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
    addUnitAlias("year", "y");
    addUnitPriority("year", 1);
    addRegexToken("Y", matchSigned);
    addRegexToken("YY", match1to2, match2);
    addRegexToken("YYYY", match1to4, match4);
    addRegexToken("YYYYY", match1to6, match6);
    addRegexToken("YYYYYY", match1to6, match6);
    addParseToken(["YYYYY", "YYYYYY"], YEAR);
    addParseToken("YYYY", function(input, array) {
      array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken("YY", function(input, array) {
      array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken("Y", function(input, array) {
      array[YEAR] = parseInt(input, 10);
    });
    hooks.parseTwoDigitYear = function(input) {
      return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
    };
    getSetYear = makeGetSet("FullYear", true);
    addFormatToken("w", ["ww", 2], "wo", "week");
    addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
    addUnitAlias("week", "w");
    addUnitAlias("isoWeek", "W");
    addUnitPriority("week", 5);
    addUnitPriority("isoWeek", 5);
    addRegexToken("w", match1to2);
    addRegexToken("ww", match1to2, match2);
    addRegexToken("W", match1to2);
    addRegexToken("WW", match1to2, match2);
    addWeekParseToken(
      ["w", "ww", "W", "WW"],
      function(input, week, config, token2) {
        week[token2.substr(0, 1)] = toInt(input);
      }
    );
    defaultLocaleWeek = {
      dow: 0,
      // Sunday is the first day of the week.
      doy: 6
      // The week that contains Jan 6th is the first week of the year.
    };
    addFormatToken("d", 0, "do", "day");
    addFormatToken("dd", 0, 0, function(format2) {
      return this.localeData().weekdaysMin(this, format2);
    });
    addFormatToken("ddd", 0, 0, function(format2) {
      return this.localeData().weekdaysShort(this, format2);
    });
    addFormatToken("dddd", 0, 0, function(format2) {
      return this.localeData().weekdays(this, format2);
    });
    addFormatToken("e", 0, 0, "weekday");
    addFormatToken("E", 0, 0, "isoWeekday");
    addUnitAlias("day", "d");
    addUnitAlias("weekday", "e");
    addUnitAlias("isoWeekday", "E");
    addUnitPriority("day", 11);
    addUnitPriority("weekday", 11);
    addUnitPriority("isoWeekday", 11);
    addRegexToken("d", match1to2);
    addRegexToken("e", match1to2);
    addRegexToken("E", match1to2);
    addRegexToken("dd", function(isStrict, locale2) {
      return locale2.weekdaysMinRegex(isStrict);
    });
    addRegexToken("ddd", function(isStrict, locale2) {
      return locale2.weekdaysShortRegex(isStrict);
    });
    addRegexToken("dddd", function(isStrict, locale2) {
      return locale2.weekdaysRegex(isStrict);
    });
    addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config, token2) {
      var weekday = config._locale.weekdaysParse(input, token2, config._strict);
      if (weekday != null) {
        week.d = weekday;
      } else {
        getParsingFlags(config).invalidWeekday = input;
      }
    });
    addWeekParseToken(["d", "e", "E"], function(input, week, config, token2) {
      week[token2] = toInt(input);
    });
    defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
    defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
    defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
    defaultWeekdaysRegex = matchWord;
    defaultWeekdaysShortRegex = matchWord;
    defaultWeekdaysMinRegex = matchWord;
    addFormatToken("H", ["HH", 2], 0, "hour");
    addFormatToken("h", ["hh", 2], 0, hFormat);
    addFormatToken("k", ["kk", 2], 0, kFormat);
    addFormatToken("hmm", 0, 0, function() {
      return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });
    addFormatToken("hmmss", 0, 0, function() {
      return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });
    addFormatToken("Hmm", 0, 0, function() {
      return "" + this.hours() + zeroFill(this.minutes(), 2);
    });
    addFormatToken("Hmmss", 0, 0, function() {
      return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });
    meridiem("a", true);
    meridiem("A", false);
    addUnitAlias("hour", "h");
    addUnitPriority("hour", 13);
    addRegexToken("a", matchMeridiem);
    addRegexToken("A", matchMeridiem);
    addRegexToken("H", match1to2);
    addRegexToken("h", match1to2);
    addRegexToken("k", match1to2);
    addRegexToken("HH", match1to2, match2);
    addRegexToken("hh", match1to2, match2);
    addRegexToken("kk", match1to2, match2);
    addRegexToken("hmm", match3to4);
    addRegexToken("hmmss", match5to6);
    addRegexToken("Hmm", match3to4);
    addRegexToken("Hmmss", match5to6);
    addParseToken(["H", "HH"], HOUR);
    addParseToken(["k", "kk"], function(input, array, config) {
      var kInput = toInt(input);
      array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(["a", "A"], function(input, array, config) {
      config._isPm = config._locale.isPM(input);
      config._meridiem = input;
    });
    addParseToken(["h", "hh"], function(input, array, config) {
      array[HOUR] = toInt(input);
      getParsingFlags(config).bigHour = true;
    });
    addParseToken("hmm", function(input, array, config) {
      var pos = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos));
      array[MINUTE] = toInt(input.substr(pos));
      getParsingFlags(config).bigHour = true;
    });
    addParseToken("hmmss", function(input, array, config) {
      var pos1 = input.length - 4, pos2 = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos1));
      array[MINUTE] = toInt(input.substr(pos1, 2));
      array[SECOND] = toInt(input.substr(pos2));
      getParsingFlags(config).bigHour = true;
    });
    addParseToken("Hmm", function(input, array, config) {
      var pos = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos));
      array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken("Hmmss", function(input, array, config) {
      var pos1 = input.length - 4, pos2 = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos1));
      array[MINUTE] = toInt(input.substr(pos1, 2));
      array[SECOND] = toInt(input.substr(pos2));
    });
    defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    getSetHour = makeGetSet("Hours", true);
    baseConfig = {
      calendar: defaultCalendar,
      longDateFormat: defaultLongDateFormat,
      invalidDate: defaultInvalidDate,
      ordinal: defaultOrdinal,
      dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
      relativeTime: defaultRelativeTime,
      months: defaultLocaleMonths,
      monthsShort: defaultLocaleMonthsShort,
      week: defaultLocaleWeek,
      weekdays: defaultLocaleWeekdays,
      weekdaysMin: defaultLocaleWeekdaysMin,
      weekdaysShort: defaultLocaleWeekdaysShort,
      meridiemParse: defaultLocaleMeridiemParse
    };
    locales = {};
    localeFamilies = {};
    extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
    isoDates = [
      ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
      ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
      ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
      ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
      ["YYYY-DDD", /\d{4}-\d{3}/],
      ["YYYY-MM", /\d{4}-\d\d/, false],
      ["YYYYYYMMDD", /[+-]\d{10}/],
      ["YYYYMMDD", /\d{8}/],
      ["GGGG[W]WWE", /\d{4}W\d{3}/],
      ["GGGG[W]WW", /\d{4}W\d{2}/, false],
      ["YYYYDDD", /\d{7}/],
      ["YYYYMM", /\d{6}/, false],
      ["YYYY", /\d{4}/, false]
    ];
    isoTimes = [
      ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
      ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
      ["HH:mm:ss", /\d\d:\d\d:\d\d/],
      ["HH:mm", /\d\d:\d\d/],
      ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
      ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
      ["HHmmss", /\d\d\d\d\d\d/],
      ["HHmm", /\d\d\d\d/],
      ["HH", /\d\d/]
    ];
    aspNetJsonRegex = /^\/?Date\((-?\d+)/i;
    rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
    obsOffsets = {
      UT: 0,
      GMT: 0,
      EDT: -4 * 60,
      EST: -5 * 60,
      CDT: -5 * 60,
      CST: -6 * 60,
      MDT: -6 * 60,
      MST: -7 * 60,
      PDT: -7 * 60,
      PST: -8 * 60
    };
    hooks.createFromInputFallback = deprecate(
      "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
      function(config) {
        config._d = /* @__PURE__ */ new Date(config._i + (config._useUTC ? " UTC" : ""));
      }
    );
    hooks.ISO_8601 = function() {
    };
    hooks.RFC_2822 = function() {
    };
    prototypeMin = deprecate(
      "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
      function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other < this ? this : other;
        } else {
          return createInvalid();
        }
      }
    );
    prototypeMax = deprecate(
      "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
      function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other > this ? this : other;
        } else {
          return createInvalid();
        }
      }
    );
    now = function() {
      return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
    };
    ordering = [
      "year",
      "quarter",
      "month",
      "week",
      "day",
      "hour",
      "minute",
      "second",
      "millisecond"
    ];
    offset("Z", ":");
    offset("ZZ", "");
    addRegexToken("Z", matchShortOffset);
    addRegexToken("ZZ", matchShortOffset);
    addParseToken(["Z", "ZZ"], function(input, array, config) {
      config._useUTC = true;
      config._tzm = offsetFromString(matchShortOffset, input);
    });
    chunkOffset = /([\+\-]|\d\d)/gi;
    hooks.updateOffset = function() {
    };
    aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/;
    isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;
    add = createAdder(1, "add");
    subtract = createAdder(-1, "subtract");
    hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
    hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
    lang = deprecate(
      "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
      function(key) {
        if (key === void 0) {
          return this.localeData();
        } else {
          return this.locale(key);
        }
      }
    );
    MS_PER_SECOND = 1e3;
    MS_PER_MINUTE = 60 * MS_PER_SECOND;
    MS_PER_HOUR = 60 * MS_PER_MINUTE;
    MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
    addFormatToken("N", 0, 0, "eraAbbr");
    addFormatToken("NN", 0, 0, "eraAbbr");
    addFormatToken("NNN", 0, 0, "eraAbbr");
    addFormatToken("NNNN", 0, 0, "eraName");
    addFormatToken("NNNNN", 0, 0, "eraNarrow");
    addFormatToken("y", ["y", 1], "yo", "eraYear");
    addFormatToken("y", ["yy", 2], 0, "eraYear");
    addFormatToken("y", ["yyy", 3], 0, "eraYear");
    addFormatToken("y", ["yyyy", 4], 0, "eraYear");
    addRegexToken("N", matchEraAbbr);
    addRegexToken("NN", matchEraAbbr);
    addRegexToken("NNN", matchEraAbbr);
    addRegexToken("NNNN", matchEraName);
    addRegexToken("NNNNN", matchEraNarrow);
    addParseToken(
      ["N", "NN", "NNN", "NNNN", "NNNNN"],
      function(input, array, config, token2) {
        var era = config._locale.erasParse(input, token2, config._strict);
        if (era) {
          getParsingFlags(config).era = era;
        } else {
          getParsingFlags(config).invalidEra = input;
        }
      }
    );
    addRegexToken("y", matchUnsigned);
    addRegexToken("yy", matchUnsigned);
    addRegexToken("yyy", matchUnsigned);
    addRegexToken("yyyy", matchUnsigned);
    addRegexToken("yo", matchEraYearOrdinal);
    addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
    addParseToken(["yo"], function(input, array, config, token2) {
      var match;
      if (config._locale._eraYearOrdinalRegex) {
        match = input.match(config._locale._eraYearOrdinalRegex);
      }
      if (config._locale.eraYearOrdinalParse) {
        array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
      } else {
        array[YEAR] = parseInt(input, 10);
      }
    });
    addFormatToken(0, ["gg", 2], 0, function() {
      return this.weekYear() % 100;
    });
    addFormatToken(0, ["GG", 2], 0, function() {
      return this.isoWeekYear() % 100;
    });
    addWeekYearFormatToken("gggg", "weekYear");
    addWeekYearFormatToken("ggggg", "weekYear");
    addWeekYearFormatToken("GGGG", "isoWeekYear");
    addWeekYearFormatToken("GGGGG", "isoWeekYear");
    addUnitAlias("weekYear", "gg");
    addUnitAlias("isoWeekYear", "GG");
    addUnitPriority("weekYear", 1);
    addUnitPriority("isoWeekYear", 1);
    addRegexToken("G", matchSigned);
    addRegexToken("g", matchSigned);
    addRegexToken("GG", match1to2, match2);
    addRegexToken("gg", match1to2, match2);
    addRegexToken("GGGG", match1to4, match4);
    addRegexToken("gggg", match1to4, match4);
    addRegexToken("GGGGG", match1to6, match6);
    addRegexToken("ggggg", match1to6, match6);
    addWeekParseToken(
      ["gggg", "ggggg", "GGGG", "GGGGG"],
      function(input, week, config, token2) {
        week[token2.substr(0, 2)] = toInt(input);
      }
    );
    addWeekParseToken(["gg", "GG"], function(input, week, config, token2) {
      week[token2] = hooks.parseTwoDigitYear(input);
    });
    addFormatToken("Q", 0, "Qo", "quarter");
    addUnitAlias("quarter", "Q");
    addUnitPriority("quarter", 7);
    addRegexToken("Q", match1);
    addParseToken("Q", function(input, array) {
      array[MONTH] = (toInt(input) - 1) * 3;
    });
    addFormatToken("D", ["DD", 2], "Do", "date");
    addUnitAlias("date", "D");
    addUnitPriority("date", 9);
    addRegexToken("D", match1to2);
    addRegexToken("DD", match1to2, match2);
    addRegexToken("Do", function(isStrict, locale2) {
      return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
    });
    addParseToken(["D", "DD"], DATE);
    addParseToken("Do", function(input, array) {
      array[DATE] = toInt(input.match(match1to2)[0]);
    });
    getSetDayOfMonth = makeGetSet("Date", true);
    addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
    addUnitAlias("dayOfYear", "DDD");
    addUnitPriority("dayOfYear", 4);
    addRegexToken("DDD", match1to3);
    addRegexToken("DDDD", match3);
    addParseToken(["DDD", "DDDD"], function(input, array, config) {
      config._dayOfYear = toInt(input);
    });
    addFormatToken("m", ["mm", 2], 0, "minute");
    addUnitAlias("minute", "m");
    addUnitPriority("minute", 14);
    addRegexToken("m", match1to2);
    addRegexToken("mm", match1to2, match2);
    addParseToken(["m", "mm"], MINUTE);
    getSetMinute = makeGetSet("Minutes", false);
    addFormatToken("s", ["ss", 2], 0, "second");
    addUnitAlias("second", "s");
    addUnitPriority("second", 15);
    addRegexToken("s", match1to2);
    addRegexToken("ss", match1to2, match2);
    addParseToken(["s", "ss"], SECOND);
    getSetSecond = makeGetSet("Seconds", false);
    addFormatToken("S", 0, 0, function() {
      return ~~(this.millisecond() / 100);
    });
    addFormatToken(0, ["SS", 2], 0, function() {
      return ~~(this.millisecond() / 10);
    });
    addFormatToken(0, ["SSS", 3], 0, "millisecond");
    addFormatToken(0, ["SSSS", 4], 0, function() {
      return this.millisecond() * 10;
    });
    addFormatToken(0, ["SSSSS", 5], 0, function() {
      return this.millisecond() * 100;
    });
    addFormatToken(0, ["SSSSSS", 6], 0, function() {
      return this.millisecond() * 1e3;
    });
    addFormatToken(0, ["SSSSSSS", 7], 0, function() {
      return this.millisecond() * 1e4;
    });
    addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
      return this.millisecond() * 1e5;
    });
    addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
      return this.millisecond() * 1e6;
    });
    addUnitAlias("millisecond", "ms");
    addUnitPriority("millisecond", 16);
    addRegexToken("S", match1to3, match1);
    addRegexToken("SS", match1to3, match2);
    addRegexToken("SSS", match1to3, match3);
    for (token = "SSSS"; token.length <= 9; token += "S") {
      addRegexToken(token, matchUnsigned);
    }
    for (token = "S"; token.length <= 9; token += "S") {
      addParseToken(token, parseMs);
    }
    getSetMillisecond = makeGetSet("Milliseconds", false);
    addFormatToken("z", 0, 0, "zoneAbbr");
    addFormatToken("zz", 0, 0, "zoneName");
    proto = Moment.prototype;
    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== "undefined" && Symbol.for != null) {
      proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return "Moment<" + this.format() + ">";
      };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
      "dates accessor is deprecated. Use date instead.",
      getSetDayOfMonth
    );
    proto.months = deprecate(
      "months accessor is deprecated. Use month instead",
      getSetMonth
    );
    proto.years = deprecate(
      "years accessor is deprecated. Use year instead",
      getSetYear
    );
    proto.zone = deprecate(
      "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
      getSetZone
    );
    proto.isDSTShifted = deprecate(
      "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
      isDaylightSavingTimeShifted
    );
    proto$1 = Locale.prototype;
    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;
    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;
    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;
    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;
    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;
    getSetGlobalLocale("en", {
      eras: [
        {
          since: "0001-01-01",
          until: Infinity,
          offset: 1,
          name: "Anno Domini",
          narrow: "AD",
          abbr: "AD"
        },
        {
          since: "0000-12-31",
          until: -Infinity,
          offset: 1,
          name: "Before Christ",
          narrow: "BC",
          abbr: "BC"
        }
      ],
      dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
      ordinal: function(number) {
        var b = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
        return number + output;
      }
    });
    hooks.lang = deprecate(
      "moment.lang is deprecated. Use moment.locale instead.",
      getSetGlobalLocale
    );
    hooks.langData = deprecate(
      "moment.langData is deprecated. Use moment.localeData instead.",
      getLocale
    );
    mathAbs = Math.abs;
    asMilliseconds = makeAs("ms");
    asSeconds = makeAs("s");
    asMinutes = makeAs("m");
    asHours = makeAs("h");
    asDays = makeAs("d");
    asWeeks = makeAs("w");
    asMonths = makeAs("M");
    asQuarters = makeAs("Q");
    asYears = makeAs("y");
    milliseconds = makeGetter("milliseconds");
    seconds = makeGetter("seconds");
    minutes = makeGetter("minutes");
    hours = makeGetter("hours");
    days = makeGetter("days");
    months = makeGetter("months");
    years = makeGetter("years");
    round = Math.round;
    thresholds = {
      ss: 44,
      // a few seconds to seconds
      s: 45,
      // seconds to minute
      m: 45,
      // minutes to hour
      h: 22,
      // hours to day
      d: 26,
      // days to month/week
      w: null,
      // weeks to month
      M: 11
      // months to year
    };
    abs$1 = Math.abs;
    proto$2 = Duration.prototype;
    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;
    proto$2.toIsoString = deprecate(
      "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
      toISOString$1
    );
    proto$2.lang = lang;
    addFormatToken("X", 0, 0, "unix");
    addFormatToken("x", 0, 0, "valueOf");
    addRegexToken("x", matchSigned);
    addRegexToken("X", matchTimestamp);
    addParseToken("X", function(input, array, config) {
      config._d = new Date(parseFloat(input) * 1e3);
    });
    addParseToken("x", function(input, array, config) {
      config._d = new Date(toInt(input));
    });
    hooks.version = "2.29.4";
    setHookCallback(createLocal);
    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;
    hooks.HTML5_FMT = {
      DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
      // <input type="datetime-local" />
      DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
      // <input type="datetime-local" step="1" />
      DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
      // <input type="datetime-local" step="0.001" />
      DATE: "YYYY-MM-DD",
      // <input type="date" />
      TIME: "HH:mm",
      // <input type="time" />
      TIME_SECONDS: "HH:mm:ss",
      // <input type="time" step="1" />
      TIME_MS: "HH:mm:ss.SSS",
      // <input type="time" step="0.001" />
      WEEK: "GGGG-[W]WW",
      // <input type="week" />
      MONTH: "YYYY-MM"
      // <input type="month" />
    };
    moment_default = hooks;
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module2) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset2 = array.length;
      while (++index < length) {
        array[offset2 + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map2) {
      var index = -1, result = Array(map2.size);
      map2.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView = getNative(root, "DataView");
    var Map = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set = getNative(root, "Set");
    var WeakMap = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set);
    var weakMapCtorString = toSource(WeakMap);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray2(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray2(object), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject2(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys2, getSymbols);
    }
    function getMapData(map2, key) {
      var data = map2.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto2;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray2 = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction2(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual2(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction2(value) {
      if (!isObject2(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject2(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module2.exports = isEqual2;
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/generic.js
var require_generic = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/generic.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports._get = _get;
    exports._length = _length;
    exports.arraysEqual = arraysEqual;
    exports.deepObjectCompare = deepObjectCompare;
    exports.keyBy = keyBy;
    exports.noop = noop;
    var _lodash = _interopRequireDefault(require_lodash());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _get(object, key) {
      return typeof object.get === "function" ? object.get(key) : object[key];
    }
    function _length(object) {
      return typeof object.count === "function" ? object.count() : object.length;
    }
    function arraysEqual(array1, array2) {
      return _length(array1) === _length(array2) && array1.every(function(element, index) {
        return element === _get(array2, index);
      });
    }
    function deepObjectCompare(obj1, obj2) {
      return (0, _lodash["default"])(obj1, obj2);
    }
    function keyBy(value, key) {
      var obj = {};
      value.forEach(function(element) {
        obj[element[key]] = element;
      });
      return obj;
    }
    function noop() {
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/events.js
var require_events = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.composeEvents = composeEvents;
    function composeEvents() {
      for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
        fns[_key] = arguments[_key];
      }
      return function(event) {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        event.preventDefault();
        fns.forEach(function(fn) {
          return fn && fn.apply(void 0, [event].concat(args));
        });
      };
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/defaultItemRenderer.js
var require_defaultItemRenderer = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/defaultItemRenderer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultItemRenderer = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var defaultItemRenderer = function defaultItemRenderer2(_ref) {
      var item = _ref.item, itemContext = _ref.itemContext, getItemProps = _ref.getItemProps, getResizeProps = _ref.getResizeProps;
      var _getResizeProps = getResizeProps(), leftResizeProps = _getResizeProps.left, rightResizeProps = _getResizeProps.right;
      return _react["default"].createElement("div", getItemProps(item.itemProps), itemContext.useResizeHandle ? _react["default"].createElement("div", leftResizeProps) : "", _react["default"].createElement("div", {
        className: "rct-item-content",
        style: {
          maxHeight: "".concat(itemContext.dimensions.height)
        }
      }, itemContext.title), itemContext.useResizeHandle ? _react["default"].createElement("div", rightResizeProps) : "");
    };
    exports.defaultItemRenderer = defaultItemRenderer;
    defaultItemRenderer.propTypes = {
      item: _propTypes["default"].any,
      itemContext: _propTypes["default"].any,
      getItemProps: _propTypes["default"].any,
      getResizeProps: _propTypes["default"].any
    };
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/calendar.js
var require_calendar = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/calendar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.coordinateToTimeRatio = coordinateToTimeRatio;
    exports.calculateXPositionForTime = calculateXPositionForTime;
    exports.calculateTimeForXPosition = calculateTimeForXPosition;
    exports.iterateTimes = iterateTimes;
    exports.getMinUnit = getMinUnit;
    exports.getNextUnit = getNextUnit;
    exports.calculateInteractionNewTimes = calculateInteractionNewTimes;
    exports.calculateDimensions = calculateDimensions;
    exports.getGroupOrders = getGroupOrders;
    exports.getGroupedItems = getGroupedItems;
    exports.getVisibleItems = getVisibleItems;
    exports.collision = collision;
    exports.groupStack = groupStack;
    exports.groupNoStack = groupNoStack;
    exports.stackAll = stackAll;
    exports.stackGroup = stackGroup;
    exports.stackTimelineItems = stackTimelineItems;
    exports.getCanvasWidth = getCanvasWidth;
    exports.getItemDimensions = getItemDimensions;
    exports.getItemWithInteractions = getItemWithInteractions;
    exports.getCanvasBoundariesFromVisibleTime = getCanvasBoundariesFromVisibleTime;
    exports.calculateScrollCanvas = calculateScrollCanvas;
    exports.minCellWidth = void 0;
    var _moment = _interopRequireDefault((init_moment(), __toCommonJS(moment_exports)));
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function coordinateToTimeRatio(canvasTimeStart, canvasTimeEnd, canvasWidth) {
      return (canvasTimeEnd - canvasTimeStart) / canvasWidth;
    }
    function calculateXPositionForTime(canvasTimeStart, canvasTimeEnd, canvasWidth, time) {
      var widthToZoomRatio = canvasWidth / (canvasTimeEnd - canvasTimeStart);
      var timeOffset = time - canvasTimeStart;
      return timeOffset * widthToZoomRatio;
    }
    function calculateTimeForXPosition(canvasTimeStart, canvasTimeEnd, canvasWidth, leftOffset) {
      var timeToPxRatio = (canvasTimeEnd - canvasTimeStart) / canvasWidth;
      var timeFromCanvasTimeStart = timeToPxRatio * leftOffset;
      return timeFromCanvasTimeStart + canvasTimeStart;
    }
    function iterateTimes(start, end, unit, timeSteps, callback) {
      var time = (0, _moment["default"])(start).startOf(unit);
      if (timeSteps[unit] && timeSteps[unit] > 1) {
        var value = time.get(unit);
        time.set(unit, value - value % timeSteps[unit]);
      }
      while (time.valueOf() < end) {
        var nextTime = (0, _moment["default"])(time).add(timeSteps[unit] || 1, "".concat(unit, "s"));
        callback(time, nextTime);
        time = nextTime;
      }
    }
    var minCellWidth = 17;
    exports.minCellWidth = minCellWidth;
    function getMinUnit(zoom, width, timeSteps) {
      var timeDividers = {
        second: 1e3,
        minute: 60,
        hour: 60,
        day: 24,
        month: 30,
        year: 12
      };
      var minUnit = "year";
      var nextTimeSpanInUnitContext = zoom;
      Object.keys(timeDividers).some(function(unit) {
        nextTimeSpanInUnitContext = nextTimeSpanInUnitContext / timeDividers[unit];
        var cellsToBeRenderedForCurrentUnit = nextTimeSpanInUnitContext / timeSteps[unit];
        var cellWidthToUse = timeSteps[unit] && timeSteps[unit] > 1 ? 3 * minCellWidth : minCellWidth;
        var minimumCellsToRenderUnit = width / cellWidthToUse;
        if (cellsToBeRenderedForCurrentUnit < minimumCellsToRenderUnit) {
          minUnit = unit;
          return true;
        }
      });
      return minUnit;
    }
    function getNextUnit(unit) {
      var nextUnits = {
        second: "minute",
        minute: "hour",
        hour: "day",
        day: "month",
        month: "year",
        year: "year"
      };
      if (!nextUnits[unit]) {
        throw new Error("unit ".concat(unit, " in not acceptable"));
      }
      return nextUnits[unit];
    }
    function calculateInteractionNewTimes(_ref) {
      var itemTimeStart = _ref.itemTimeStart, itemTimeEnd = _ref.itemTimeEnd, dragTime = _ref.dragTime, isDragging = _ref.isDragging, isResizing = _ref.isResizing, resizingEdge = _ref.resizingEdge, resizeTime = _ref.resizeTime;
      var originalItemRange = itemTimeEnd - itemTimeStart;
      var itemStart = isResizing && resizingEdge === "left" ? resizeTime : itemTimeStart;
      var itemEnd = isResizing && resizingEdge === "right" ? resizeTime : itemTimeEnd;
      return [isDragging ? dragTime : itemStart, isDragging ? dragTime + originalItemRange : itemEnd];
    }
    function calculateDimensions(_ref2) {
      var itemTimeStart = _ref2.itemTimeStart, itemTimeEnd = _ref2.itemTimeEnd, canvasTimeStart = _ref2.canvasTimeStart, canvasTimeEnd = _ref2.canvasTimeEnd, canvasWidth = _ref2.canvasWidth;
      var itemTimeRange = itemTimeEnd - itemTimeStart;
      var effectiveStartTime = Math.max(itemTimeStart, canvasTimeStart);
      var effectiveEndTime = Math.min(itemTimeEnd, canvasTimeEnd);
      var left = calculateXPositionForTime(canvasTimeStart, canvasTimeEnd, canvasWidth, effectiveStartTime);
      var right = calculateXPositionForTime(canvasTimeStart, canvasTimeEnd, canvasWidth, effectiveEndTime);
      var itemWidth = right - left;
      var dimensions = {
        left,
        width: Math.max(itemWidth, 3),
        collisionLeft: itemTimeStart,
        collisionWidth: itemTimeRange
      };
      return dimensions;
    }
    function getGroupOrders(groups, keys2) {
      var groupIdKey = keys2.groupIdKey;
      var groupOrders = {};
      for (var i = 0; i < groups.length; i++) {
        groupOrders[(0, _generic._get)(groups[i], groupIdKey)] = {
          index: i,
          group: groups[i]
        };
      }
      return groupOrders;
    }
    function getGroupedItems(items, groupOrders) {
      var groupedItems = {};
      var keys2 = Object.keys(groupOrders);
      for (var i = 0; i < keys2.length; i++) {
        var groupOrder = groupOrders[keys2[i]];
        groupedItems[i] = {
          index: groupOrder.index,
          group: groupOrder.group,
          items: []
        };
      }
      for (var _i = 0; _i < items.length; _i++) {
        if (items[_i].dimensions.order !== void 0) {
          var groupItem = groupedItems[items[_i].dimensions.order.index];
          if (groupItem) {
            groupItem.items.push(items[_i]);
          }
        }
      }
      return groupedItems;
    }
    function getVisibleItems(items, canvasTimeStart, canvasTimeEnd, keys2) {
      var itemTimeStartKey = keys2.itemTimeStartKey, itemTimeEndKey = keys2.itemTimeEndKey;
      return items.filter(function(item) {
        return (0, _generic._get)(item, itemTimeStartKey) <= canvasTimeEnd && (0, _generic._get)(item, itemTimeEndKey) >= canvasTimeStart;
      });
    }
    var EPSILON = 1e-3;
    function collision(a, b, lineHeight) {
      var collisionPadding = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : EPSILON;
      var verticalMargin = 0;
      return a.collisionLeft + collisionPadding < b.collisionLeft + b.collisionWidth && a.collisionLeft + a.collisionWidth - collisionPadding > b.collisionLeft && a.top - verticalMargin + collisionPadding < b.top + b.height && a.top + a.height + verticalMargin - collisionPadding > b.top;
    }
    function groupStack(lineHeight, item, group, groupHeight, groupTop, itemIndex) {
      var curHeight = groupHeight;
      var verticalMargin = (lineHeight - item.dimensions.height) / 2;
      if (item.dimensions.stack && item.dimensions.top === null) {
        item.dimensions.top = groupTop + verticalMargin;
        curHeight = Math.max(curHeight, lineHeight);
        do {
          var collidingItem = null;
          for (var j = itemIndex - 1, jj = 0; j >= jj; j--) {
            var other = group[j];
            if (other.dimensions.top !== null && other.dimensions.stack && collision(item.dimensions, other.dimensions, lineHeight)) {
              collidingItem = other;
              break;
            } else {
            }
          }
          if (collidingItem != null) {
            item.dimensions.top = collidingItem.dimensions.top + lineHeight;
            curHeight = Math.max(curHeight, item.dimensions.top + item.dimensions.height + verticalMargin - groupTop);
          }
        } while (collidingItem);
      }
      return {
        groupHeight: curHeight,
        verticalMargin,
        itemTop: item.dimensions.top
      };
    }
    function groupNoStack(lineHeight, item, groupHeight, groupTop) {
      var verticalMargin = (lineHeight - item.dimensions.height) / 2;
      if (item.dimensions.top === null) {
        item.dimensions.top = groupTop + verticalMargin;
        groupHeight = Math.max(groupHeight, lineHeight);
      }
      return {
        groupHeight,
        verticalMargin: 0,
        itemTop: item.dimensions.top
      };
    }
    function sum() {
      var arr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      return arr.reduce(function(acc, i) {
        return acc + i;
      }, 0);
    }
    function stackAll(itemsDimensions, groupOrders, lineHeight, stackItems) {
      var groupHeights = [];
      var groupTops = [];
      var groupedItems = getGroupedItems(itemsDimensions, groupOrders);
      for (var index in groupedItems) {
        var groupItems = groupedItems[index];
        var _itemsDimensions = groupItems.items, group = groupItems.group;
        var groupTop = sum(groupHeights);
        var isGroupStacked = group.stackItems !== void 0 ? group.stackItems : stackItems;
        var _stackGroup = stackGroup(_itemsDimensions, isGroupStacked, lineHeight, groupTop), groupHeight = _stackGroup.groupHeight;
        groupTops.push(groupTop);
        if (group.height) {
          groupHeights.push(group.height);
        } else {
          groupHeights.push(Math.max(groupHeight, lineHeight));
        }
      }
      return {
        height: sum(groupHeights),
        groupHeights,
        groupTops
      };
    }
    function stackGroup(itemsDimensions, isGroupStacked, lineHeight, groupTop) {
      var groupHeight = 0;
      var verticalMargin = 0;
      for (var itemIndex = 0; itemIndex < itemsDimensions.length; itemIndex++) {
        var r = {};
        if (isGroupStacked) {
          r = groupStack(lineHeight, itemsDimensions[itemIndex], itemsDimensions, groupHeight, groupTop, itemIndex);
        } else {
          r = groupNoStack(lineHeight, itemsDimensions[itemIndex], groupHeight, groupTop);
        }
        groupHeight = r.groupHeight;
        verticalMargin = r.verticalMargin;
      }
      return {
        groupHeight,
        verticalMargin
      };
    }
    function stackTimelineItems(items, groups, canvasWidth, canvasTimeStart, canvasTimeEnd, keys2, lineHeight, itemHeightRatio, stackItems, draggingItem, resizingItem, dragTime, resizingEdge, resizeTime, newGroupOrder) {
      var visibleItems = getVisibleItems(items, canvasTimeStart, canvasTimeEnd, keys2);
      var visibleItemsWithInteraction = visibleItems.map(function(item) {
        return getItemWithInteractions({
          item,
          keys: keys2,
          draggingItem,
          resizingItem,
          dragTime,
          resizingEdge,
          resizeTime,
          groups,
          newGroupOrder
        });
      });
      if (groups.length === 0) {
        return {
          dimensionItems: [],
          height: 0,
          groupHeights: [],
          groupTops: []
        };
      }
      var groupOrders = getGroupOrders(groups, keys2);
      var dimensionItems = visibleItemsWithInteraction.map(function(item) {
        return getItemDimensions({
          item,
          keys: keys2,
          canvasTimeStart,
          canvasTimeEnd,
          canvasWidth,
          groupOrders,
          lineHeight,
          itemHeightRatio
        });
      }).filter(function(item) {
        return !!item;
      });
      var _stackAll = stackAll(dimensionItems, groupOrders, lineHeight, stackItems), height = _stackAll.height, groupHeights = _stackAll.groupHeights, groupTops = _stackAll.groupTops;
      return {
        dimensionItems,
        height,
        groupHeights,
        groupTops
      };
    }
    function getCanvasWidth(width, buffer) {
      return width * buffer;
    }
    function getItemDimensions(_ref3) {
      var item = _ref3.item, keys2 = _ref3.keys, canvasTimeStart = _ref3.canvasTimeStart, canvasTimeEnd = _ref3.canvasTimeEnd, canvasWidth = _ref3.canvasWidth, groupOrders = _ref3.groupOrders, lineHeight = _ref3.lineHeight, itemHeightRatio = _ref3.itemHeightRatio;
      var itemId = (0, _generic._get)(item, keys2.itemIdKey);
      var dimension = calculateDimensions({
        itemTimeStart: (0, _generic._get)(item, keys2.itemTimeStartKey),
        itemTimeEnd: (0, _generic._get)(item, keys2.itemTimeEndKey),
        canvasTimeStart,
        canvasTimeEnd,
        canvasWidth
      });
      if (dimension) {
        dimension.top = null;
        dimension.order = groupOrders[(0, _generic._get)(item, keys2.itemGroupKey)];
        dimension.stack = !item.isOverlay;
        dimension.height = lineHeight * itemHeightRatio;
        return {
          id: itemId,
          dimensions: dimension
        };
      }
    }
    function getItemWithInteractions(_ref4) {
      var _objectSpread2;
      var item = _ref4.item, keys2 = _ref4.keys, draggingItem = _ref4.draggingItem, resizingItem = _ref4.resizingItem, dragTime = _ref4.dragTime, resizingEdge = _ref4.resizingEdge, resizeTime = _ref4.resizeTime, groups = _ref4.groups, newGroupOrder = _ref4.newGroupOrder;
      if (!resizingItem && !draggingItem)
        return item;
      var itemId = (0, _generic._get)(item, keys2.itemIdKey);
      var isDragging = itemId === draggingItem;
      var isResizing = itemId === resizingItem;
      var _calculateInteraction = calculateInteractionNewTimes({
        itemTimeStart: (0, _generic._get)(item, keys2.itemTimeStartKey),
        itemTimeEnd: (0, _generic._get)(item, keys2.itemTimeEndKey),
        isDragging,
        isResizing,
        dragTime,
        resizingEdge,
        resizeTime
      }), _calculateInteraction2 = _slicedToArray(_calculateInteraction, 2), itemTimeStart = _calculateInteraction2[0], itemTimeEnd = _calculateInteraction2[1];
      var newItem = _objectSpread({}, item, (_objectSpread2 = {}, _defineProperty(_objectSpread2, keys2.itemTimeStartKey, itemTimeStart), _defineProperty(_objectSpread2, keys2.itemTimeEndKey, itemTimeEnd), _defineProperty(_objectSpread2, keys2.itemGroupKey, isDragging ? (0, _generic._get)(groups[newGroupOrder], keys2.groupIdKey) : (0, _generic._get)(item, keys2.itemGroupKey)), _objectSpread2));
      return newItem;
    }
    function getCanvasBoundariesFromVisibleTime(visibleTimeStart, visibleTimeEnd, buffer) {
      var zoom = visibleTimeEnd - visibleTimeStart;
      var canvasTimeStart = visibleTimeStart - zoom * (buffer - 1) / 2;
      var canvasTimeEnd = canvasTimeStart + zoom * buffer;
      return [canvasTimeStart, canvasTimeEnd];
    }
    function calculateScrollCanvas(visibleTimeStart, visibleTimeEnd, forceUpdateDimensions, items, groups, props, state) {
      var buffer = props.buffer;
      var oldCanvasTimeStart = state.canvasTimeStart;
      var oldCanvasTimeEnd = state.canvasTimeEnd;
      var oldZoom = state.visibleTimeEnd - state.visibleTimeStart;
      var newZoom = visibleTimeEnd - visibleTimeStart;
      var newState = {
        visibleTimeStart,
        visibleTimeEnd
        // Check if the current canvas covers the new times
      };
      var canKeepCanvas = newZoom === oldZoom && visibleTimeStart >= oldCanvasTimeStart + oldZoom * 0.5 && visibleTimeStart <= oldCanvasTimeEnd - oldZoom * 1.5 && visibleTimeEnd >= oldCanvasTimeStart + oldZoom * 1.5 && visibleTimeEnd <= oldCanvasTimeEnd - oldZoom * 0.5;
      if (!canKeepCanvas || forceUpdateDimensions) {
        var _getCanvasBoundariesF = getCanvasBoundariesFromVisibleTime(visibleTimeStart, visibleTimeEnd, buffer), _getCanvasBoundariesF2 = _slicedToArray(_getCanvasBoundariesF, 2), canvasTimeStart = _getCanvasBoundariesF2[0], canvasTimeEnd = _getCanvasBoundariesF2[1];
        newState.canvasTimeStart = canvasTimeStart;
        newState.canvasTimeEnd = canvasTimeEnd;
        var mergedState = _objectSpread({}, state, {}, newState);
        var canvasWidth = getCanvasWidth(mergedState.width, props.buffer);
        Object.assign(newState, stackTimelineItems(items, groups, canvasWidth, mergedState.canvasTimeStart, mergedState.canvasTimeEnd, props.keys, props.lineHeight, props.itemHeightRatio, props.stackItems, mergedState.draggingItem, mergedState.resizingItem, mergedState.dragTime, mergedState.resizingEdge, mergedState.resizeTime, mergedState.newGroupOrder));
      }
      return newState;
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/dom-helpers.js
var require_dom_helpers = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/dom-helpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getParentPosition = getParentPosition;
    exports.getSumScroll = getSumScroll;
    exports.getSumOffset = getSumOffset;
    function getParentPosition(element) {
      var xPosition = 0;
      var yPosition = 0;
      var first = true;
      while (element) {
        if (!element.offsetParent && element.tagName === "BODY" && element.scrollLeft === 0 && element.scrollTop === 0) {
          element = document.scrollingElement || element;
        }
        xPosition += element.offsetLeft - (first ? 0 : element.scrollLeft) + element.clientLeft;
        yPosition += element.offsetTop - (first ? 0 : element.scrollTop) + element.clientTop;
        element = element.offsetParent;
        first = false;
      }
      return {
        x: xPosition,
        y: yPosition
      };
    }
    function getSumScroll(node) {
      if (node === document.body) {
        return {
          scrollLeft: 0,
          scrollTop: 0
        };
      } else {
        var parent = getSumScroll(node.parentNode);
        return {
          scrollLeft: node.scrollLeft + parent.scrollLeft,
          scrollTop: node.scrollTop + parent.scrollTop
        };
      }
    }
    function getSumOffset(node) {
      if (node === document.body || !node.offsetParent) {
        return {
          offsetLeft: 0,
          offsetTop: 0
        };
      } else {
        var parent = getSumOffset(node.offsetParent);
        return {
          offsetLeft: node.offsetLeft + parent.offsetLeft,
          offsetTop: node.offsetTop + parent.offsetTop
        };
      }
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/styles.js
var require_styles = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/styles.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.rightResizeStyle = exports.leftResizeStyle = exports.selectedAndCanResizeRightAndDragRight = exports.selectedAndCanResizeRight = exports.selectedAndCanResizeLeftAndDragLeft = exports.selectedAndCanResizeLeft = exports.selectedAndCanMove = exports.selectedStyle = exports.overridableStyles = void 0;
    var overridableStyles = {
      fontSize: 12,
      color: "white",
      cursor: "pointer",
      background: "#2196f3",
      border: "1px solid #1a6fb3",
      zIndex: 80
    };
    exports.overridableStyles = overridableStyles;
    var selectedStyle = {
      background: "#ffc107",
      border: "1px solid #ff9800",
      zIndex: 82
    };
    exports.selectedStyle = selectedStyle;
    var selectedAndCanMove = {
      cursor: "move"
    };
    exports.selectedAndCanMove = selectedAndCanMove;
    var selectedAndCanResizeLeft = {
      borderLeftWidth: 3
    };
    exports.selectedAndCanResizeLeft = selectedAndCanResizeLeft;
    var selectedAndCanResizeLeftAndDragLeft = {
      cursor: "w-resize"
    };
    exports.selectedAndCanResizeLeftAndDragLeft = selectedAndCanResizeLeftAndDragLeft;
    var selectedAndCanResizeRight = {
      borderRightWidth: 3
    };
    exports.selectedAndCanResizeRight = selectedAndCanResizeRight;
    var selectedAndCanResizeRightAndDragRight = {
      cursor: "e-resize"
    };
    exports.selectedAndCanResizeRightAndDragRight = selectedAndCanResizeRightAndDragRight;
    var leftResizeStyle = {
      position: "absolute",
      width: 24,
      maxWidth: "20%",
      minWidth: 2,
      height: "100%",
      top: 0,
      left: 0,
      cursor: "pointer",
      zIndex: 88
    };
    exports.leftResizeStyle = leftResizeStyle;
    var rightResizeStyle = {
      position: "absolute",
      width: 24,
      maxWidth: "20%",
      minWidth: 2,
      height: "100%",
      top: 0,
      right: 0,
      cursor: "pointer",
      zIndex: 88
    };
    exports.rightResizeStyle = rightResizeStyle;
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/Item.js
var require_Item = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/Item.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = require_react();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _interactjs = _interopRequireDefault(require_interact_min());
    var _moment = _interopRequireDefault((init_moment(), __toCommonJS(moment_exports)));
    var _generic = require_generic();
    var _events = require_events();
    var _defaultItemRenderer = require_defaultItemRenderer();
    var _calendar = require_calendar();
    var _domHelpers = require_dom_helpers();
    var _styles = require_styles();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Item = function(_Component) {
      _inherits(Item2, _Component);
      function Item2(_props) {
        var _this;
        _classCallCheck(this, Item2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(Item2).call(this, _props));
        _defineProperty(_assertThisInitialized(_this), "onMouseDown", function(e) {
          if (!_this.state.interactMounted) {
            e.preventDefault();
            _this.startedClicking = true;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onMouseUp", function(e) {
          if (!_this.state.interactMounted && _this.startedClicking) {
            _this.startedClicking = false;
            _this.actualClick(e, "click");
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onTouchStart", function(e) {
          if (!_this.state.interactMounted) {
            e.preventDefault();
            _this.startedTouching = true;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onTouchEnd", function(e) {
          if (!_this.state.interactMounted && _this.startedTouching) {
            _this.startedTouching = false;
            _this.actualClick(e, "touch");
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleDoubleClick", function(e) {
          e.stopPropagation();
          if (_this.props.onItemDoubleClick) {
            _this.props.onItemDoubleClick(_this.itemId, e);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleContextMenu", function(e) {
          if (_this.props.onContextMenu) {
            e.preventDefault();
            e.stopPropagation();
            _this.props.onContextMenu(_this.itemId, e);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getItemRef", function(el) {
          return _this.item = el;
        });
        _defineProperty(_assertThisInitialized(_this), "getDragLeftRef", function(el) {
          return _this.dragLeft = el;
        });
        _defineProperty(_assertThisInitialized(_this), "getDragRightRef", function(el) {
          return _this.dragRight = el;
        });
        _defineProperty(_assertThisInitialized(_this), "getItemProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var classNames = "rct-item" + (_this.props.item.className ? " ".concat(_this.props.item.className) : "");
          return {
            key: _this.itemId,
            ref: _this.getItemRef,
            title: _this.itemDivTitle,
            className: classNames + " ".concat(props.className ? props.className : ""),
            onMouseDown: (0, _events.composeEvents)(_this.onMouseDown, props.onMouseDown),
            onMouseUp: (0, _events.composeEvents)(_this.onMouseUp, props.onMouseUp),
            onTouchStart: (0, _events.composeEvents)(_this.onTouchStart, props.onTouchStart),
            onTouchEnd: (0, _events.composeEvents)(_this.onTouchEnd, props.onTouchEnd),
            onDoubleClick: (0, _events.composeEvents)(_this.handleDoubleClick, props.onDoubleClick),
            onContextMenu: (0, _events.composeEvents)(_this.handleContextMenu, props.onContextMenu),
            style: Object.assign({}, _this.getItemStyle(props))
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getResizeProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var leftName = "rct-item-handler rct-item-handler-left rct-item-handler-resize-left";
          if (props.leftClassName) {
            leftName += " ".concat(props.leftClassName);
          }
          var rightName = "rct-item-handler rct-item-handler-right rct-item-handler-resize-right";
          if (props.rightClassName) {
            rightName += " ".concat(props.rightClassName);
          }
          return {
            left: {
              ref: _this.getDragLeftRef,
              className: leftName,
              style: Object.assign({}, _styles.leftResizeStyle, props.leftStyle)
            },
            right: {
              ref: _this.getDragRightRef,
              className: rightName,
              style: Object.assign({}, _styles.rightResizeStyle, props.rightStyle)
            }
          };
        });
        _this.cacheDataFromProps(_props);
        _this.state = {
          interactMounted: false,
          dragging: null,
          dragStart: null,
          preDragPosition: null,
          dragTime: null,
          dragGroupDelta: null,
          resizing: null,
          resizeEdge: null,
          resizeStart: null,
          resizeTime: null
        };
        return _this;
      }
      _createClass(Item2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps, nextState) {
          var shouldUpdate = nextState.dragging !== this.state.dragging || nextState.dragTime !== this.state.dragTime || nextState.dragGroupDelta !== this.state.dragGroupDelta || nextState.resizing !== this.state.resizing || nextState.resizeTime !== this.state.resizeTime || nextProps.keys !== this.props.keys || !(0, _generic.deepObjectCompare)(nextProps.itemProps, this.props.itemProps) || nextProps.selected !== this.props.selected || nextProps.item !== this.props.item || nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || (nextProps.order ? nextProps.order.index : void 0) !== (this.props.order ? this.props.order.index : void 0) || nextProps.dragSnap !== this.props.dragSnap || nextProps.minResizeWidth !== this.props.minResizeWidth || nextProps.canChangeGroup !== this.props.canChangeGroup || nextProps.canSelect !== this.props.canSelect || nextProps.canMove !== this.props.canMove || nextProps.canResizeLeft !== this.props.canResizeLeft || nextProps.canResizeRight !== this.props.canResizeRight || nextProps.dimensions !== this.props.dimensions;
          return shouldUpdate;
        }
      }, {
        key: "cacheDataFromProps",
        value: function cacheDataFromProps(props) {
          this.itemId = (0, _generic._get)(props.item, props.keys.itemIdKey);
          this.itemTitle = (0, _generic._get)(props.item, props.keys.itemTitleKey);
          this.itemDivTitle = props.keys.itemDivTitleKey ? (0, _generic._get)(props.item, props.keys.itemDivTitleKey) : this.itemTitle;
          this.itemTimeStart = (0, _generic._get)(props.item, props.keys.itemTimeStartKey);
          this.itemTimeEnd = (0, _generic._get)(props.item, props.keys.itemTimeEndKey);
        }
      }, {
        key: "getTimeRatio",
        value: function getTimeRatio() {
          var _this$props = this.props, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, canvasWidth = _this$props.canvasWidth;
          return (0, _calendar.coordinateToTimeRatio)(canvasTimeStart, canvasTimeEnd, canvasWidth);
        }
      }, {
        key: "dragTimeSnap",
        value: function dragTimeSnap(dragTime, considerOffset) {
          var dragSnap = this.props.dragSnap;
          if (dragSnap) {
            var offset2 = considerOffset ? (0, _moment["default"])().utcOffset() * 60 * 1e3 : 0;
            return Math.round(dragTime / dragSnap) * dragSnap - offset2 % dragSnap;
          } else {
            return dragTime;
          }
        }
      }, {
        key: "resizeTimeSnap",
        value: function resizeTimeSnap(dragTime) {
          var dragSnap = this.props.dragSnap;
          if (dragSnap) {
            var endTime = this.itemTimeEnd % dragSnap;
            return Math.round((dragTime - endTime) / dragSnap) * dragSnap + endTime;
          } else {
            return dragTime;
          }
        }
      }, {
        key: "dragTime",
        value: function dragTime(e) {
          var startTime = (0, _moment["default"])(this.itemTimeStart);
          if (this.state.dragging) {
            return this.dragTimeSnap(this.timeFor(e) + this.state.dragStart.offset, true);
          } else {
            return startTime;
          }
        }
      }, {
        key: "timeFor",
        value: function timeFor(e) {
          var ratio = (0, _calendar.coordinateToTimeRatio)(this.props.canvasTimeStart, this.props.canvasTimeEnd, this.props.canvasWidth);
          var offset2 = (0, _domHelpers.getSumOffset)(this.props.scrollRef).offsetLeft;
          var scrolls = (0, _domHelpers.getSumScroll)(this.props.scrollRef);
          return (e.pageX - offset2 + scrolls.scrollLeft) * ratio + this.props.canvasTimeStart;
        }
      }, {
        key: "dragGroupDelta",
        value: function dragGroupDelta(e) {
          var _this$props2 = this.props, groupTops = _this$props2.groupTops, order = _this$props2.order;
          if (this.state.dragging) {
            if (!this.props.canChangeGroup) {
              return 0;
            }
            var groupDelta = 0;
            var offset2 = (0, _domHelpers.getSumOffset)(this.props.scrollRef).offsetTop;
            var scrolls = (0, _domHelpers.getSumScroll)(this.props.scrollRef);
            for (var _i = 0, _Object$keys = Object.keys(groupTops); _i < _Object$keys.length; _i++) {
              var key = _Object$keys[_i];
              var groupTop = groupTops[key];
              if (e.pageY - offset2 + scrolls.scrollTop > groupTop) {
                groupDelta = parseInt(key, 10) - order.index;
              } else {
                break;
              }
            }
            if (this.props.order.index + groupDelta < 0) {
              return 0 - this.props.order.index;
            } else {
              return groupDelta;
            }
          } else {
            return 0;
          }
        }
      }, {
        key: "resizeTimeDelta",
        value: function resizeTimeDelta(e, resizeEdge) {
          var length = this.itemTimeEnd - this.itemTimeStart;
          var timeDelta = this.dragTimeSnap((e.pageX - this.state.resizeStart) * this.getTimeRatio());
          if (length + (resizeEdge === "left" ? -timeDelta : timeDelta) < (this.props.dragSnap || 1e3)) {
            if (resizeEdge === "left") {
              return length - (this.props.dragSnap || 1e3);
            } else {
              return (this.props.dragSnap || 1e3) - length;
            }
          } else {
            return timeDelta;
          }
        }
      }, {
        key: "mountInteract",
        value: function mountInteract() {
          var _this2 = this;
          var leftResize = this.props.useResizeHandle ? ".rct-item-handler-resize-left" : true;
          var rightResize = this.props.useResizeHandle ? ".rct-item-handler-resize-right" : true;
          (0, _interactjs["default"])(this.item).resizable({
            edges: {
              left: this.canResizeLeft() && leftResize,
              right: this.canResizeRight() && rightResize,
              top: false,
              bottom: false
            },
            enabled: this.props.selected && (this.canResizeLeft() || this.canResizeRight())
          }).draggable({
            enabled: this.props.selected && this.canMove()
          }).styleCursor(false).on("dragstart", function(e) {
            if (_this2.props.selected) {
              var clickTime = _this2.timeFor(e);
              _this2.setState({
                dragging: true,
                dragStart: {
                  x: e.pageX,
                  y: e.pageY,
                  offset: _this2.itemTimeStart - clickTime
                },
                preDragPosition: {
                  x: e.target.offsetLeft,
                  y: e.target.offsetTop
                },
                dragTime: _this2.itemTimeStart,
                dragGroupDelta: 0
              });
            } else {
              return false;
            }
          }).on("dragmove", function(e) {
            if (_this2.state.dragging) {
              var dragTime = _this2.dragTime(e);
              var dragGroupDelta = _this2.dragGroupDelta(e);
              if (_this2.props.moveResizeValidator) {
                dragTime = _this2.props.moveResizeValidator("move", _this2.props.item, dragTime);
              }
              if (_this2.props.onDrag) {
                _this2.props.onDrag(_this2.itemId, dragTime, _this2.props.order.index + dragGroupDelta);
              }
              _this2.setState({
                dragTime,
                dragGroupDelta
              });
            }
          }).on("dragend", function(e) {
            if (_this2.state.dragging) {
              if (_this2.props.onDrop) {
                var dragTime = _this2.dragTime(e);
                if (_this2.props.moveResizeValidator) {
                  dragTime = _this2.props.moveResizeValidator("move", _this2.props.item, dragTime);
                }
                _this2.props.onDrop(_this2.itemId, dragTime, _this2.props.order.index + _this2.dragGroupDelta(e));
              }
              _this2.setState({
                dragging: false,
                dragStart: null,
                preDragPosition: null,
                dragTime: null,
                dragGroupDelta: null
              });
            }
          }).on("resizestart", function(e) {
            if (_this2.props.selected) {
              _this2.setState({
                resizing: true,
                resizeEdge: null,
                // we don't know yet
                resizeStart: e.pageX,
                resizeTime: 0
              });
            } else {
              return false;
            }
          }).on("resizemove", function(e) {
            if (_this2.state.resizing) {
              var resizeEdge = _this2.state.resizeEdge;
              if (!resizeEdge) {
                resizeEdge = e.deltaRect.left !== 0 ? "left" : "right";
                _this2.setState({
                  resizeEdge
                });
              }
              var resizeTime = _this2.resizeTimeSnap(_this2.timeFor(e));
              if (_this2.props.moveResizeValidator) {
                resizeTime = _this2.props.moveResizeValidator("resize", _this2.props.item, resizeTime, resizeEdge);
              }
              if (_this2.props.onResizing) {
                _this2.props.onResizing(_this2.itemId, resizeTime, resizeEdge);
              }
              _this2.setState({
                resizeTime
              });
            }
          }).on("resizeend", function(e) {
            if (_this2.state.resizing) {
              var resizeEdge = _this2.state.resizeEdge;
              var resizeTime = _this2.resizeTimeSnap(_this2.timeFor(e));
              if (_this2.props.moveResizeValidator) {
                resizeTime = _this2.props.moveResizeValidator("resize", _this2.props.item, resizeTime, resizeEdge);
              }
              if (_this2.props.onResized) {
                _this2.props.onResized(_this2.itemId, resizeTime, resizeEdge, _this2.resizeTimeDelta(e, resizeEdge));
              }
              _this2.setState({
                resizing: null,
                resizeStart: null,
                resizeEdge: null,
                resizeTime: null
              });
            }
          }).on("tap", function(e) {
            _this2.actualClick(e, e.pointerType === "mouse" ? "click" : "touch");
          });
          this.setState({
            interactMounted: true
          });
        }
      }, {
        key: "canResizeLeft",
        value: function canResizeLeft() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          if (!props.canResizeLeft) {
            return false;
          }
          var width = parseInt(props.dimensions.width, 10);
          return width >= props.minResizeWidth;
        }
      }, {
        key: "canResizeRight",
        value: function canResizeRight() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          if (!props.canResizeRight) {
            return false;
          }
          var width = parseInt(props.dimensions.width, 10);
          return width >= props.minResizeWidth;
        }
      }, {
        key: "canMove",
        value: function canMove() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          return !!props.canMove;
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          this.cacheDataFromProps(this.props);
          var interactMounted = this.state.interactMounted;
          var couldDrag = prevProps.selected && this.canMove(prevProps);
          var couldResizeLeft = prevProps.selected && this.canResizeLeft(prevProps);
          var couldResizeRight = prevProps.selected && this.canResizeRight(prevProps);
          var willBeAbleToDrag = this.props.selected && this.canMove(this.props);
          var willBeAbleToResizeLeft = this.props.selected && this.canResizeLeft(this.props);
          var willBeAbleToResizeRight = this.props.selected && this.canResizeRight(this.props);
          if (!!this.item) {
            if (this.props.selected && !interactMounted) {
              this.mountInteract();
              interactMounted = true;
            }
            if (interactMounted && (couldResizeLeft !== willBeAbleToResizeLeft || couldResizeRight !== willBeAbleToResizeRight)) {
              var leftResize = this.props.useResizeHandle ? this.dragLeft : true;
              var rightResize = this.props.useResizeHandle ? this.dragRight : true;
              (0, _interactjs["default"])(this.item).resizable({
                enabled: willBeAbleToResizeLeft || willBeAbleToResizeRight,
                edges: {
                  top: false,
                  bottom: false,
                  left: willBeAbleToResizeLeft && leftResize,
                  right: willBeAbleToResizeRight && rightResize
                }
              });
            }
            if (interactMounted && couldDrag !== willBeAbleToDrag) {
              (0, _interactjs["default"])(this.item).draggable({
                enabled: willBeAbleToDrag
              });
            }
          } else {
            interactMounted = false;
          }
          this.setState({
            interactMounted
          });
        }
      }, {
        key: "actualClick",
        value: function actualClick(e, clickType) {
          if (this.props.canSelect && this.props.onSelect) {
            this.props.onSelect(this.itemId, clickType, e);
          }
        }
      }, {
        key: "getItemStyle",
        value: function getItemStyle(props) {
          var dimensions = this.props.dimensions;
          var baseStyles = {
            position: "absolute",
            boxSizing: "border-box",
            left: "".concat(dimensions.left, "px"),
            top: "".concat(dimensions.top, "px"),
            width: "".concat(dimensions.width, "px"),
            height: "".concat(dimensions.height, "px"),
            lineHeight: "".concat(dimensions.height, "px")
          };
          var finalStyle = Object.assign({}, _styles.overridableStyles, this.props.selected ? _styles.selectedStyle : {}, this.props.selected & this.canMove(this.props) ? _styles.selectedAndCanMove : {}, this.props.selected & this.canResizeLeft(this.props) ? _styles.selectedAndCanResizeLeft : {}, this.props.selected & this.canResizeLeft(this.props) & this.state.dragging ? _styles.selectedAndCanResizeLeftAndDragLeft : {}, this.props.selected & this.canResizeRight(this.props) ? _styles.selectedAndCanResizeRight : {}, this.props.selected & this.canResizeRight(this.props) & this.state.dragging ? _styles.selectedAndCanResizeRightAndDragRight : {}, props.style, baseStyles);
          return finalStyle;
        }
      }, {
        key: "render",
        value: function render() {
          if (typeof this.props.order === "undefined" || this.props.order === null) {
            return null;
          }
          var timelineContext = this.context.getTimelineContext();
          var itemContext = {
            dimensions: this.props.dimensions,
            useResizeHandle: this.props.useResizeHandle,
            title: this.itemTitle,
            canMove: this.canMove(this.props),
            canResizeLeft: this.canResizeLeft(this.props),
            canResizeRight: this.canResizeRight(this.props),
            selected: this.props.selected,
            dragging: this.state.dragging,
            dragStart: this.state.dragStart,
            dragTime: this.state.dragTime,
            dragGroupDelta: this.state.dragGroupDelta,
            resizing: this.state.resizing,
            resizeEdge: this.state.resizeEdge,
            resizeStart: this.state.resizeStart,
            resizeTime: this.state.resizeTime,
            width: this.props.dimensions.width
          };
          return this.props.itemRenderer({
            item: this.props.item,
            timelineContext,
            itemContext,
            getItemProps: this.getItemProps,
            getResizeProps: this.getResizeProps
          });
        }
      }]);
      return Item2;
    }(_react.Component);
    exports["default"] = Item;
    _defineProperty(Item, "propTypes", {
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      order: _propTypes["default"].object,
      dragSnap: _propTypes["default"].number,
      minResizeWidth: _propTypes["default"].number,
      selected: _propTypes["default"].bool,
      canChangeGroup: _propTypes["default"].bool.isRequired,
      canMove: _propTypes["default"].bool.isRequired,
      canResizeLeft: _propTypes["default"].bool.isRequired,
      canResizeRight: _propTypes["default"].bool.isRequired,
      keys: _propTypes["default"].object.isRequired,
      item: _propTypes["default"].object.isRequired,
      onSelect: _propTypes["default"].func,
      onDrag: _propTypes["default"].func,
      onDrop: _propTypes["default"].func,
      onResizing: _propTypes["default"].func,
      onResized: _propTypes["default"].func,
      onContextMenu: _propTypes["default"].func,
      itemRenderer: _propTypes["default"].func,
      itemProps: _propTypes["default"].object,
      canSelect: _propTypes["default"].bool,
      dimensions: _propTypes["default"].object,
      groupTops: _propTypes["default"].array,
      useResizeHandle: _propTypes["default"].bool,
      moveResizeValidator: _propTypes["default"].func,
      onItemDoubleClick: _propTypes["default"].func,
      scrollRef: _propTypes["default"].object
    });
    _defineProperty(Item, "defaultProps", {
      selected: false,
      itemRenderer: _defaultItemRenderer.defaultItemRenderer
    });
    _defineProperty(Item, "contextTypes", {
      getTimelineContext: _propTypes["default"].func
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/Items.js
var require_Items = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/Items.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _Item = _interopRequireDefault(require_Item());
    var _generic = require_generic();
    var _calendar = require_calendar();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var canResizeLeft = function canResizeLeft2(item, canResize) {
      var value = (0, _generic._get)(item, "canResize") !== void 0 ? (0, _generic._get)(item, "canResize") : canResize;
      return value === "left" || value === "both";
    };
    var canResizeRight = function canResizeRight2(item, canResize) {
      var value = (0, _generic._get)(item, "canResize") !== void 0 ? (0, _generic._get)(item, "canResize") : canResize;
      return value === "right" || value === "both" || value === true;
    };
    var Items = function(_Component) {
      _inherits(Items2, _Component);
      function Items2() {
        _classCallCheck(this, Items2);
        return _possibleConstructorReturn(this, _getPrototypeOf(Items2).apply(this, arguments));
      }
      _createClass(Items2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !((0, _generic.arraysEqual)(nextProps.groups, this.props.groups) && (0, _generic.arraysEqual)(nextProps.items, this.props.items) && (0, _generic.arraysEqual)(nextProps.dimensionItems, this.props.dimensionItems) && nextProps.keys === this.props.keys && nextProps.canvasTimeStart === this.props.canvasTimeStart && nextProps.canvasTimeEnd === this.props.canvasTimeEnd && nextProps.canvasWidth === this.props.canvasWidth && nextProps.selectedItem === this.props.selectedItem && nextProps.selected === this.props.selected && nextProps.dragSnap === this.props.dragSnap && nextProps.minResizeWidth === this.props.minResizeWidth && nextProps.canChangeGroup === this.props.canChangeGroup && nextProps.canMove === this.props.canMove && nextProps.canResize === this.props.canResize && nextProps.canSelect === this.props.canSelect);
        }
      }, {
        key: "isSelected",
        value: function isSelected(item, itemIdKey) {
          if (!this.props.selected) {
            return this.props.selectedItem === (0, _generic._get)(item, itemIdKey);
          } else {
            var target = (0, _generic._get)(item, itemIdKey);
            return this.props.selected.includes(target);
          }
        }
      }, {
        key: "getVisibleItems",
        value: function getVisibleItems(canvasTimeStart, canvasTimeEnd) {
          var _this$props = this.props, keys2 = _this$props.keys, items = _this$props.items;
          return (0, _calendar.getVisibleItems)(items, canvasTimeStart, canvasTimeEnd, keys2);
        }
      }, {
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props2 = this.props, canvasTimeStart = _this$props2.canvasTimeStart, canvasTimeEnd = _this$props2.canvasTimeEnd, dimensionItems = _this$props2.dimensionItems, keys2 = _this$props2.keys, groups = _this$props2.groups;
          var itemIdKey = keys2.itemIdKey, itemGroupKey = keys2.itemGroupKey;
          var groupOrders = (0, _calendar.getGroupOrders)(groups, keys2);
          var visibleItems = this.getVisibleItems(canvasTimeStart, canvasTimeEnd, groupOrders);
          var sortedDimensionItems = (0, _generic.keyBy)(dimensionItems, "id");
          return _react["default"].createElement("div", {
            className: "rct-items"
          }, visibleItems.filter(function(item) {
            return sortedDimensionItems[(0, _generic._get)(item, itemIdKey)];
          }).map(function(item) {
            return _react["default"].createElement(_Item["default"], {
              key: (0, _generic._get)(item, itemIdKey),
              item,
              keys: _this.props.keys,
              order: groupOrders[(0, _generic._get)(item, itemGroupKey)],
              dimensions: sortedDimensionItems[(0, _generic._get)(item, itemIdKey)].dimensions,
              selected: _this.isSelected(item, itemIdKey),
              canChangeGroup: (0, _generic._get)(item, "canChangeGroup") !== void 0 ? (0, _generic._get)(item, "canChangeGroup") : _this.props.canChangeGroup,
              canMove: (0, _generic._get)(item, "canMove") !== void 0 ? (0, _generic._get)(item, "canMove") : _this.props.canMove,
              canResizeLeft: canResizeLeft(item, _this.props.canResize),
              canResizeRight: canResizeRight(item, _this.props.canResize),
              canSelect: (0, _generic._get)(item, "canSelect") !== void 0 ? (0, _generic._get)(item, "canSelect") : _this.props.canSelect,
              useResizeHandle: _this.props.useResizeHandle,
              groupTops: _this.props.groupTops,
              canvasTimeStart: _this.props.canvasTimeStart,
              canvasTimeEnd: _this.props.canvasTimeEnd,
              canvasWidth: _this.props.canvasWidth,
              dragSnap: _this.props.dragSnap,
              minResizeWidth: _this.props.minResizeWidth,
              onResizing: _this.props.itemResizing,
              onResized: _this.props.itemResized,
              moveResizeValidator: _this.props.moveResizeValidator,
              onDrag: _this.props.itemDrag,
              onDrop: _this.props.itemDrop,
              onItemDoubleClick: _this.props.onItemDoubleClick,
              onContextMenu: _this.props.onItemContextMenu,
              onSelect: _this.props.itemSelect,
              itemRenderer: _this.props.itemRenderer,
              scrollRef: _this.props.scrollRef
            });
          }));
        }
      }]);
      return Items2;
    }(_react.Component);
    exports["default"] = Items;
    _defineProperty(Items, "propTypes", {
      groups: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      items: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      dragSnap: _propTypes["default"].number,
      minResizeWidth: _propTypes["default"].number,
      selectedItem: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
      canChangeGroup: _propTypes["default"].bool.isRequired,
      canMove: _propTypes["default"].bool.isRequired,
      canResize: _propTypes["default"].oneOf([true, false, "left", "right", "both"]),
      canSelect: _propTypes["default"].bool,
      keys: _propTypes["default"].object.isRequired,
      moveResizeValidator: _propTypes["default"].func,
      itemSelect: _propTypes["default"].func,
      itemDrag: _propTypes["default"].func,
      itemDrop: _propTypes["default"].func,
      itemResizing: _propTypes["default"].func,
      itemResized: _propTypes["default"].func,
      onItemDoubleClick: _propTypes["default"].func,
      onItemContextMenu: _propTypes["default"].func,
      itemRenderer: _propTypes["default"].func,
      selected: _propTypes["default"].array,
      dimensionItems: _propTypes["default"].array,
      groupTops: _propTypes["default"].array,
      useResizeHandle: _propTypes["default"].bool,
      scrollRef: _propTypes["default"].object
    });
    _defineProperty(Items, "defaultProps", {
      selected: []
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/layout/Sidebar.js
var require_Sidebar = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/layout/Sidebar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _generic = require_generic();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Sidebar = function(_Component) {
      _inherits(Sidebar2, _Component);
      function Sidebar2() {
        _classCallCheck(this, Sidebar2);
        return _possibleConstructorReturn(this, _getPrototypeOf(Sidebar2).apply(this, arguments));
      }
      _createClass(Sidebar2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !(nextProps.keys === this.props.keys && nextProps.width === this.props.width && nextProps.height === this.props.height && (0, _generic.arraysEqual)(nextProps.groups, this.props.groups) && (0, _generic.arraysEqual)(nextProps.groupHeights, this.props.groupHeights));
        }
      }, {
        key: "renderGroupContent",
        value: function renderGroupContent(group, isRightSidebar, groupTitleKey, groupRightTitleKey) {
          if (this.props.groupRenderer) {
            return _react["default"].createElement(this.props.groupRenderer, {
              group,
              isRightSidebar
            });
          } else {
            return (0, _generic._get)(group, isRightSidebar ? groupRightTitleKey : groupTitleKey);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props = this.props, width = _this$props.width, groupHeights = _this$props.groupHeights, height = _this$props.height, isRightSidebar = _this$props.isRightSidebar;
          var _this$props$keys = this.props.keys, groupIdKey = _this$props$keys.groupIdKey, groupTitleKey = _this$props$keys.groupTitleKey, groupRightTitleKey = _this$props$keys.groupRightTitleKey;
          var sidebarStyle = {
            width: "".concat(width, "px"),
            height: "".concat(height, "px")
          };
          var groupsStyle = {
            width: "".concat(width, "px")
          };
          var groupLines = this.props.groups.map(function(group, index) {
            var elementStyle = {
              height: "".concat(groupHeights[index], "px"),
              lineHeight: "".concat(groupHeights[index], "px")
            };
            return _react["default"].createElement("div", {
              key: (0, _generic._get)(group, groupIdKey),
              className: "rct-sidebar-row rct-sidebar-row-" + (index % 2 === 0 ? "even" : "odd"),
              style: elementStyle
            }, _this.renderGroupContent(group, isRightSidebar, groupTitleKey, groupRightTitleKey));
          });
          return _react["default"].createElement("div", {
            className: "rct-sidebar" + (isRightSidebar ? " rct-sidebar-right" : ""),
            style: sidebarStyle
          }, _react["default"].createElement("div", {
            style: groupsStyle
          }, groupLines));
        }
      }]);
      return Sidebar2;
    }(_react.Component);
    exports["default"] = Sidebar;
    _defineProperty(Sidebar, "propTypes", {
      groups: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      width: _propTypes["default"].number.isRequired,
      height: _propTypes["default"].number.isRequired,
      groupHeights: _propTypes["default"].array.isRequired,
      keys: _propTypes["default"].object.isRequired,
      groupRenderer: _propTypes["default"].func,
      isRightSidebar: _propTypes["default"].bool
    });
  }
});

// node_modules/gud/index.js
var require_gud = __commonJS({
  "node_modules/gud/index.js"(exports, module2) {
    "use strict";
    var key = "__global_unique_id__";
    module2.exports = function() {
      return global[key] = (global[key] || 0) + 1;
    };
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module2) {
    "use strict";
    var __DEV__ = true;
    var warning = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format2, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format2.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning = function(condition, format2, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format2 === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format2].concat(args));
        }
      };
    }
    var printWarning;
    module2.exports = warning;
  }
});

// node_modules/react-calendar-timeline/node_modules/create-react-context/lib/implementation.js
var require_implementation = __commonJS({
  "node_modules/react-calendar-timeline/node_modules/create-react-context/lib/implementation.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _gud = require_gud();
    var _gud2 = _interopRequireDefault(_gud);
    var _warning = require_warning();
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    function objectIs(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }
    function createEventEmitter(value) {
      var handlers = [];
      return {
        on: function on(handler) {
          handlers.push(handler);
        },
        off: function off(handler) {
          handlers = handlers.filter(function(h) {
            return h !== handler;
          });
        },
        get: function get2() {
          return value;
        },
        set: function set2(newValue, changedBits) {
          value = newValue;
          handlers.forEach(function(handler) {
            return handler(value, changedBits);
          });
        }
      };
    }
    function onlyChild(children) {
      return Array.isArray(children) ? children[0] : children;
    }
    function createReactContext(defaultValue, calculateChangedBits) {
      var _Provider$childContex, _Consumer$contextType;
      var contextProp = "__create-react-context-" + (0, _gud2.default)() + "__";
      var Provider = function(_Component) {
        _inherits(Provider2, _Component);
        function Provider2() {
          var _temp, _this, _ret;
          _classCallCheck(this, Provider2);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
        }
        Provider2.prototype.getChildContext = function getChildContext() {
          var _ref;
          return _ref = {}, _ref[contextProp] = this.emitter, _ref;
        };
        Provider2.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          if (this.props.value !== nextProps.value) {
            var oldValue = this.props.value;
            var newValue = nextProps.value;
            var changedBits = void 0;
            if (objectIs(oldValue, newValue)) {
              changedBits = 0;
            } else {
              changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              if (true) {
                (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, "calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
              }
              changedBits |= 0;
              if (changedBits !== 0) {
                this.emitter.set(nextProps.value, changedBits);
              }
            }
          }
        };
        Provider2.prototype.render = function render() {
          return this.props.children;
        };
        return Provider2;
      }(_react.Component);
      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);
      var Consumer = function(_Component2) {
        _inherits(Consumer2, _Component2);
        function Consumer2() {
          var _temp2, _this2, _ret2;
          _classCallCheck(this, Consumer2);
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
            value: _this2.getValue()
          }, _this2.onUpdate = function(newValue, changedBits) {
            var observedBits = _this2.observedBits | 0;
            if ((observedBits & changedBits) !== 0) {
              _this2.setState({ value: _this2.getValue() });
            }
          }, _temp2), _possibleConstructorReturn(_this2, _ret2);
        }
        Consumer2.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var observedBits = nextProps.observedBits;
          this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer2.prototype.componentDidMount = function componentDidMount() {
          if (this.context[contextProp]) {
            this.context[contextProp].on(this.onUpdate);
          }
          var observedBits = this.props.observedBits;
          this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer2.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.context[contextProp]) {
            this.context[contextProp].off(this.onUpdate);
          }
        };
        Consumer2.prototype.getValue = function getValue() {
          if (this.context[contextProp]) {
            return this.context[contextProp].get();
          } else {
            return defaultValue;
          }
        };
        Consumer2.prototype.render = function render() {
          return onlyChild(this.props.children)(this.state.value);
        };
        return Consumer2;
      }(_react.Component);
      Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);
      return {
        Provider,
        Consumer
      };
    }
    exports.default = createReactContext;
    module2.exports = exports["default"];
  }
});

// node_modules/react-calendar-timeline/node_modules/create-react-context/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-calendar-timeline/node_modules/create-react-context/lib/index.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _implementation = require_implementation();
    var _implementation2 = _interopRequireDefault(_implementation);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _react2.default.createContext || _implementation2.default;
    module2.exports = exports["default"];
  }
});

// node_modules/react-calendar-timeline/lib/lib/timeline/TimelineStateContext.js
var require_TimelineStateContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/timeline/TimelineStateContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineStateConsumer = exports.TimelineStateProvider = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _createReactContext2 = _interopRequireDefault(require_lib());
    var _calendar = require_calendar();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultContextState = {
      getTimelineState: function getTimelineState() {
        console.warn('"getTimelineState" default func is being used');
      },
      getLeftOffsetFromDate: function getLeftOffsetFromDate() {
        console.warn('"getLeftOffsetFromDate" default func is being used');
      },
      getDateFromLeftOffsetPosition: function getDateFromLeftOffsetPosition() {
        console.warn('"getDateFromLeftOffsetPosition" default func is being used');
      },
      showPeriod: function showPeriod() {
        console.warn('"showPeriod" default func is being used');
      }
      /* eslint-enable */
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var TimelineStateProvider = function(_React$Component) {
      _inherits(TimelineStateProvider2, _React$Component);
      function TimelineStateProvider2(props) {
        var _this;
        _classCallCheck(this, TimelineStateProvider2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(TimelineStateProvider2).call(this, props));
        _defineProperty(_assertThisInitialized(_this), "getTimelineState", function() {
          var _this$props = _this.props, visibleTimeStart = _this$props.visibleTimeStart, visibleTimeEnd = _this$props.visibleTimeEnd, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, canvasWidth = _this$props.canvasWidth, timelineUnit = _this$props.timelineUnit, timelineWidth = _this$props.timelineWidth;
          return {
            visibleTimeStart,
            visibleTimeEnd,
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            timelineUnit,
            timelineWidth
            // REVIEW,
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getLeftOffsetFromDate", function(date) {
          var _this$props2 = _this.props, canvasTimeStart = _this$props2.canvasTimeStart, canvasTimeEnd = _this$props2.canvasTimeEnd, canvasWidth = _this$props2.canvasWidth;
          return (0, _calendar.calculateXPositionForTime)(canvasTimeStart, canvasTimeEnd, canvasWidth, date);
        });
        _defineProperty(_assertThisInitialized(_this), "getDateFromLeftOffsetPosition", function(leftOffset) {
          var _this$props3 = _this.props, canvasTimeStart = _this$props3.canvasTimeStart, canvasTimeEnd = _this$props3.canvasTimeEnd, canvasWidth = _this$props3.canvasWidth;
          return (0, _calendar.calculateTimeForXPosition)(canvasTimeStart, canvasTimeEnd, canvasWidth, leftOffset);
        });
        _this.state = {
          timelineContext: {
            getTimelineState: _this.getTimelineState,
            getLeftOffsetFromDate: _this.getLeftOffsetFromDate,
            getDateFromLeftOffsetPosition: _this.getDateFromLeftOffsetPosition,
            showPeriod: _this.props.showPeriod
          }
        };
        return _this;
      }
      _createClass(TimelineStateProvider2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(Provider, {
            value: this.state.timelineContext
          }, this.props.children);
        }
      }]);
      return TimelineStateProvider2;
    }(_react["default"].Component);
    exports.TimelineStateProvider = TimelineStateProvider;
    _defineProperty(TimelineStateProvider, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      visibleTimeStart: _propTypes["default"].number.isRequired,
      visibleTimeEnd: _propTypes["default"].number.isRequired,
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      showPeriod: _propTypes["default"].func.isRequired,
      timelineUnit: _propTypes["default"].string.isRequired,
      timelineWidth: _propTypes["default"].number.isRequired
    });
    var TimelineStateConsumer = Consumer;
    exports.TimelineStateConsumer = TimelineStateConsumer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/columns/Columns.js
var require_Columns = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/columns/Columns.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _calendar = require_calendar();
    var _TimelineStateContext = require_TimelineStateContext();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var passThroughPropTypes = {
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      lineCount: _propTypes["default"].number.isRequired,
      minUnit: _propTypes["default"].string.isRequired,
      timeSteps: _propTypes["default"].object.isRequired,
      height: _propTypes["default"].number.isRequired,
      verticalLineClassNamesForTime: _propTypes["default"].func
    };
    var Columns = function(_Component) {
      _inherits(Columns2, _Component);
      function Columns2() {
        _classCallCheck(this, Columns2);
        return _possibleConstructorReturn(this, _getPrototypeOf(Columns2).apply(this, arguments));
      }
      _createClass(Columns2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !(nextProps.canvasTimeStart === this.props.canvasTimeStart && nextProps.canvasTimeEnd === this.props.canvasTimeEnd && nextProps.canvasWidth === this.props.canvasWidth && nextProps.lineCount === this.props.lineCount && nextProps.minUnit === this.props.minUnit && nextProps.timeSteps === this.props.timeSteps && nextProps.height === this.props.height && nextProps.verticalLineClassNamesForTime === this.props.verticalLineClassNamesForTime);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, canvasWidth = _this$props.canvasWidth, minUnit = _this$props.minUnit, timeSteps = _this$props.timeSteps, height = _this$props.height, verticalLineClassNamesForTime = _this$props.verticalLineClassNamesForTime, getLeftOffsetFromDate = _this$props.getLeftOffsetFromDate;
          var ratio = canvasWidth / (canvasTimeEnd - canvasTimeStart);
          var lines = [];
          (0, _calendar.iterateTimes)(canvasTimeStart, canvasTimeEnd, minUnit, timeSteps, function(time, nextTime) {
            var minUnitValue = time.get(minUnit === "day" ? "date" : minUnit);
            var firstOfType = minUnitValue === (minUnit === "day" ? 1 : 0);
            var classNamesForTime = [];
            if (verticalLineClassNamesForTime) {
              classNamesForTime = verticalLineClassNamesForTime(
                time.unix() * 1e3,
                // turn into ms, which is what verticalLineClassNamesForTime expects
                nextTime.unix() * 1e3 - 1
              );
            }
            var classNames = "rct-vl" + (firstOfType ? " rct-vl-first" : "") + (minUnit === "day" || minUnit === "hour" || minUnit === "minute" ? " rct-day-".concat(time.day(), " ") : " ") + classNamesForTime.join(" ");
            var left = getLeftOffsetFromDate(time.valueOf());
            var right = getLeftOffsetFromDate(nextTime.valueOf());
            lines.push(_react["default"].createElement("div", {
              key: "line-".concat(time.valueOf()),
              className: classNames,
              style: {
                pointerEvents: "none",
                top: "0px",
                left: "".concat(left, "px"),
                width: "".concat(right - left, "px"),
                height: "".concat(height, "px")
              }
            }));
          });
          return _react["default"].createElement("div", {
            className: "rct-vertical-lines"
          }, lines);
        }
      }]);
      return Columns2;
    }(_react.Component);
    _defineProperty(Columns, "propTypes", _objectSpread({}, passThroughPropTypes, {
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired
    }));
    var ColumnsWrapper = function ColumnsWrapper2(_ref) {
      var props = _extends({}, _ref);
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref2) {
        var getLeftOffsetFromDate = _ref2.getLeftOffsetFromDate;
        return _react["default"].createElement(Columns, _extends({
          getLeftOffsetFromDate
        }, props));
      });
    };
    ColumnsWrapper.defaultProps = _objectSpread({}, passThroughPropTypes);
    var _default = ColumnsWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/interaction/PreventClickOnDrag.js
var require_PreventClickOnDrag = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/interaction/PreventClickOnDrag.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var PreventClickOnDrag = function(_Component) {
      _inherits(PreventClickOnDrag2, _Component);
      function PreventClickOnDrag2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, PreventClickOnDrag2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PreventClickOnDrag2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "handleMouseDown", function(evt) {
          _this.originClickX = evt.clientX;
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseUp", function(evt) {
          if (Math.abs(_this.originClickX - evt.clientX) > _this.props.clickTolerance) {
            _this.cancelClick = true;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleClick", function(evt) {
          if (!_this.cancelClick) {
            _this.props.onClick(evt);
          }
          _this.cancelClick = false;
          _this.originClickX = null;
        });
        return _this;
      }
      _createClass(PreventClickOnDrag2, [{
        key: "render",
        value: function render() {
          var childElement = _react["default"].Children.only(this.props.children);
          return _react["default"].cloneElement(childElement, {
            onMouseDown: this.handleMouseDown,
            onMouseUp: this.handleMouseUp,
            onClick: this.handleClick
          });
        }
      }]);
      return PreventClickOnDrag2;
    }(_react.Component);
    _defineProperty(PreventClickOnDrag, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      onClick: _propTypes["default"].func.isRequired,
      clickTolerance: _propTypes["default"].number.isRequired
    });
    var _default = PreventClickOnDrag;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/row/GroupRow.js
var require_GroupRow = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/row/GroupRow.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _PreventClickOnDrag = _interopRequireDefault(require_PreventClickOnDrag());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var GroupRow = function(_Component) {
      _inherits(GroupRow2, _Component);
      function GroupRow2() {
        _classCallCheck(this, GroupRow2);
        return _possibleConstructorReturn(this, _getPrototypeOf(GroupRow2).apply(this, arguments));
      }
      _createClass(GroupRow2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, onContextMenu = _this$props.onContextMenu, onDoubleClick = _this$props.onDoubleClick, isEvenRow = _this$props.isEvenRow, style = _this$props.style, onClick = _this$props.onClick, clickTolerance = _this$props.clickTolerance, horizontalLineClassNamesForGroup = _this$props.horizontalLineClassNamesForGroup, group = _this$props.group;
          var classNamesForGroup = [];
          if (horizontalLineClassNamesForGroup) {
            classNamesForGroup = horizontalLineClassNamesForGroup(group);
          }
          return _react["default"].createElement(_PreventClickOnDrag["default"], {
            clickTolerance,
            onClick
          }, _react["default"].createElement("div", {
            onContextMenu,
            onDoubleClick,
            className: (isEvenRow ? "rct-hl-even " : "rct-hl-odd ") + (classNamesForGroup ? classNamesForGroup.join(" ") : ""),
            style
          }));
        }
      }]);
      return GroupRow2;
    }(_react.Component);
    _defineProperty(GroupRow, "propTypes", {
      onClick: _propTypes["default"].func.isRequired,
      onDoubleClick: _propTypes["default"].func.isRequired,
      onContextMenu: _propTypes["default"].func.isRequired,
      isEvenRow: _propTypes["default"].bool.isRequired,
      style: _propTypes["default"].object.isRequired,
      clickTolerance: _propTypes["default"].number.isRequired,
      group: _propTypes["default"].object.isRequired,
      horizontalLineClassNamesForGroup: _propTypes["default"].func
    });
    var _default = GroupRow;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/row/GroupRows.js
var require_GroupRows = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/row/GroupRows.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _GroupRow = _interopRequireDefault(require_GroupRow());
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var GroupRows = function(_Component) {
      _inherits(GroupRows2, _Component);
      function GroupRows2() {
        _classCallCheck(this, GroupRows2);
        return _possibleConstructorReturn(this, _getPrototypeOf(GroupRows2).apply(this, arguments));
      }
      _createClass(GroupRows2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !(nextProps.canvasWidth === this.props.canvasWidth && nextProps.lineCount === this.props.lineCount && nextProps.groupHeights === this.props.groupHeights && nextProps.groups === this.props.groups);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, canvasWidth = _this$props.canvasWidth, lineCount = _this$props.lineCount, groupHeights = _this$props.groupHeights, onRowClick = _this$props.onRowClick, onRowDoubleClick = _this$props.onRowDoubleClick, clickTolerance = _this$props.clickTolerance, groups = _this$props.groups, horizontalLineClassNamesForGroup = _this$props.horizontalLineClassNamesForGroup, onRowContextClick = _this$props.onRowContextClick;
          var lines = [];
          var _loop = function _loop2(i2) {
            lines.push(_react["default"].createElement(_GroupRow["default"], {
              clickTolerance,
              onContextMenu: function onContextMenu(evt) {
                return onRowContextClick(evt, i2);
              },
              onClick: function onClick(evt) {
                return onRowClick(evt, i2);
              },
              onDoubleClick: function onDoubleClick(evt) {
                return onRowDoubleClick(evt, i2);
              },
              key: "horizontal-line-".concat(i2),
              isEvenRow: i2 % 2 === 0,
              group: groups[i2],
              horizontalLineClassNamesForGroup,
              style: {
                width: "".concat(canvasWidth, "px"),
                height: "".concat(groupHeights[i2], "px")
              }
            }));
          };
          for (var i = 0; i < lineCount; i++) {
            _loop(i);
          }
          return _react["default"].createElement("div", {
            className: "rct-horizontal-lines"
          }, lines);
        }
      }]);
      return GroupRows2;
    }(_react.Component);
    exports["default"] = GroupRows;
    _defineProperty(GroupRows, "propTypes", {
      canvasWidth: _propTypes["default"].number.isRequired,
      lineCount: _propTypes["default"].number.isRequired,
      groupHeights: _propTypes["default"].array.isRequired,
      onRowClick: _propTypes["default"].func.isRequired,
      onRowDoubleClick: _propTypes["default"].func.isRequired,
      clickTolerance: _propTypes["default"].number.isRequired,
      groups: _propTypes["default"].array.isRequired,
      horizontalLineClassNamesForGroup: _propTypes["default"].func,
      onRowContextClick: _propTypes["default"].func.isRequired
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/scroll/ScrollElement.js
var require_ScrollElement = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/scroll/ScrollElement.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _domHelpers = require_dom_helpers();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var ScrollElement = function(_Component) {
      _inherits(ScrollElement2, _Component);
      function ScrollElement2() {
        var _this;
        _classCallCheck(this, ScrollElement2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollElement2).call(this));
        _defineProperty(_assertThisInitialized(_this), "handleScroll", function() {
          var scrollX = _this.scrollComponent.scrollLeft;
          _this.props.onScroll(scrollX);
        });
        _defineProperty(_assertThisInitialized(_this), "refHandler", function(el) {
          _this.scrollComponent = el;
          _this.props.scrollRef(el);
          if (el) {
            el.addEventListener("wheel", _this.handleWheel, {
              passive: false
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleWheel", function(e) {
          var traditionalZoom = _this.props.traditionalZoom;
          if (e.ctrlKey || e.metaKey || e.altKey) {
            e.preventDefault();
            var parentPosition = (0, _domHelpers.getParentPosition)(e.currentTarget);
            var xPosition = e.clientX - parentPosition.x;
            var speed = e.ctrlKey ? 10 : e.metaKey ? 3 : 1;
            _this.props.onWheelZoom(speed, xPosition, e.deltaY);
          } else if (e.shiftKey) {
            e.preventDefault();
            _this.props.onScroll(_this.scrollComponent.scrollLeft + (e.deltaY || e.deltaX));
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseDown", function(e) {
          if (e.button === 0) {
            _this.dragStartPosition = e.pageX;
            _this.dragLastPosition = e.pageX;
            _this.setState({
              isDragging: true
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseMove", function(e) {
          if (_this.state.isDragging && !_this.props.isInteractingWithItem) {
            _this.props.onScroll(_this.scrollComponent.scrollLeft + _this.dragLastPosition - e.pageX);
            _this.dragLastPosition = e.pageX;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseUp", function() {
          _this.dragStartPosition = null;
          _this.dragLastPosition = null;
          _this.setState({
            isDragging: false
          });
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseLeave", function() {
          _this.dragStartPosition = null;
          _this.dragLastPosition = null;
          _this.setState({
            isDragging: false
          });
        });
        _defineProperty(_assertThisInitialized(_this), "handleTouchStart", function(e) {
          if (e.touches.length === 2) {
            e.preventDefault();
            _this.lastTouchDistance = Math.abs(e.touches[0].screenX - e.touches[1].screenX);
            _this.singleTouchStart = null;
            _this.lastSingleTouch = null;
          } else if (e.touches.length === 1) {
            e.preventDefault();
            var x = e.touches[0].clientX;
            var y = e.touches[0].clientY;
            _this.lastTouchDistance = null;
            _this.singleTouchStart = {
              x,
              y,
              screenY: window.pageYOffset
            };
            _this.lastSingleTouch = {
              x,
              y,
              screenY: window.pageYOffset
            };
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleTouchMove", function(e) {
          var _this$props = _this.props, isInteractingWithItem = _this$props.isInteractingWithItem, width = _this$props.width, onZoom = _this$props.onZoom;
          if (isInteractingWithItem) {
            e.preventDefault();
            return;
          }
          if (_this.lastTouchDistance && e.touches.length === 2) {
            e.preventDefault();
            var touchDistance = Math.abs(e.touches[0].screenX - e.touches[1].screenX);
            var parentPosition = (0, _domHelpers.getParentPosition)(e.currentTarget);
            var xPosition = (e.touches[0].screenX + e.touches[1].screenX) / 2 - parentPosition.x;
            if (touchDistance !== 0 && _this.lastTouchDistance !== 0) {
              onZoom(_this.lastTouchDistance / touchDistance, xPosition / width);
              _this.lastTouchDistance = touchDistance;
            }
          } else if (_this.lastSingleTouch && e.touches.length === 1) {
            e.preventDefault();
            var x = e.touches[0].clientX;
            var y = e.touches[0].clientY;
            var deltaX = x - _this.lastSingleTouch.x;
            var deltaX0 = x - _this.singleTouchStart.x;
            var deltaY0 = y - _this.singleTouchStart.y;
            _this.lastSingleTouch = {
              x,
              y
            };
            var moveX = Math.abs(deltaX0) * 3 > Math.abs(deltaY0);
            var moveY = Math.abs(deltaY0) * 3 > Math.abs(deltaX0);
            if (deltaX !== 0 && moveX) {
              _this.props.onScroll(_this.scrollComponent.scrollLeft - deltaX);
            }
            if (moveY) {
              window.scrollTo(window.pageXOffset, _this.singleTouchStart.screenY - deltaY0);
            }
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleTouchEnd", function() {
          if (_this.lastTouchDistance) {
            _this.lastTouchDistance = null;
          }
          if (_this.lastSingleTouch) {
            _this.lastSingleTouch = null;
            _this.singleTouchStart = null;
          }
        });
        _this.state = {
          isDragging: false
        };
        return _this;
      }
      _createClass(ScrollElement2, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.scrollComponent) {
            this.scrollComponent.removeEventListener("wheel", this.handleWheel);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props, width = _this$props2.width, height = _this$props2.height, children = _this$props2.children;
          var isDragging = this.state.isDragging;
          var scrollComponentStyle = {
            width: "".concat(width, "px"),
            height: "".concat(height + 20, "px"),
            //20px to push the scroll element down off screen...?
            cursor: isDragging ? "move" : "default",
            position: "relative"
          };
          return _react["default"].createElement("div", {
            ref: this.refHandler,
            className: "rct-scroll",
            style: scrollComponentStyle,
            onMouseDown: this.handleMouseDown,
            onMouseMove: this.handleMouseMove,
            onMouseUp: this.handleMouseUp,
            onMouseLeave: this.handleMouseLeave,
            onTouchStart: this.handleTouchStart,
            onTouchMove: this.handleTouchMove,
            onTouchEnd: this.handleTouchEnd,
            onScroll: this.handleScroll
          }, children);
        }
      }]);
      return ScrollElement2;
    }(_react.Component);
    _defineProperty(ScrollElement, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      width: _propTypes["default"].number.isRequired,
      height: _propTypes["default"].number.isRequired,
      traditionalZoom: _propTypes["default"].bool.isRequired,
      scrollRef: _propTypes["default"].func.isRequired,
      isInteractingWithItem: _propTypes["default"].bool.isRequired,
      onZoom: _propTypes["default"].func.isRequired,
      onWheelZoom: _propTypes["default"].func.isRequired,
      onScroll: _propTypes["default"].func.isRequired
    });
    var _default = ScrollElement;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvasContext.js
var require_MarkerCanvasContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvasContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MarkerCanvasConsumer = exports.MarkerCanvasProvider = void 0;
    var _createReactContext2 = _interopRequireDefault(require_lib());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var defaultContextState = {
      subscribeToMouseOver: function subscribeToMouseOver() {
        console.warn('"subscribeToMouseOver" default func is being used');
      }
      /* eslint-enable */
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var MarkerCanvasProvider = Provider;
    exports.MarkerCanvasProvider = MarkerCanvasProvider;
    var MarkerCanvasConsumer = Consumer;
    exports.MarkerCanvasConsumer = MarkerCanvasConsumer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersContext.js
var require_TimelineMarkersContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineMarkersConsumer = exports.TimelineMarkersProvider = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _createReactContext2 = _interopRequireDefault(require_lib());
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    }
    function _iterableToArray(iter) {
      if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      }
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultContextState = {
      markers: [],
      subscribeMarker: function subscribeMarker() {
        console.warn("default subscribe marker used");
        return _generic.noop;
      }
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var _id = 0;
    var createId = function createId2() {
      _id += 1;
      return _id + 1;
    };
    var TimelineMarkersProvider = function(_React$Component) {
      _inherits(TimelineMarkersProvider2, _React$Component);
      function TimelineMarkersProvider2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, TimelineMarkersProvider2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimelineMarkersProvider2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "handleSubscribeToMarker", function(newMarker) {
          newMarker = _objectSpread({}, newMarker, {
            // REVIEW: in the event that we accept id to be passed to the Marker components, this line would override those
            id: createId()
          });
          _this.setState(function(state) {
            return {
              markers: [].concat(_toConsumableArray(state.markers), [newMarker])
            };
          });
          return {
            unsubscribe: function unsubscribe() {
              _this.setState(function(state) {
                return {
                  markers: state.markers.filter(function(marker) {
                    return marker.id !== newMarker.id;
                  })
                };
              });
            },
            getMarker: function getMarker() {
              return newMarker;
            }
          };
        });
        _defineProperty(_assertThisInitialized(_this), "handleUpdateMarker", function(updateMarker) {
          var markerIndex = _this.state.markers.findIndex(function(marker) {
            return marker.id === updateMarker.id;
          });
          if (markerIndex < 0)
            return;
          _this.setState(function(state) {
            return {
              markers: [].concat(_toConsumableArray(state.markers.slice(0, markerIndex)), [updateMarker], _toConsumableArray(state.markers.slice(markerIndex + 1)))
            };
          });
        });
        _defineProperty(_assertThisInitialized(_this), "state", {
          markers: [],
          subscribeMarker: _this.handleSubscribeToMarker,
          updateMarker: _this.handleUpdateMarker
        });
        return _this;
      }
      _createClass(TimelineMarkersProvider2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(Provider, {
            value: this.state
          }, this.props.children);
        }
      }]);
      return TimelineMarkersProvider2;
    }(_react["default"].Component);
    exports.TimelineMarkersProvider = TimelineMarkersProvider;
    _defineProperty(TimelineMarkersProvider, "propTypes", {
      children: _propTypes["default"].element.isRequired
    });
    var TimelineMarkersConsumer = Consumer;
    exports.TimelineMarkersConsumer = TimelineMarkersConsumer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/markerType.js
var require_markerType = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/markerType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineMarkerType = void 0;
    var TimelineMarkerType = {
      Today: "Today",
      Custom: "Custom",
      Cursor: "Cursor"
    };
    exports.TimelineMarkerType = TimelineMarkerType;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/shared.js
var require_shared = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/shared.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createDefaultRenderer = exports.createMarkerStylesWithLeftOffset = void 0;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var criticalStyles = {
      position: "absolute",
      top: 0,
      bottom: 0,
      width: "2px",
      backgroundColor: "black",
      // by default, pointer events (specifically click) will
      // "pass through".  This is added so that CursorMarker
      // will not get in the way of canvas click
      pointerEvents: "none"
      // FIXME: this creates a new object each time in render
      // might want to memoize this?
    };
    var createMarkerStylesWithLeftOffset = function createMarkerStylesWithLeftOffset2(leftOffset) {
      return _objectSpread({}, criticalStyles, {
        left: leftOffset
      });
    };
    exports.createMarkerStylesWithLeftOffset = createMarkerStylesWithLeftOffset;
    var createDefaultRenderer = function createDefaultRenderer2(dataTestidValue) {
      return function DefaultMarkerRenderer(_ref) {
        var styles = _ref.styles;
        return _react["default"].createElement("div", {
          style: styles
        });
      };
    };
    exports.createDefaultRenderer = createDefaultRenderer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/TodayMarker.js
var require_TodayMarker = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/TodayMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _shared = require_shared();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultRenderer = (0, _shared.createDefaultRenderer)("default-today-line");
    var TodayMarker = function(_React$Component) {
      _inherits(TodayMarker2, _React$Component);
      function TodayMarker2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, TodayMarker2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodayMarker2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "state", {
          date: Date.now()
        });
        return _this;
      }
      _createClass(TodayMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.intervalToken = this.createIntervalUpdater(this.props.interval);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (prevProps.interval !== this.props.interval) {
            clearInterval(this.intervalToken);
            this.intervalToken = this.createIntervalUpdater(this.props.interval);
          }
        }
      }, {
        key: "createIntervalUpdater",
        value: function createIntervalUpdater(interval) {
          var _this2 = this;
          return setInterval(function() {
            _this2.setState({
              date: Date.now()
              // FIXME: use date utils pass in as props
            });
          }, interval);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          clearInterval(this.intervalToken);
        }
      }, {
        key: "render",
        value: function render() {
          var date = this.state.date;
          var leftOffset = this.props.getLeftOffsetFromDate(date);
          var styles = (0, _shared.createMarkerStylesWithLeftOffset)(leftOffset);
          return this.props.renderer({
            styles,
            date
          });
        }
      }]);
      return TodayMarker2;
    }(_react["default"].Component);
    _defineProperty(TodayMarker, "propTypes", {
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired,
      renderer: _propTypes["default"].func,
      interval: _propTypes["default"].number.isRequired
    });
    _defineProperty(TodayMarker, "defaultProps", {
      renderer: defaultRenderer
    });
    var _default = TodayMarker;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/CustomMarker.js
var require_CustomMarker = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/CustomMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _shared = require_shared();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultCustomMarkerRenderer = (0, _shared.createDefaultRenderer)("default-customer-marker-id");
    var CustomMarker = function(_React$Component) {
      _inherits(CustomMarker2, _React$Component);
      function CustomMarker2() {
        _classCallCheck(this, CustomMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(CustomMarker2).apply(this, arguments));
      }
      _createClass(CustomMarker2, [{
        key: "render",
        value: function render() {
          var date = this.props.date;
          var leftOffset = this.props.getLeftOffsetFromDate(date);
          var styles = (0, _shared.createMarkerStylesWithLeftOffset)(leftOffset);
          return this.props.renderer({
            styles,
            date
          });
        }
      }]);
      return CustomMarker2;
    }(_react["default"].Component);
    _defineProperty(CustomMarker, "propTypes", {
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired,
      renderer: _propTypes["default"].func,
      date: _propTypes["default"].number.isRequired
    });
    _defineProperty(CustomMarker, "defaultProps", {
      renderer: defaultCustomMarkerRenderer
    });
    var _default = CustomMarker;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/CursorMarker.js
var require_CursorMarker = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/CursorMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _shared = require_shared();
    var _MarkerCanvasContext = require_MarkerCanvasContext();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultRenderer = (0, _shared.createDefaultRenderer)("default-cursor-marker");
    var CursorMarker = function(_React$Component) {
      _inherits(CursorMarker2, _React$Component);
      function CursorMarker2() {
        var _this;
        _classCallCheck(this, CursorMarker2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(CursorMarker2).call(this));
        _defineProperty(_assertThisInitialized(_this), "handleCanvasMouseOver", function(_ref) {
          var leftOffset = _ref.leftOffset, date = _ref.date, isCursorOverCanvas = _ref.isCursorOverCanvas;
          _this.setState({
            leftOffset,
            date,
            isShowingCursor: isCursorOverCanvas
          });
        });
        _this.state = {
          leftOffset: 0,
          date: 0,
          isShowingCursor: false
        };
        return _this;
      }
      _createClass(CursorMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.unsubscribe = this.props.subscribeToCanvasMouseOver(this.handleCanvasMouseOver);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$state = this.state, isShowingCursor = _this$state.isShowingCursor, leftOffset = _this$state.leftOffset, date = _this$state.date;
          if (!isShowingCursor)
            return null;
          var styles = (0, _shared.createMarkerStylesWithLeftOffset)(leftOffset);
          return this.props.renderer({
            styles,
            date
          });
        }
      }]);
      return CursorMarker2;
    }(_react["default"].Component);
    _defineProperty(CursorMarker, "propTypes", {
      subscribeToCanvasMouseOver: _propTypes["default"].func.isRequired,
      renderer: _propTypes["default"].func
    });
    _defineProperty(CursorMarker, "defaultProps", {
      renderer: defaultRenderer
    });
    var CursorMarkerWrapper = function CursorMarkerWrapper2(props) {
      return _react["default"].createElement(_MarkerCanvasContext.MarkerCanvasConsumer, null, function(_ref2) {
        var subscribeToMouseOver = _ref2.subscribeToMouseOver;
        return _react["default"].createElement(CursorMarker, _extends({
          subscribeToCanvasMouseOver: subscribeToMouseOver
        }, props));
      });
    };
    CursorMarkerWrapper.displayName = "CursorMarkerWrapper";
    var _default = CursorMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersRenderer.js
var require_TimelineMarkersRenderer = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersRenderer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    var _TodayMarker = _interopRequireDefault(require_TodayMarker());
    var _CustomMarker = _interopRequireDefault(require_CustomMarker());
    var _TimelineStateContext = require_TimelineStateContext();
    var _CursorMarker = _interopRequireDefault(require_CursorMarker());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var TimelineMarkersRenderer = function TimelineMarkersRenderer2() {
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref) {
        var getLeftOffsetFromDate = _ref.getLeftOffsetFromDate, getTimelineState = _ref.getTimelineState;
        return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref2) {
          var markers = _ref2.markers;
          var timelineState = getTimelineState();
          return markers.map(function(marker) {
            switch (marker.type) {
              case _markerType.TimelineMarkerType.Today:
                if (!((/* @__PURE__ */ new Date()).valueOf() >= timelineState.canvasTimeStart && (/* @__PURE__ */ new Date()).valueOf() <= timelineState.canvasTimeEnd))
                  return null;
                return _react["default"].createElement(_TodayMarker["default"], {
                  key: marker.id,
                  getLeftOffsetFromDate,
                  renderer: marker.renderer,
                  interval: marker.interval
                });
              case _markerType.TimelineMarkerType.Custom:
                if (!(marker.date >= timelineState.canvasTimeStart && marker.date <= timelineState.canvasTimeEnd))
                  return null;
                return _react["default"].createElement(_CustomMarker["default"], {
                  key: marker.id,
                  renderer: marker.renderer,
                  date: marker.date,
                  getLeftOffsetFromDate
                });
              case _markerType.TimelineMarkerType.Cursor:
                return _react["default"].createElement(_CursorMarker["default"], {
                  key: marker.id,
                  renderer: marker.renderer,
                  getLeftOffsetFromDate
                });
              default:
                return null;
            }
          });
        });
      });
    };
    var _default = TimelineMarkersRenderer;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvas.js
var require_MarkerCanvas = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvas.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _MarkerCanvasContext = require_MarkerCanvasContext();
    var _TimelineMarkersRenderer = _interopRequireDefault(require_TimelineMarkersRenderer());
    var _TimelineStateContext = require_TimelineStateContext();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var staticStyles = {
      position: "absolute",
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
      /**
       * Renders registered markers and exposes a mouse over listener for
       * CursorMarkers to subscribe to
       */
    };
    var MarkerCanvas = function(_React$Component) {
      _inherits(MarkerCanvas2, _React$Component);
      function MarkerCanvas2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, MarkerCanvas2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MarkerCanvas2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "handleMouseMove", function(evt) {
          if (_this.subscription != null) {
            var pageX = evt.pageX;
            var _this$containerEl$get = _this.containerEl.getBoundingClientRect(), containerLeft = _this$containerEl$get.left;
            var canvasX = pageX - containerLeft;
            var date = _this.props.getDateFromLeftOffsetPosition(canvasX);
            _this.subscription({
              leftOffset: canvasX,
              date,
              isCursorOverCanvas: true
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseLeave", function() {
          if (_this.subscription != null) {
            _this.subscription({
              leftOffset: 0,
              date: 0,
              isCursorOverCanvas: false
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseMoveSubscribe", function(sub) {
          _this.subscription = sub;
          return function() {
            _this.subscription = null;
          };
        });
        _defineProperty(_assertThisInitialized(_this), "state", {
          subscribeToMouseOver: _this.handleMouseMoveSubscribe
        });
        return _this;
      }
      _createClass(MarkerCanvas2, [{
        key: "render",
        value: function render() {
          var _this2 = this;
          return _react["default"].createElement(_MarkerCanvasContext.MarkerCanvasProvider, {
            value: this.state
          }, _react["default"].createElement("div", {
            style: staticStyles,
            onMouseMove: this.handleMouseMove,
            onMouseLeave: this.handleMouseLeave,
            ref: function ref(el) {
              return _this2.containerEl = el;
            }
          }, _react["default"].createElement(_TimelineMarkersRenderer["default"], null), this.props.children));
        }
      }]);
      return MarkerCanvas2;
    }(_react["default"].Component);
    _defineProperty(MarkerCanvas, "propTypes", {
      getDateFromLeftOffsetPosition: _propTypes["default"].func.isRequired,
      children: _propTypes["default"].node
    });
    var MarkerCanvasWrapper = function MarkerCanvasWrapper2(props) {
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref) {
        var getDateFromLeftOffsetPosition = _ref.getDateFromLeftOffsetPosition;
        return _react["default"].createElement(MarkerCanvas, _extends({
          getDateFromLeftOffsetPosition
        }, props));
      });
    };
    var _default = MarkerCanvasWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/resize-detector/window.js
var require_window = __commonJS({
  "node_modules/react-calendar-timeline/lib/resize-detector/window.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    function addListener(component) {
      component._resizeEventListener = {
        handleEvent: function handleEvent() {
          component.resize();
        }
      };
      window.addEventListener("resize", component._resizeEventListener);
    }
    function removeListener(component) {
      window.removeEventListener("resize", component._resizeEventListener);
    }
    var _default = {
      addListener,
      removeListener
    };
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/default-config.js
var require_default_config = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/default-config.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultHeaderFormats = exports.defaultTimeSteps = exports.defaultKeys = void 0;
    var defaultKeys = {
      groupIdKey: "id",
      groupTitleKey: "title",
      groupRightTitleKey: "rightTitle",
      groupLabelKey: "title",
      itemIdKey: "id",
      itemTitleKey: "title",
      itemDivTitleKey: "title",
      itemGroupKey: "group",
      itemTimeStartKey: "start_time",
      itemTimeEndKey: "end_time"
    };
    exports.defaultKeys = defaultKeys;
    var defaultTimeSteps = {
      second: 1,
      minute: 1,
      hour: 1,
      day: 1,
      month: 1,
      year: 1
    };
    exports.defaultTimeSteps = defaultTimeSteps;
    var defaultHeaderFormats = {
      year: {
        "long": "YYYY",
        mediumLong: "YYYY",
        medium: "YYYY",
        "short": "YY"
      },
      month: {
        "long": "MMMM YYYY",
        mediumLong: "MMMM",
        medium: "MMMM",
        "short": "MM/YY"
      },
      week: {
        "long": "w",
        mediumLong: "w",
        medium: "w",
        "short": "w"
      },
      day: {
        "long": "dddd, LL",
        mediumLong: "dddd, LL",
        medium: "dd D",
        "short": "D"
      },
      hour: {
        "long": "dddd, LL, HH:00",
        mediumLong: "L, HH:00",
        medium: "HH:00",
        "short": "HH"
      },
      minute: {
        "long": "HH:mm",
        mediumLong: "HH:mm",
        medium: "HH:mm",
        "short": "mm"
      },
      second: {
        "long": "mm:ss",
        mediumLong: "mm:ss",
        medium: "mm:ss",
        "short": "ss"
      }
    };
    exports.defaultHeaderFormats = defaultHeaderFormats;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/HeadersContext.js
var require_HeadersContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/HeadersContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineHeadersConsumer = exports.TimelineHeadersProvider = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _createReactContext2 = _interopRequireDefault(require_lib());
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultContextState = {
      registerScroll: function registerScroll() {
        console.warn("default registerScroll header used");
        return _generic.noop;
      },
      rightSidebarWidth: 0,
      leftSidebarWidth: 150,
      timeSteps: {}
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var TimelineHeadersProvider = function(_React$Component) {
      _inherits(TimelineHeadersProvider2, _React$Component);
      function TimelineHeadersProvider2() {
        _classCallCheck(this, TimelineHeadersProvider2);
        return _possibleConstructorReturn(this, _getPrototypeOf(TimelineHeadersProvider2).apply(this, arguments));
      }
      _createClass(TimelineHeadersProvider2, [{
        key: "render",
        value: function render() {
          var contextValue = {
            rightSidebarWidth: this.props.rightSidebarWidth,
            leftSidebarWidth: this.props.leftSidebarWidth,
            timeSteps: this.props.timeSteps,
            registerScroll: this.props.registerScroll
          };
          return _react["default"].createElement(Provider, {
            value: contextValue
          }, this.props.children);
        }
      }]);
      return TimelineHeadersProvider2;
    }(_react["default"].Component);
    exports.TimelineHeadersProvider = TimelineHeadersProvider;
    _defineProperty(TimelineHeadersProvider, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      rightSidebarWidth: _propTypes["default"].number,
      leftSidebarWidth: _propTypes["default"].number.isRequired,
      //TODO: maybe this should be skipped?
      timeSteps: _propTypes["default"].object.isRequired,
      registerScroll: _propTypes["default"].func.isRequired
    });
    var TimelineHeadersConsumer = Consumer;
    exports.TimelineHeadersConsumer = TimelineHeadersConsumer;
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module2) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key in arg) {
              if (hasOwn.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module2 !== "undefined" && module2.exports) {
        classNames.default = classNames;
        module2.exports = classNames;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames;
        });
      } else {
        window.classNames = classNames;
      }
    })();
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/constants.js
var require_constants = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RIGHT_VARIANT = exports.LEFT_VARIANT = void 0;
    var LEFT_VARIANT = "left";
    exports.LEFT_VARIANT = LEFT_VARIANT;
    var RIGHT_VARIANT = "right";
    exports.RIGHT_VARIANT = RIGHT_VARIANT;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/SidebarHeader.js
var require_SidebarHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/SidebarHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _HeadersContext = require_HeadersContext();
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SidebarHeader = function(_React$PureComponent) {
      _inherits(SidebarHeader2, _React$PureComponent);
      function SidebarHeader2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, SidebarHeader2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SidebarHeader2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "getRootProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var style = props.style;
          var width = _this.props.variant === _constants.RIGHT_VARIANT ? _this.props.rightSidebarWidth : _this.props.leftSidebarWidth;
          return {
            style: _objectSpread({}, style, {
              width
            })
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getStateAndHelpers", function() {
          return {
            getRootProps: _this.getRootProps,
            data: _this.props.headerData
          };
        });
        return _this;
      }
      _createClass(SidebarHeader2, [{
        key: "render",
        value: function render() {
          var props = this.getStateAndHelpers();
          var Renderer = this.props.children;
          return _react["default"].createElement(Renderer, props);
        }
      }]);
      return SidebarHeader2;
    }(_react["default"].PureComponent);
    _defineProperty(SidebarHeader, "propTypes", {
      children: _propTypes["default"].func.isRequired,
      rightSidebarWidth: _propTypes["default"].number,
      leftSidebarWidth: _propTypes["default"].number.isRequired,
      variant: _propTypes["default"].string,
      headerData: _propTypes["default"].object
    });
    var SidebarWrapper = function SidebarWrapper2(_ref) {
      var children = _ref.children, variant = _ref.variant, headerData = _ref.headerData;
      return _react["default"].createElement(_HeadersContext.TimelineHeadersConsumer, null, function(_ref2) {
        var leftSidebarWidth = _ref2.leftSidebarWidth, rightSidebarWidth = _ref2.rightSidebarWidth;
        return _react["default"].createElement(SidebarHeader, {
          leftSidebarWidth,
          rightSidebarWidth,
          children,
          variant,
          headerData
        });
      });
    };
    SidebarWrapper.propTypes = {
      children: _propTypes["default"].func.isRequired,
      variant: _propTypes["default"].string,
      headerData: _propTypes["default"].object
    };
    SidebarWrapper.defaultProps = {
      variant: _constants.LEFT_VARIANT,
      children: function children(_ref3) {
        var getRootProps = _ref3.getRootProps;
        return _react["default"].createElement("div", getRootProps());
      }
    };
    SidebarWrapper.secretKey = "SidebarHeader";
    var _default = SidebarWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/TimelineHeaders.js
var require_TimelineHeaders = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/TimelineHeaders.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _classnames = _interopRequireDefault(require_classnames());
    var _HeadersContext = require_HeadersContext();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _SidebarHeader = _interopRequireDefault(require_SidebarHeader());
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var TimelineHeaders = function(_React$Component) {
      _inherits(TimelineHeaders2, _React$Component);
      function TimelineHeaders2(props) {
        var _this;
        _classCallCheck(this, TimelineHeaders2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(TimelineHeaders2).call(this, props));
        _defineProperty(_assertThisInitialized(_this), "getRootStyle", function() {
          return _objectSpread({}, _this.props.style, {
            display: "flex",
            width: "100%"
          });
        });
        _defineProperty(_assertThisInitialized(_this), "getCalendarHeaderStyle", function() {
          var _this$props = _this.props, leftSidebarWidth = _this$props.leftSidebarWidth, rightSidebarWidth = _this$props.rightSidebarWidth, calendarHeaderStyle = _this$props.calendarHeaderStyle;
          return _objectSpread({}, calendarHeaderStyle, {
            overflow: "hidden",
            width: "calc(100% - ".concat(leftSidebarWidth + rightSidebarWidth, "px)")
          });
        });
        _defineProperty(_assertThisInitialized(_this), "handleRootRef", function(element) {
          if (_this.props.headerRef) {
            _this.props.headerRef(element);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "isSidebarHeader", function(child) {
          if (child.type === void 0)
            return false;
          return child.type.secretKey === _SidebarHeader["default"].secretKey;
        });
        return _this;
      }
      _createClass(TimelineHeaders2, [{
        key: "render",
        value: function render() {
          var _this2 = this;
          var rightSidebarHeader;
          var leftSidebarHeader;
          var calendarHeaders = [];
          var children = Array.isArray(this.props.children) ? this.props.children.filter(function(c) {
            return c;
          }) : [this.props.children];
          _react["default"].Children.map(children, function(child) {
            if (_this2.isSidebarHeader(child)) {
              if (child.props.variant === _constants.RIGHT_VARIANT) {
                rightSidebarHeader = child;
              } else {
                leftSidebarHeader = child;
              }
            } else {
              calendarHeaders.push(child);
            }
          });
          if (!leftSidebarHeader) {
            leftSidebarHeader = _react["default"].createElement(_SidebarHeader["default"], null);
          }
          if (!rightSidebarHeader && this.props.rightSidebarWidth) {
            rightSidebarHeader = _react["default"].createElement(_SidebarHeader["default"], {
              variant: "right"
            });
          }
          return _react["default"].createElement("div", {
            ref: this.handleRootRef,
            style: this.getRootStyle(),
            className: (0, _classnames["default"])("rct-header-root", this.props.className)
          }, leftSidebarHeader, _react["default"].createElement("div", {
            ref: this.props.registerScroll,
            style: this.getCalendarHeaderStyle(),
            className: (0, _classnames["default"])("rct-calendar-header", this.props.calendarHeaderClassName)
          }, calendarHeaders), rightSidebarHeader);
        }
      }]);
      return TimelineHeaders2;
    }(_react["default"].Component);
    _defineProperty(TimelineHeaders, "propTypes", {
      registerScroll: _propTypes["default"].func.isRequired,
      leftSidebarWidth: _propTypes["default"].number.isRequired,
      rightSidebarWidth: _propTypes["default"].number.isRequired,
      style: _propTypes["default"].object,
      children: _propTypes["default"].node,
      className: _propTypes["default"].string,
      calendarHeaderStyle: _propTypes["default"].object,
      calendarHeaderClassName: _propTypes["default"].string,
      headerRef: _propTypes["default"].func
    });
    var TimelineHeadersWrapper = function TimelineHeadersWrapper2(_ref) {
      var children = _ref.children, style = _ref.style, className = _ref.className, calendarHeaderStyle = _ref.calendarHeaderStyle, calendarHeaderClassName = _ref.calendarHeaderClassName;
      return _react["default"].createElement(_HeadersContext.TimelineHeadersConsumer, null, function(_ref2) {
        var leftSidebarWidth = _ref2.leftSidebarWidth, rightSidebarWidth = _ref2.rightSidebarWidth, registerScroll = _ref2.registerScroll;
        return _react["default"].createElement(TimelineHeaders, {
          leftSidebarWidth,
          rightSidebarWidth,
          registerScroll,
          style,
          className,
          calendarHeaderStyle,
          calendarHeaderClassName
        }, children);
      });
    };
    TimelineHeadersWrapper.propTypes = {
      style: _propTypes["default"].object,
      children: _propTypes["default"].node,
      className: _propTypes["default"].string,
      calendarHeaderStyle: _propTypes["default"].object,
      calendarHeaderClassName: _propTypes["default"].string
    };
    TimelineHeadersWrapper.secretKey = "TimelineHeaders";
    var _default = TimelineHeadersWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/CustomHeader.js
var require_CustomHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/CustomHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = exports.CustomHeader = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _HeadersContext = require_HeadersContext();
    var _TimelineStateContext = require_TimelineStateContext();
    var _calendar = require_calendar();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var CustomHeader = function(_React$Component) {
      _inherits(CustomHeader2, _React$Component);
      function CustomHeader2(_props) {
        var _this;
        _classCallCheck(this, CustomHeader2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomHeader2).call(this, _props));
        _defineProperty(_assertThisInitialized(_this), "getHeaderIntervals", function(_ref) {
          var canvasTimeStart = _ref.canvasTimeStart, canvasTimeEnd = _ref.canvasTimeEnd, unit = _ref.unit, timeSteps = _ref.timeSteps, getLeftOffsetFromDate = _ref.getLeftOffsetFromDate;
          var intervals = [];
          (0, _calendar.iterateTimes)(canvasTimeStart, canvasTimeEnd, unit, timeSteps, function(startTime, endTime) {
            var left = getLeftOffsetFromDate(startTime.valueOf());
            var right = getLeftOffsetFromDate(endTime.valueOf());
            var width = right - left;
            intervals.push({
              startTime,
              endTime,
              labelWidth: width,
              left
            });
          });
          return intervals;
        });
        _defineProperty(_assertThisInitialized(_this), "getRootProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var style = props.style;
          return {
            style: Object.assign({}, style ? style : {}, {
              position: "relative",
              width: _this.props.canvasWidth,
              height: _this.props.height
            })
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getIntervalProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var interval = props.interval, style = props.style;
          if (!interval)
            throw new Error("you should provide interval to the prop getter");
          var startTime = interval.startTime, labelWidth = interval.labelWidth, left = interval.left;
          return {
            style: _this.getIntervalStyle({
              style,
              startTime,
              labelWidth,
              canvasTimeStart: _this.props.canvasTimeStart,
              unit: _this.props.unit,
              left
            }),
            key: "label-".concat(startTime.valueOf())
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getIntervalStyle", function(_ref2) {
          var left = _ref2.left, labelWidth = _ref2.labelWidth, style = _ref2.style;
          return _objectSpread({}, style, {
            left,
            width: labelWidth,
            position: "absolute"
          });
        });
        _defineProperty(_assertThisInitialized(_this), "getStateAndHelpers", function() {
          var _this$props = _this.props, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, unit = _this$props.unit, showPeriod = _this$props.showPeriod, timelineWidth = _this$props.timelineWidth, visibleTimeStart = _this$props.visibleTimeStart, visibleTimeEnd = _this$props.visibleTimeEnd, headerData = _this$props.headerData;
          return {
            timelineContext: {
              timelineWidth,
              visibleTimeStart,
              visibleTimeEnd,
              canvasTimeStart,
              canvasTimeEnd
            },
            headerContext: {
              unit,
              intervals: _this.state.intervals
            },
            getRootProps: _this.getRootProps,
            getIntervalProps: _this.getIntervalProps,
            showPeriod,
            data: headerData
          };
        });
        var _canvasTimeStart = _props.canvasTimeStart, _canvasTimeEnd = _props.canvasTimeEnd, canvasWidth = _props.canvasWidth, _unit = _props.unit, _timeSteps = _props.timeSteps, _showPeriod = _props.showPeriod, _getLeftOffsetFromDate = _props.getLeftOffsetFromDate;
        var _intervals = _this.getHeaderIntervals({
          canvasTimeStart: _canvasTimeStart,
          canvasTimeEnd: _canvasTimeEnd,
          canvasWidth,
          unit: _unit,
          timeSteps: _timeSteps,
          showPeriod: _showPeriod,
          getLeftOffsetFromDate: _getLeftOffsetFromDate
        });
        _this.state = {
          intervals: _intervals
        };
        return _this;
      }
      _createClass(CustomHeader2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          if (nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || nextProps.unit !== this.props.unit || nextProps.timeSteps !== this.props.timeSteps || nextProps.showPeriod !== this.props.showPeriod || nextProps.children !== this.props.children || nextProps.headerData !== this.props.headerData) {
            return true;
          }
          return false;
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          if (nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || nextProps.unit !== this.props.unit || nextProps.timeSteps !== this.props.timeSteps || nextProps.showPeriod !== this.props.showPeriod) {
            var canvasTimeStart = nextProps.canvasTimeStart, canvasTimeEnd = nextProps.canvasTimeEnd, canvasWidth = nextProps.canvasWidth, unit = nextProps.unit, timeSteps = nextProps.timeSteps, showPeriod = nextProps.showPeriod, getLeftOffsetFromDate = nextProps.getLeftOffsetFromDate;
            var intervals = this.getHeaderIntervals({
              canvasTimeStart,
              canvasTimeEnd,
              canvasWidth,
              unit,
              timeSteps,
              showPeriod,
              getLeftOffsetFromDate
            });
            this.setState({
              intervals
            });
          }
        }
      }, {
        key: "render",
        value: function render() {
          var props = this.getStateAndHelpers();
          var Renderer = this.props.children;
          return _react["default"].createElement(Renderer, props);
        }
      }]);
      return CustomHeader2;
    }(_react["default"].Component);
    exports.CustomHeader = CustomHeader;
    _defineProperty(CustomHeader, "propTypes", {
      //component props
      children: _propTypes["default"].func.isRequired,
      unit: _propTypes["default"].string.isRequired,
      //Timeline context
      timeSteps: _propTypes["default"].object.isRequired,
      visibleTimeStart: _propTypes["default"].number.isRequired,
      visibleTimeEnd: _propTypes["default"].number.isRequired,
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      showPeriod: _propTypes["default"].func.isRequired,
      headerData: _propTypes["default"].object,
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired,
      height: _propTypes["default"].number.isRequired
    });
    var CustomHeaderWrapper = function CustomHeaderWrapper2(_ref3) {
      var children = _ref3.children, unit = _ref3.unit, headerData = _ref3.headerData, height = _ref3.height;
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref4) {
        var getTimelineState = _ref4.getTimelineState, showPeriod = _ref4.showPeriod, getLeftOffsetFromDate = _ref4.getLeftOffsetFromDate;
        var timelineState = getTimelineState();
        return _react["default"].createElement(_HeadersContext.TimelineHeadersConsumer, null, function(_ref5) {
          var timeSteps = _ref5.timeSteps;
          return _react["default"].createElement(CustomHeader, _extends({
            children,
            timeSteps,
            showPeriod,
            unit: unit ? unit : timelineState.timelineUnit
          }, timelineState, {
            headerData,
            getLeftOffsetFromDate,
            height
          }));
        });
      });
    };
    CustomHeaderWrapper.propTypes = {
      children: _propTypes["default"].func.isRequired,
      unit: _propTypes["default"].string,
      headerData: _propTypes["default"].object,
      height: _propTypes["default"].number
    };
    CustomHeaderWrapper.defaultProps = {
      height: 30
    };
    var _default = CustomHeaderWrapper;
    exports["default"] = _default;
  }
});

// node_modules/memoize-one/dist/memoize-one.esm.js
var memoize_one_esm_exports = {};
__export(memoize_one_esm_exports, {
  default: () => memoize_one_esm_default
});
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual2(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var safeIsNaN, memoize_one_esm_default;
var init_memoize_one_esm = __esm({
  "node_modules/memoize-one/dist/memoize-one.esm.js"() {
    safeIsNaN = Number.isNaN || function ponyfill(value) {
      return typeof value === "number" && value !== value;
    };
    memoize_one_esm_default = memoizeOne;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/Interval.js
var require_Interval = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/Interval.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _calendar = require_calendar();
    var _events = require_events();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Interval = function(_React$PureComponent) {
      _inherits(Interval2, _React$PureComponent);
      function Interval2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, Interval2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Interval2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "onIntervalClick", function() {
          var _this$props = _this.props, primaryHeader = _this$props.primaryHeader, interval = _this$props.interval, unit = _this$props.unit, showPeriod = _this$props.showPeriod;
          if (primaryHeader) {
            var nextUnit = (0, _calendar.getNextUnit)(unit);
            var newStartTime = interval.startTime.clone().startOf(nextUnit);
            var newEndTime = interval.startTime.clone().endOf(nextUnit);
            showPeriod(newStartTime, newEndTime);
          } else {
            showPeriod(interval.startTime, interval.endTime);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getIntervalProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return _objectSpread({}, _this.props.getIntervalProps(_objectSpread({
            interval: _this.props.interval
          }, props)), {
            onClick: (0, _events.composeEvents)(_this.onIntervalClick, props.onClick)
          });
        });
        return _this;
      }
      _createClass(Interval2, [{
        key: "render",
        value: function render() {
          var _this$props2 = this.props, intervalText = _this$props2.intervalText, interval = _this$props2.interval, intervalRenderer = _this$props2.intervalRenderer, headerData = _this$props2.headerData;
          var Renderer = intervalRenderer;
          if (Renderer) {
            return _react["default"].createElement(Renderer, {
              getIntervalProps: this.getIntervalProps,
              intervalContext: {
                interval,
                intervalText
              },
              data: headerData
            });
          }
          return _react["default"].createElement("div", _extends({}, this.getIntervalProps({}), {
            className: "rct-dateHeader ".concat(this.props.primaryHeader ? "rct-dateHeader-primary" : "")
          }), _react["default"].createElement("span", null, intervalText));
        }
      }]);
      return Interval2;
    }(_react["default"].PureComponent);
    _defineProperty(Interval, "propTypes", {
      intervalRenderer: _propTypes["default"].func,
      unit: _propTypes["default"].string.isRequired,
      interval: _propTypes["default"].object.isRequired,
      showPeriod: _propTypes["default"].func.isRequired,
      intervalText: _propTypes["default"].string.isRequired,
      primaryHeader: _propTypes["default"].bool.isRequired,
      getIntervalProps: _propTypes["default"].func.isRequired,
      headerData: _propTypes["default"].object
    });
    var _default = Interval;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/CustomDateHeader.js
var require_CustomDateHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/CustomDateHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CustomDateHeader = CustomDateHeader;
    var _react = _interopRequireDefault(require_react());
    var _Interval = _interopRequireDefault(require_Interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function CustomDateHeader(_ref) {
      var _ref$headerContext = _ref.headerContext, intervals = _ref$headerContext.intervals, unit = _ref$headerContext.unit, getRootProps = _ref.getRootProps, getIntervalProps = _ref.getIntervalProps, showPeriod = _ref.showPeriod, _ref$data = _ref.data, style = _ref$data.style, intervalRenderer = _ref$data.intervalRenderer, className = _ref$data.className, getLabelFormat = _ref$data.getLabelFormat, unitProp = _ref$data.unitProp, headerData = _ref$data.headerData;
      return _react["default"].createElement("div", _extends({
        className
      }, getRootProps({
        style
      })), intervals.map(function(interval) {
        var intervalText = getLabelFormat([interval.startTime, interval.endTime], unit, interval.labelWidth);
        return _react["default"].createElement(_Interval["default"], {
          key: "label-".concat(interval.startTime.valueOf()),
          unit,
          interval,
          showPeriod,
          intervalText,
          primaryHeader: unitProp === "primaryHeader",
          getIntervalProps,
          intervalRenderer,
          headerData
        });
      }));
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/DateHeader.js
var require_DateHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/DateHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineStateContext = require_TimelineStateContext();
    var _CustomHeader = _interopRequireDefault(require_CustomHeader());
    var _calendar = require_calendar();
    var _defaultConfig = require_default_config();
    var _memoizeOne = _interopRequireDefault((init_memoize_one_esm(), __toCommonJS(memoize_one_esm_exports)));
    var _CustomDateHeader = require_CustomDateHeader();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var DateHeader = function(_React$Component) {
      _inherits(DateHeader2, _React$Component);
      function DateHeader2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, DateHeader2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateHeader2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "getHeaderUnit", function() {
          if (_this.props.unit === "primaryHeader") {
            return (0, _calendar.getNextUnit)(_this.props.timelineUnit);
          } else if (_this.props.unit) {
            return _this.props.unit;
          }
          return _this.props.timelineUnit;
        });
        _defineProperty(_assertThisInitialized(_this), "getRootStyle", (0, _memoizeOne["default"])(function(style) {
          return _objectSpread({
            height: 30
          }, style);
        }));
        _defineProperty(_assertThisInitialized(_this), "getLabelFormat", function(interval, unit, labelWidth) {
          var labelFormat = _this.props.labelFormat;
          if (typeof labelFormat === "string") {
            var startTime = interval[0];
            return startTime.format(labelFormat);
          } else if (typeof labelFormat === "function") {
            return labelFormat(interval, unit, labelWidth);
          } else {
            throw new Error("labelFormat should be function or string");
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getHeaderData", (0, _memoizeOne["default"])(function(intervalRenderer, style, className, getLabelFormat, unitProp, headerData) {
          return {
            intervalRenderer,
            style,
            className,
            getLabelFormat,
            unitProp,
            headerData
          };
        }));
        return _this;
      }
      _createClass(DateHeader2, [{
        key: "render",
        value: function render() {
          var unit = this.getHeaderUnit();
          var _this$props = this.props, headerData = _this$props.headerData, height = _this$props.height;
          return _react["default"].createElement(_CustomHeader["default"], {
            unit,
            height,
            headerData: this.getHeaderData(this.props.intervalRenderer, this.getRootStyle(this.props.style), this.props.className, this.getLabelFormat, this.props.unit, this.props.headerData),
            children: _CustomDateHeader.CustomDateHeader
          });
        }
      }]);
      return DateHeader2;
    }(_react["default"].Component);
    _defineProperty(DateHeader, "propTypes", {
      unit: _propTypes["default"].string,
      style: _propTypes["default"].object,
      className: _propTypes["default"].string,
      timelineUnit: _propTypes["default"].string,
      labelFormat: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].objectOf(_propTypes["default"].objectOf(_propTypes["default"].string)), _propTypes["default"].string]).isRequired,
      intervalRenderer: _propTypes["default"].func,
      headerData: _propTypes["default"].object,
      height: _propTypes["default"].number
    });
    var DateHeaderWrapper = function DateHeaderWrapper2(_ref) {
      var unit = _ref.unit, labelFormat = _ref.labelFormat, style = _ref.style, className = _ref.className, intervalRenderer = _ref.intervalRenderer, headerData = _ref.headerData, height = _ref.height;
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref2) {
        var getTimelineState = _ref2.getTimelineState;
        var timelineState = getTimelineState();
        return _react["default"].createElement(DateHeader, {
          timelineUnit: timelineState.timelineUnit,
          unit,
          labelFormat,
          style,
          className,
          intervalRenderer,
          headerData,
          height
        });
      });
    };
    DateHeaderWrapper.propTypes = {
      style: _propTypes["default"].object,
      className: _propTypes["default"].string,
      unit: _propTypes["default"].string,
      labelFormat: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].objectOf(_propTypes["default"].objectOf(_propTypes["default"].string)), _propTypes["default"].string]),
      intervalRenderer: _propTypes["default"].func,
      headerData: _propTypes["default"].object,
      height: _propTypes["default"].number
    };
    DateHeaderWrapper.defaultProps = {
      labelFormat: formatLabel
    };
    function formatLabel(_ref3, unit, labelWidth) {
      var _ref4 = _slicedToArray(_ref3, 2), timeStart = _ref4[0], timeEnd = _ref4[1];
      var formatOptions = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : _defaultConfig.defaultHeaderFormats;
      var format2;
      if (labelWidth >= 150) {
        format2 = formatOptions[unit]["long"];
      } else if (labelWidth >= 100) {
        format2 = formatOptions[unit]["mediumLong"];
      } else if (labelWidth >= 50) {
        format2 = formatOptions[unit]["medium"];
      } else {
        format2 = formatOptions[unit]["short"];
      }
      return timeStart.format(format2);
    }
    var _default = DateHeaderWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/Timeline.js
var require_Timeline = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/Timeline.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _Items = _interopRequireDefault(require_Items());
    var _Sidebar = _interopRequireDefault(require_Sidebar());
    var _Columns = _interopRequireDefault(require_Columns());
    var _GroupRows = _interopRequireDefault(require_GroupRows());
    var _ScrollElement = _interopRequireDefault(require_ScrollElement());
    var _MarkerCanvas = _interopRequireDefault(require_MarkerCanvas());
    var _window = _interopRequireDefault(require_window());
    var _calendar = require_calendar();
    var _generic = require_generic();
    var _defaultConfig = require_default_config();
    var _TimelineStateContext = require_TimelineStateContext();
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _HeadersContext = require_HeadersContext();
    var _TimelineHeaders = _interopRequireDefault(require_TimelineHeaders());
    var _DateHeader = _interopRequireDefault(require_DateHeader());
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var ReactCalendarTimeline = function(_Component) {
      _inherits(ReactCalendarTimeline2, _Component);
      _createClass(ReactCalendarTimeline2, [{
        key: "getChildContext",
        value: function getChildContext() {
          var _this2 = this;
          return {
            getTimelineContext: function getTimelineContext() {
              return _this2.getTimelineContext();
            }
          };
        }
      }]);
      function ReactCalendarTimeline2(_props) {
        var _this;
        _classCallCheck(this, ReactCalendarTimeline2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarTimeline2).call(this, _props));
        _defineProperty(_assertThisInitialized(_this), "getTimelineContext", function() {
          var _this$state = _this.state, width = _this$state.width, visibleTimeStart = _this$state.visibleTimeStart, visibleTimeEnd = _this$state.visibleTimeEnd, canvasTimeStart = _this$state.canvasTimeStart, canvasTimeEnd = _this$state.canvasTimeEnd;
          return {
            timelineWidth: width,
            visibleTimeStart,
            visibleTimeEnd,
            canvasTimeStart,
            canvasTimeEnd
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getTimelineUnit", function() {
          var _this$state2 = _this.state, width = _this$state2.width, visibleTimeStart = _this$state2.visibleTimeStart, visibleTimeEnd = _this$state2.visibleTimeEnd;
          var timeSteps = _this.props.timeSteps;
          var zoom = visibleTimeEnd - visibleTimeStart;
          var minUnit = (0, _calendar.getMinUnit)(zoom, width, timeSteps);
          return minUnit;
        });
        _defineProperty(_assertThisInitialized(_this), "resize", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _this.props;
          var _this$container$getBo = _this.container.getBoundingClientRect(), containerWidth = _this$container$getBo.width;
          var width = containerWidth - props.sidebarWidth - props.rightSidebarWidth;
          var canvasWidth = (0, _calendar.getCanvasWidth)(width, props.buffer);
          var _stackTimelineItems = (0, _calendar.stackTimelineItems)(props.items, props.groups, canvasWidth, _this.state.canvasTimeStart, _this.state.canvasTimeEnd, props.keys, props.lineHeight, props.itemHeightRatio, props.stackItems, _this.state.draggingItem, _this.state.resizingItem, _this.state.dragTime, _this.state.resizingEdge, _this.state.resizeTime, _this.state.newGroupOrder), dimensionItems = _stackTimelineItems.dimensionItems, height = _stackTimelineItems.height, groupHeights = _stackTimelineItems.groupHeights, groupTops = _stackTimelineItems.groupTops;
          _this.setState({
            width,
            dimensionItems,
            height,
            groupHeights,
            groupTops
          });
          var scrollLeft = width * ((props.buffer - 1) / 2);
          _this.scrollComponent.scrollLeft = scrollLeft;
          _this.scrollHeaderRef.scrollLeft = scrollLeft;
        });
        _defineProperty(_assertThisInitialized(_this), "onScroll", function(scrollX) {
          var width = _this.state.width;
          var canvasTimeStart = _this.state.canvasTimeStart;
          var zoom = _this.state.visibleTimeEnd - _this.state.visibleTimeStart;
          var visibleTimeStart = canvasTimeStart + zoom * scrollX / width;
          if (_this.state.visibleTimeStart !== visibleTimeStart || _this.state.visibleTimeEnd !== visibleTimeStart + zoom) {
            _this.props.onTimeChange(visibleTimeStart, visibleTimeStart + zoom, _this.updateScrollCanvas, _this.getTimelineUnit());
          }
        });
        _defineProperty(_assertThisInitialized(_this), "updateScrollCanvas", function(visibleTimeStart, visibleTimeEnd, forceUpdateDimensions) {
          var items = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : _this.props.items;
          var groups = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : _this.props.groups;
          _this.setState((0, _calendar.calculateScrollCanvas)(visibleTimeStart, visibleTimeEnd, forceUpdateDimensions, items, groups, _this.props, _this.state));
        });
        _defineProperty(_assertThisInitialized(_this), "handleWheelZoom", function(speed, xPosition, deltaY) {
          _this.changeZoom(1 + speed * deltaY / 500, xPosition / _this.state.width);
        });
        _defineProperty(_assertThisInitialized(_this), "changeZoom", function(scale) {
          var offset2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.5;
          var _this$props = _this.props, minZoom = _this$props.minZoom, maxZoom = _this$props.maxZoom;
          var oldZoom = _this.state.visibleTimeEnd - _this.state.visibleTimeStart;
          var newZoom = Math.min(Math.max(Math.round(oldZoom * scale), minZoom), maxZoom);
          var newVisibleTimeStart = Math.round(_this.state.visibleTimeStart + (oldZoom - newZoom) * offset2);
          _this.props.onTimeChange(newVisibleTimeStart, newVisibleTimeStart + newZoom, _this.updateScrollCanvas, _this.getTimelineUnit());
        });
        _defineProperty(_assertThisInitialized(_this), "showPeriod", function(from2, to2) {
          var visibleTimeStart = from2.valueOf();
          var visibleTimeEnd = to2.valueOf();
          var zoom = visibleTimeEnd - visibleTimeStart;
          if (zoom < _this.props.minZoom) {
            return;
          }
          _this.props.onTimeChange(visibleTimeStart, visibleTimeStart + zoom, _this.updateScrollCanvas, _this.getTimelineUnit());
        });
        _defineProperty(_assertThisInitialized(_this), "selectItem", function(item, clickType, e) {
          if (_this.isItemSelected(item) || _this.props.itemTouchSendsClick && clickType === "touch") {
            if (item && _this.props.onItemClick) {
              var time = _this.timeFromItemEvent(e);
              _this.props.onItemClick(item, e, time);
            }
          } else {
            _this.setState({
              selectedItem: item
            });
            if (item && _this.props.onItemSelect) {
              var _time = _this.timeFromItemEvent(e);
              _this.props.onItemSelect(item, e, _time);
            } else if (item === null && _this.props.onItemDeselect) {
              _this.props.onItemDeselect(e);
            }
          }
        });
        _defineProperty(_assertThisInitialized(_this), "doubleClickItem", function(item, e) {
          if (_this.props.onItemDoubleClick) {
            var time = _this.timeFromItemEvent(e);
            _this.props.onItemDoubleClick(item, e, time);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "contextMenuClickItem", function(item, e) {
          if (_this.props.onItemContextMenu) {
            var time = _this.timeFromItemEvent(e);
            _this.props.onItemContextMenu(item, e, time);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getTimeFromRowClickEvent", function(e) {
          var _this$props2 = _this.props, dragSnap = _this$props2.dragSnap, buffer = _this$props2.buffer;
          var _this$state3 = _this.state, width = _this$state3.width, canvasTimeStart = _this$state3.canvasTimeStart, canvasTimeEnd = _this$state3.canvasTimeEnd;
          var offsetX = e.nativeEvent.offsetX;
          var time = (0, _calendar.calculateTimeForXPosition)(canvasTimeStart, canvasTimeEnd, (0, _calendar.getCanvasWidth)(width, buffer), offsetX);
          time = Math.floor(time / dragSnap) * dragSnap;
          return time;
        });
        _defineProperty(_assertThisInitialized(_this), "timeFromItemEvent", function(e) {
          var _this$state4 = _this.state, width = _this$state4.width, visibleTimeStart = _this$state4.visibleTimeStart, visibleTimeEnd = _this$state4.visibleTimeEnd;
          var dragSnap = _this.props.dragSnap;
          var scrollComponent = _this.scrollComponent;
          var _scrollComponent$getB = scrollComponent.getBoundingClientRect(), scrollX = _scrollComponent$getB.left;
          var xRelativeToTimeline = e.clientX - scrollX;
          var relativeItemPosition = xRelativeToTimeline / width;
          var zoom = visibleTimeEnd - visibleTimeStart;
          var timeOffset = relativeItemPosition * zoom;
          var time = Math.round(visibleTimeStart + timeOffset);
          time = Math.floor(time / dragSnap) * dragSnap;
          return time;
        });
        _defineProperty(_assertThisInitialized(_this), "dragItem", function(item, dragTime, newGroupOrder) {
          var newGroup = _this.props.groups[newGroupOrder];
          var keys2 = _this.props.keys;
          _this.setState({
            draggingItem: item,
            dragTime,
            newGroupOrder,
            dragGroupTitle: newGroup ? (0, _generic._get)(newGroup, keys2.groupLabelKey) : ""
          });
          _this.updatingItem({
            eventType: "move",
            itemId: item,
            time: dragTime,
            newGroupOrder
          });
        });
        _defineProperty(_assertThisInitialized(_this), "dropItem", function(item, dragTime, newGroupOrder) {
          _this.setState({
            draggingItem: null,
            dragTime: null,
            dragGroupTitle: null
          });
          if (_this.props.onItemMove) {
            _this.props.onItemMove(item, dragTime, newGroupOrder);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "resizingItem", function(item, resizeTime, edge) {
          _this.setState({
            resizingItem: item,
            resizingEdge: edge,
            resizeTime
          });
          _this.updatingItem({
            eventType: "resize",
            itemId: item,
            time: resizeTime,
            edge
          });
        });
        _defineProperty(_assertThisInitialized(_this), "resizedItem", function(item, resizeTime, edge, timeDelta) {
          _this.setState({
            resizingItem: null,
            resizingEdge: null,
            resizeTime: null
          });
          if (_this.props.onItemResize && timeDelta !== 0) {
            _this.props.onItemResize(item, resizeTime, edge);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "updatingItem", function(_ref) {
          var eventType = _ref.eventType, itemId = _ref.itemId, time = _ref.time, edge = _ref.edge, newGroupOrder = _ref.newGroupOrder;
          if (_this.props.onItemDrag) {
            _this.props.onItemDrag({
              eventType,
              itemId,
              time,
              edge,
              newGroupOrder
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleRowClick", function(e, rowIndex) {
          if (_this.hasSelectedItem()) {
            _this.selectItem(null);
          }
          if (_this.props.onCanvasClick == null)
            return;
          var time = _this.getTimeFromRowClickEvent(e);
          var groupId = (0, _generic._get)(_this.props.groups[rowIndex], _this.props.keys.groupIdKey);
          _this.props.onCanvasClick(groupId, time, e);
        });
        _defineProperty(_assertThisInitialized(_this), "handleRowDoubleClick", function(e, rowIndex) {
          if (_this.props.onCanvasDoubleClick == null)
            return;
          var time = _this.getTimeFromRowClickEvent(e);
          var groupId = (0, _generic._get)(_this.props.groups[rowIndex], _this.props.keys.groupIdKey);
          _this.props.onCanvasDoubleClick(groupId, time, e);
        });
        _defineProperty(_assertThisInitialized(_this), "handleScrollContextMenu", function(e, rowIndex) {
          if (_this.props.onCanvasContextMenu == null)
            return;
          var timePosition = _this.getTimeFromRowClickEvent(e);
          var groupId = (0, _generic._get)(_this.props.groups[rowIndex], _this.props.keys.groupIdKey);
          if (_this.props.onCanvasContextMenu) {
            e.preventDefault();
            _this.props.onCanvasContextMenu(groupId, timePosition, e);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleHeaderRef", function(el) {
          _this.scrollHeaderRef = el;
          _this.props.headerRef(el);
        });
        _defineProperty(_assertThisInitialized(_this), "isTimelineHeader", function(child) {
          if (child.type === void 0)
            return false;
          return child.type.secretKey === _TimelineHeaders["default"].secretKey;
        });
        _defineProperty(_assertThisInitialized(_this), "renderHeaders", function() {
          if (_this.props.children) {
            var headerRenderer;
            _react["default"].Children.map(_this.props.children, function(child) {
              if (_this.isTimelineHeader(child)) {
                headerRenderer = child;
              }
            });
            if (headerRenderer) {
              return headerRenderer;
            }
          }
          return _react["default"].createElement(_TimelineHeaders["default"], null, _react["default"].createElement(_DateHeader["default"], {
            unit: "primaryHeader"
          }), _react["default"].createElement(_DateHeader["default"], null));
        });
        _defineProperty(_assertThisInitialized(_this), "getScrollElementRef", function(el) {
          _this.props.scrollRef(el);
          _this.scrollComponent = el;
        });
        _this.getSelected = _this.getSelected.bind(_assertThisInitialized(_this));
        _this.hasSelectedItem = _this.hasSelectedItem.bind(_assertThisInitialized(_this));
        _this.isItemSelected = _this.isItemSelected.bind(_assertThisInitialized(_this));
        var _visibleTimeStart = null;
        var _visibleTimeEnd = null;
        if (_this.props.defaultTimeStart && _this.props.defaultTimeEnd) {
          _visibleTimeStart = _this.props.defaultTimeStart.valueOf();
          _visibleTimeEnd = _this.props.defaultTimeEnd.valueOf();
        } else if (_this.props.visibleTimeStart && _this.props.visibleTimeEnd) {
          _visibleTimeStart = _this.props.visibleTimeStart;
          _visibleTimeEnd = _this.props.visibleTimeEnd;
        } else {
          throw new Error('You must provide either "defaultTimeStart" and "defaultTimeEnd" or "visibleTimeStart" and "visibleTimeEnd" to initialize the Timeline');
        }
        var _getCanvasBoundariesF = (0, _calendar.getCanvasBoundariesFromVisibleTime)(_visibleTimeStart, _visibleTimeEnd, _props.buffer), _getCanvasBoundariesF2 = _slicedToArray(_getCanvasBoundariesF, 2), _canvasTimeStart = _getCanvasBoundariesF2[0], _canvasTimeEnd = _getCanvasBoundariesF2[1];
        _this.state = {
          width: 1e3,
          visibleTimeStart: _visibleTimeStart,
          visibleTimeEnd: _visibleTimeEnd,
          canvasTimeStart: _canvasTimeStart,
          canvasTimeEnd: _canvasTimeEnd,
          selectedItem: null,
          dragTime: null,
          dragGroupTitle: null,
          resizeTime: null,
          resizingItem: null,
          resizingEdge: null
        };
        var _canvasWidth = (0, _calendar.getCanvasWidth)(_this.state.width, _props.buffer);
        var _stackTimelineItems2 = (0, _calendar.stackTimelineItems)(_props.items, _props.groups, _canvasWidth, _this.state.canvasTimeStart, _this.state.canvasTimeEnd, _props.keys, _props.lineHeight, _props.itemHeightRatio, _props.stackItems, _this.state.draggingItem, _this.state.resizingItem, _this.state.dragTime, _this.state.resizingEdge, _this.state.resizeTime, _this.state.newGroupOrder), _dimensionItems = _stackTimelineItems2.dimensionItems, _height = _stackTimelineItems2.height, _groupHeights = _stackTimelineItems2.groupHeights, _groupTops = _stackTimelineItems2.groupTops;
        _this.state.dimensionItems = _dimensionItems;
        _this.state.height = _height;
        _this.state.groupHeights = _groupHeights;
        _this.state.groupTops = _groupTops;
        return _this;
      }
      _createClass(ReactCalendarTimeline2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.resize(this.props);
          if (this.props.resizeDetector && this.props.resizeDetector.addListener) {
            this.props.resizeDetector.addListener(this);
          }
          _window["default"].addListener(this);
          this.lastTouchDistance = null;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.props.resizeDetector && this.props.resizeDetector.addListener) {
            this.props.resizeDetector.removeListener(this);
          }
          _window["default"].removeListener(this);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          var newZoom = this.state.visibleTimeEnd - this.state.visibleTimeStart;
          var oldZoom = prevState.visibleTimeEnd - prevState.visibleTimeStart;
          if (this.props.onZoom && newZoom !== oldZoom) {
            this.props.onZoom(this.getTimelineContext(), this.getTimelineUnit());
          }
          if (this.props.onBoundsChange && this.state.canvasTimeStart !== prevState.canvasTimeStart) {
            this.props.onBoundsChange(this.state.canvasTimeStart, this.state.canvasTimeStart + newZoom * 3);
          }
          var scrollLeft = Math.round(this.state.width * (this.state.visibleTimeStart - this.state.canvasTimeStart) / newZoom);
          var componentScrollLeft = Math.round(prevState.width * (prevState.visibleTimeStart - prevState.canvasTimeStart) / oldZoom);
          if (componentScrollLeft !== scrollLeft) {
            this.scrollComponent.scrollLeft = scrollLeft;
            this.scrollHeaderRef.scrollLeft = scrollLeft;
          }
        }
      }, {
        key: "columns",
        value: function columns(canvasTimeStart, canvasTimeEnd, canvasWidth, minUnit, timeSteps, height) {
          return _react["default"].createElement(_Columns["default"], {
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            lineCount: (0, _generic._length)(this.props.groups),
            minUnit,
            timeSteps,
            height,
            verticalLineClassNamesForTime: this.props.verticalLineClassNamesForTime
          });
        }
      }, {
        key: "rows",
        value: function rows(canvasWidth, groupHeights, groups) {
          return _react["default"].createElement(_GroupRows["default"], {
            groups,
            canvasWidth,
            lineCount: (0, _generic._length)(this.props.groups),
            groupHeights,
            clickTolerance: this.props.clickTolerance,
            onRowClick: this.handleRowClick,
            onRowDoubleClick: this.handleRowDoubleClick,
            horizontalLineClassNamesForGroup: this.props.horizontalLineClassNamesForGroup,
            onRowContextClick: this.handleScrollContextMenu
          });
        }
      }, {
        key: "items",
        value: function items(canvasTimeStart, zoom, canvasTimeEnd, canvasWidth, minUnit, dimensionItems, groupHeights, groupTops) {
          return _react["default"].createElement(_Items["default"], {
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            dimensionItems,
            groupTops,
            items: this.props.items,
            groups: this.props.groups,
            keys: this.props.keys,
            selectedItem: this.state.selectedItem,
            dragSnap: this.props.dragSnap,
            minResizeWidth: this.props.minResizeWidth,
            canChangeGroup: this.props.canChangeGroup,
            canMove: this.props.canMove,
            canResize: this.props.canResize,
            useResizeHandle: this.props.useResizeHandle,
            canSelect: this.props.canSelect,
            moveResizeValidator: this.props.moveResizeValidator,
            itemSelect: this.selectItem,
            itemDrag: this.dragItem,
            itemDrop: this.dropItem,
            onItemDoubleClick: this.doubleClickItem,
            onItemContextMenu: this.props.onItemContextMenu ? this.contextMenuClickItem : void 0,
            itemResizing: this.resizingItem,
            itemResized: this.resizedItem,
            itemRenderer: this.props.itemRenderer,
            selected: this.props.selected,
            scrollRef: this.scrollComponent
          });
        }
      }, {
        key: "sidebar",
        value: function sidebar(height, groupHeights) {
          var sidebarWidth = this.props.sidebarWidth;
          return sidebarWidth && _react["default"].createElement(_Sidebar["default"], {
            groups: this.props.groups,
            groupRenderer: this.props.groupRenderer,
            keys: this.props.keys,
            width: sidebarWidth,
            groupHeights,
            height
          });
        }
      }, {
        key: "rightSidebar",
        value: function rightSidebar(height, groupHeights) {
          var rightSidebarWidth = this.props.rightSidebarWidth;
          return rightSidebarWidth && _react["default"].createElement(_Sidebar["default"], {
            groups: this.props.groups,
            keys: this.props.keys,
            groupRenderer: this.props.groupRenderer,
            isRightSidebar: true,
            width: rightSidebarWidth,
            groupHeights,
            height
          });
        }
        /**
         * check if child of type TimelineHeader
         * refer to for explanation https://github.com/gaearon/react-hot-loader#checking-element-types
         */
      }, {
        key: "childrenWithProps",
        value: function childrenWithProps(canvasTimeStart, canvasTimeEnd, canvasWidth, dimensionItems, groupHeights, groupTops, height, visibleTimeStart, visibleTimeEnd, minUnit, timeSteps) {
          var _this3 = this;
          if (!this.props.children) {
            return null;
          }
          var childArray = Array.isArray(this.props.children) ? this.props.children.filter(function(c) {
            return c;
          }) : [this.props.children];
          var childProps = {
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            visibleTimeStart,
            visibleTimeEnd,
            dimensionItems,
            items: this.props.items,
            groups: this.props.groups,
            keys: this.props.keys,
            groupHeights,
            groupTops,
            selected: this.getSelected(),
            height,
            minUnit,
            timeSteps
          };
          return _react["default"].Children.map(childArray, function(child) {
            if (!_this3.isTimelineHeader(child)) {
              return _react["default"].cloneElement(child, childProps);
            } else {
              return null;
            }
          });
        }
      }, {
        key: "getSelected",
        value: function getSelected() {
          return this.state.selectedItem && !this.props.selected ? [this.state.selectedItem] : this.props.selected || [];
        }
      }, {
        key: "hasSelectedItem",
        value: function hasSelectedItem() {
          if (!Array.isArray(this.props.selected))
            return !!this.state.selectedItem;
          return this.props.selected.length > 0;
        }
      }, {
        key: "isItemSelected",
        value: function isItemSelected(itemId) {
          var selectedItems = this.getSelected();
          return selectedItems.some(function(i) {
            return i === itemId;
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this4 = this;
          var _this$props3 = this.props, items = _this$props3.items, groups = _this$props3.groups, sidebarWidth = _this$props3.sidebarWidth, rightSidebarWidth = _this$props3.rightSidebarWidth, timeSteps = _this$props3.timeSteps, traditionalZoom = _this$props3.traditionalZoom, buffer = _this$props3.buffer;
          var _this$state5 = this.state, draggingItem = _this$state5.draggingItem, resizingItem = _this$state5.resizingItem, width = _this$state5.width, visibleTimeStart = _this$state5.visibleTimeStart, visibleTimeEnd = _this$state5.visibleTimeEnd, canvasTimeStart = _this$state5.canvasTimeStart, canvasTimeEnd = _this$state5.canvasTimeEnd;
          var _this$state6 = this.state, dimensionItems = _this$state6.dimensionItems, height = _this$state6.height, groupHeights = _this$state6.groupHeights, groupTops = _this$state6.groupTops;
          var zoom = visibleTimeEnd - visibleTimeStart;
          var canvasWidth = (0, _calendar.getCanvasWidth)(width, buffer);
          var minUnit = (0, _calendar.getMinUnit)(zoom, width, timeSteps);
          var isInteractingWithItem = !!draggingItem || !!resizingItem;
          if (isInteractingWithItem) {
            var stackResults = (0, _calendar.stackTimelineItems)(items, groups, canvasWidth, this.state.canvasTimeStart, this.state.canvasTimeEnd, this.props.keys, this.props.lineHeight, this.props.itemHeightRatio, this.props.stackItems, this.state.draggingItem, this.state.resizingItem, this.state.dragTime, this.state.resizingEdge, this.state.resizeTime, this.state.newGroupOrder);
            dimensionItems = stackResults.dimensionItems;
            height = stackResults.height;
            groupHeights = stackResults.groupHeights;
            groupTops = stackResults.groupTops;
          }
          var outerComponentStyle = {
            height: "".concat(height, "px")
          };
          return _react["default"].createElement(_TimelineStateContext.TimelineStateProvider, {
            visibleTimeStart,
            visibleTimeEnd,
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            showPeriod: this.showPeriod,
            timelineUnit: minUnit,
            timelineWidth: this.state.width
          }, _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersProvider, null, _react["default"].createElement(_HeadersContext.TimelineHeadersProvider, {
            registerScroll: this.handleHeaderRef,
            timeSteps,
            leftSidebarWidth: this.props.sidebarWidth,
            rightSidebarWidth: this.props.rightSidebarWidth
          }, _react["default"].createElement("div", {
            style: this.props.style,
            ref: function ref(el) {
              return _this4.container = el;
            },
            className: "react-calendar-timeline ".concat(this.props.className)
          }, this.renderHeaders(), _react["default"].createElement("div", {
            style: outerComponentStyle,
            className: "rct-outer"
          }, sidebarWidth > 0 ? this.sidebar(height, groupHeights) : null, _react["default"].createElement(_ScrollElement["default"], {
            scrollRef: this.getScrollElementRef,
            width,
            height,
            onZoom: this.changeZoom,
            onWheelZoom: this.handleWheelZoom,
            traditionalZoom,
            onScroll: this.onScroll,
            isInteractingWithItem
          }, _react["default"].createElement(_MarkerCanvas["default"], null, this.columns(canvasTimeStart, canvasTimeEnd, canvasWidth, minUnit, timeSteps, height), this.rows(canvasWidth, groupHeights, groups), this.items(canvasTimeStart, zoom, canvasTimeEnd, canvasWidth, minUnit, dimensionItems, groupHeights, groupTops), this.childrenWithProps(canvasTimeStart, canvasTimeEnd, canvasWidth, dimensionItems, groupHeights, groupTops, height, visibleTimeStart, visibleTimeEnd, minUnit, timeSteps))), rightSidebarWidth > 0 ? this.rightSidebar(height, groupHeights) : null)))));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var visibleTimeStart = nextProps.visibleTimeStart, visibleTimeEnd = nextProps.visibleTimeEnd, items = nextProps.items, groups = nextProps.groups;
          var derivedState = {
            items,
            groups
            // if the items or groups have changed we must re-render
          };
          var forceUpdate = items !== prevState.items || groups !== prevState.groups;
          if (visibleTimeStart && visibleTimeEnd) {
            Object.assign(derivedState, (0, _calendar.calculateScrollCanvas)(visibleTimeStart, visibleTimeEnd, forceUpdate, items, groups, nextProps, prevState));
          } else if (forceUpdate) {
            var canvasWidth = (0, _calendar.getCanvasWidth)(prevState.width, nextProps.buffer);
            Object.assign(derivedState, (0, _calendar.stackTimelineItems)(items, groups, canvasWidth, prevState.canvasTimeStart, prevState.canvasTimeEnd, nextProps.keys, nextProps.lineHeight, nextProps.itemHeightRatio, nextProps.stackItems, prevState.draggingItem, prevState.resizingItem, prevState.dragTime, prevState.resizingEdge, prevState.resizeTime, prevState.newGroupOrder));
          }
          return derivedState;
        }
      }]);
      return ReactCalendarTimeline2;
    }(_react.Component);
    exports["default"] = ReactCalendarTimeline;
    _defineProperty(ReactCalendarTimeline, "propTypes", {
      groups: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      items: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      sidebarWidth: _propTypes["default"].number,
      rightSidebarWidth: _propTypes["default"].number,
      dragSnap: _propTypes["default"].number,
      minResizeWidth: _propTypes["default"].number,
      lineHeight: _propTypes["default"].number,
      itemHeightRatio: _propTypes["default"].number,
      minZoom: _propTypes["default"].number,
      maxZoom: _propTypes["default"].number,
      buffer: _propTypes["default"].number,
      clickTolerance: _propTypes["default"].number,
      canChangeGroup: _propTypes["default"].bool,
      canMove: _propTypes["default"].bool,
      canResize: _propTypes["default"].oneOf([true, false, "left", "right", "both"]),
      useResizeHandle: _propTypes["default"].bool,
      canSelect: _propTypes["default"].bool,
      stackItems: _propTypes["default"].bool,
      traditionalZoom: _propTypes["default"].bool,
      itemTouchSendsClick: _propTypes["default"].bool,
      horizontalLineClassNamesForGroup: _propTypes["default"].func,
      onItemMove: _propTypes["default"].func,
      onItemResize: _propTypes["default"].func,
      onItemClick: _propTypes["default"].func,
      onItemSelect: _propTypes["default"].func,
      onItemDeselect: _propTypes["default"].func,
      onCanvasClick: _propTypes["default"].func,
      onItemDoubleClick: _propTypes["default"].func,
      onItemContextMenu: _propTypes["default"].func,
      onCanvasDoubleClick: _propTypes["default"].func,
      onCanvasContextMenu: _propTypes["default"].func,
      onZoom: _propTypes["default"].func,
      onItemDrag: _propTypes["default"].func,
      moveResizeValidator: _propTypes["default"].func,
      itemRenderer: _propTypes["default"].func,
      groupRenderer: _propTypes["default"].func,
      className: _propTypes["default"].string,
      style: _propTypes["default"].object,
      keys: _propTypes["default"].shape({
        groupIdKey: _propTypes["default"].string,
        groupTitleKey: _propTypes["default"].string,
        groupLabelKey: _propTypes["default"].string,
        groupRightTitleKey: _propTypes["default"].string,
        itemIdKey: _propTypes["default"].string,
        itemTitleKey: _propTypes["default"].string,
        itemDivTitleKey: _propTypes["default"].string,
        itemGroupKey: _propTypes["default"].string,
        itemTimeStartKey: _propTypes["default"].string,
        itemTimeEndKey: _propTypes["default"].string
      }),
      headerRef: _propTypes["default"].func,
      scrollRef: _propTypes["default"].func,
      timeSteps: _propTypes["default"].shape({
        second: _propTypes["default"].number,
        minute: _propTypes["default"].number,
        hour: _propTypes["default"].number,
        day: _propTypes["default"].number,
        month: _propTypes["default"].number,
        year: _propTypes["default"].number
      }),
      defaultTimeStart: _propTypes["default"].object,
      defaultTimeEnd: _propTypes["default"].object,
      visibleTimeStart: _propTypes["default"].number,
      visibleTimeEnd: _propTypes["default"].number,
      onTimeChange: _propTypes["default"].func,
      onBoundsChange: _propTypes["default"].func,
      selected: _propTypes["default"].array,
      resizeDetector: _propTypes["default"].shape({
        addListener: _propTypes["default"].func,
        removeListener: _propTypes["default"].func
      }),
      verticalLineClassNamesForTime: _propTypes["default"].func,
      children: _propTypes["default"].node
    });
    _defineProperty(ReactCalendarTimeline, "defaultProps", {
      sidebarWidth: 150,
      rightSidebarWidth: 0,
      dragSnap: 1e3 * 60 * 15,
      // 15min
      minResizeWidth: 20,
      lineHeight: 30,
      itemHeightRatio: 0.65,
      buffer: 3,
      minZoom: 60 * 60 * 1e3,
      // 1 hour
      maxZoom: 5 * 365.24 * 86400 * 1e3,
      // 5 years
      clickTolerance: 3,
      // how many pixels can we drag for it to be still considered a click?
      canChangeGroup: true,
      canMove: true,
      canResize: "right",
      useResizeHandle: false,
      canSelect: true,
      stackItems: false,
      traditionalZoom: false,
      horizontalLineClassNamesForGroup: null,
      onItemMove: null,
      onItemResize: null,
      onItemClick: null,
      onItemSelect: null,
      onItemDeselect: null,
      onItemDrag: null,
      onCanvasClick: null,
      onItemDoubleClick: null,
      onItemContextMenu: null,
      onZoom: null,
      verticalLineClassNamesForTime: null,
      moveResizeValidator: null,
      dayBackground: null,
      defaultTimeStart: null,
      defaultTimeEnd: null,
      itemTouchSendsClick: false,
      style: {},
      className: "",
      keys: _defaultConfig.defaultKeys,
      timeSteps: _defaultConfig.defaultTimeSteps,
      headerRef: function headerRef() {
      },
      scrollRef: function scrollRef() {
      },
      // if you pass in visibleTimeStart and visibleTimeEnd, you must also pass onTimeChange(visibleTimeStart, visibleTimeEnd),
      // which needs to update the props visibleTimeStart and visibleTimeEnd to the ones passed
      visibleTimeStart: null,
      visibleTimeEnd: null,
      onTimeChange: function onTimeChange(visibleTimeStart, visibleTimeEnd, updateScrollCanvas) {
        updateScrollCanvas(visibleTimeStart, visibleTimeEnd);
      },
      // called when the canvas area of the calendar changes
      onBoundsChange: null,
      children: null,
      selected: null
    });
    _defineProperty(ReactCalendarTimeline, "childContextTypes", {
      getTimelineContext: _propTypes["default"].func
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/TimelineMarkers.js
var require_TimelineMarkers = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/TimelineMarkers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var TimelineMarkers = function TimelineMarkers2(props) {
      return props.children || null;
    };
    var _default = TimelineMarkers;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/TodayMarker.js
var require_TodayMarker2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/TodayMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var TodayMarker = function(_React$Component) {
      _inherits(TodayMarker2, _React$Component);
      function TodayMarker2() {
        _classCallCheck(this, TodayMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(TodayMarker2).apply(this, arguments));
      }
      _createClass(TodayMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props$subscribe = this.props.subscribeMarker({
            type: _markerType.TimelineMarkerType.Today,
            renderer: this.props.children,
            interval: this.props.interval
          }), unsubscribe = _this$props$subscribe.unsubscribe, getMarker = _this$props$subscribe.getMarker;
          this.unsubscribe = unsubscribe;
          this.getMarker = getMarker;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (prevProps.interval !== this.props.interval && this.getMarker) {
            var marker = this.getMarker();
            this.props.updateMarker(_objectSpread({}, marker, {
              interval: this.props.interval
            }));
          }
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return TodayMarker2;
    }(_react["default"].Component);
    _defineProperty(TodayMarker, "propTypes", {
      subscribeMarker: _propTypes["default"].func.isRequired,
      updateMarker: _propTypes["default"].func.isRequired,
      interval: _propTypes["default"].number,
      children: _propTypes["default"].func
    });
    _defineProperty(TodayMarker, "defaultProps", {
      interval: 1e3 * 10
      // default to ten seconds
    });
    var TodayMarkerWrapper = function TodayMarkerWrapper2(props) {
      return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref) {
        var subscribeMarker = _ref.subscribeMarker, updateMarker = _ref.updateMarker;
        return _react["default"].createElement(TodayMarker, _extends({
          subscribeMarker,
          updateMarker
        }, props));
      });
    };
    TodayMarkerWrapper.displayName = "TodayMarkerWrapper";
    var _default = TodayMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/CustomMarker.js
var require_CustomMarker2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/CustomMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var CustomMarker = function(_React$Component) {
      _inherits(CustomMarker2, _React$Component);
      function CustomMarker2() {
        _classCallCheck(this, CustomMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(CustomMarker2).apply(this, arguments));
      }
      _createClass(CustomMarker2, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (prevProps.date !== this.props.date && this.getMarker) {
            var marker = this.getMarker();
            this.props.updateMarker(_objectSpread({}, marker, {
              date: this.props.date
            }));
          }
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props$subscribe = this.props.subscribeMarker({
            type: _markerType.TimelineMarkerType.Custom,
            renderer: this.props.children,
            date: this.props.date
          }), unsubscribe = _this$props$subscribe.unsubscribe, getMarker = _this$props$subscribe.getMarker;
          this.unsubscribe = unsubscribe;
          this.getMarker = getMarker;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return CustomMarker2;
    }(_react["default"].Component);
    _defineProperty(CustomMarker, "propTypes", {
      subscribeMarker: _propTypes["default"].func.isRequired,
      updateMarker: _propTypes["default"].func.isRequired,
      children: _propTypes["default"].func,
      date: _propTypes["default"].number.isRequired
    });
    var CustomMarkerWrapper = function CustomMarkerWrapper2(props) {
      return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref) {
        var subscribeMarker = _ref.subscribeMarker, updateMarker = _ref.updateMarker;
        return _react["default"].createElement(CustomMarker, _extends({
          subscribeMarker,
          updateMarker
        }, props));
      });
    };
    CustomMarkerWrapper.displayName = "CustomMarkerWrapper";
    var _default = CustomMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/CursorMarker.js
var require_CursorMarker2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/CursorMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var CursorMarker = function(_React$Component) {
      _inherits(CursorMarker2, _React$Component);
      function CursorMarker2() {
        _classCallCheck(this, CursorMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(CursorMarker2).apply(this, arguments));
      }
      _createClass(CursorMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props$subscribe = this.props.subscribeMarker({
            type: _markerType.TimelineMarkerType.Cursor,
            renderer: this.props.children
          }), unsubscribe = _this$props$subscribe.unsubscribe;
          this.unsubscribe = unsubscribe;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return CursorMarker2;
    }(_react["default"].Component);
    _defineProperty(CursorMarker, "propTypes", {
      subscribeMarker: _propTypes["default"].func.isRequired,
      children: _propTypes["default"].func
    });
    var CursorMarkerWrapper = function CursorMarkerWrapper2(props) {
      return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref) {
        var subscribeMarker = _ref.subscribeMarker;
        return _react["default"].createElement(CursorMarker, _extends({
          subscribeMarker
        }, props));
      });
    };
    CursorMarkerWrapper.displayName = "CursorMarkerWrapper";
    var _default = CursorMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "TimelineMarkers", {
      enumerable: true,
      get: function get2() {
        return _TimelineMarkers["default"];
      }
    });
    Object.defineProperty(exports, "TodayMarker", {
      enumerable: true,
      get: function get2() {
        return _TodayMarker["default"];
      }
    });
    Object.defineProperty(exports, "CustomMarker", {
      enumerable: true,
      get: function get2() {
        return _CustomMarker["default"];
      }
    });
    Object.defineProperty(exports, "CursorMarker", {
      enumerable: true,
      get: function get2() {
        return _CursorMarker["default"];
      }
    });
    Object.defineProperty(exports, "TimelineHeaders", {
      enumerable: true,
      get: function get2() {
        return _TimelineHeaders["default"];
      }
    });
    Object.defineProperty(exports, "SidebarHeader", {
      enumerable: true,
      get: function get2() {
        return _SidebarHeader["default"];
      }
    });
    Object.defineProperty(exports, "CustomHeader", {
      enumerable: true,
      get: function get2() {
        return _CustomHeader["default"];
      }
    });
    Object.defineProperty(exports, "DateHeader", {
      enumerable: true,
      get: function get2() {
        return _DateHeader["default"];
      }
    });
    exports["default"] = void 0;
    var _Timeline = _interopRequireDefault(require_Timeline());
    var _TimelineMarkers = _interopRequireDefault(require_TimelineMarkers());
    var _TodayMarker = _interopRequireDefault(require_TodayMarker2());
    var _CustomMarker = _interopRequireDefault(require_CustomMarker2());
    var _CursorMarker = _interopRequireDefault(require_CursorMarker2());
    var _TimelineHeaders = _interopRequireDefault(require_TimelineHeaders());
    var _SidebarHeader = _interopRequireDefault(require_SidebarHeader());
    var _CustomHeader = _interopRequireDefault(require_CustomHeader());
    var _DateHeader = _interopRequireDefault(require_DateHeader());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _default = _Timeline["default"];
    exports["default"] = _default;
  }
});
export default require_lib2();
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

moment/dist/moment.js:
  (*! moment.js *)
  (*! version : 2.29.4 *)
  (*! authors : Tim Wood, Iskren Chernev, Moment.js contributors *)
  (*! license : MIT *)
  (*! momentjs.com *)

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=react-calendar-timeline.js.map
